[{"C:\\Application\\firstProject\\my-app\\src\\index.js":"1","C:\\Application\\firstProject\\my-app\\src\\reportWebVitals.js":"2","C:\\Application\\firstProject\\my-app\\src\\App.js":"3","C:\\Application\\firstProject\\my-app\\src\\Footer\\Footer.js":"4","C:\\Application\\firstProject\\my-app\\src\\Article\\Main\\Main.js":"5","C:\\Application\\firstProject\\my-app\\src\\Article\\Message\\Message.js":"6","C:\\Application\\firstProject\\my-app\\src\\Article\\Audio\\Audio.js":"7","C:\\Application\\firstProject\\my-app\\src\\Article\\Video\\Video.js":"8","C:\\Application\\firstProject\\my-app\\src\\Login\\ContainerLogin.js":"9","C:\\Application\\firstProject\\my-app\\src\\Login\\Login.js":"10","C:\\Application\\firstProject\\my-app\\src\\HOCS\\withCheckAuth.js":"11","C:\\Application\\firstProject\\my-app\\src\\Loader.js":"12","C:\\Application\\firstProject\\my-app\\src\\Bricks\\Textarea.js":"13","C:\\Application\\firstProject\\my-app\\src\\Validates\\ValidateForText.js":"14","C:\\Application\\firstProject\\my-app\\src\\Bricks\\LoginInput.js":"15","C:\\Application\\firstProject\\my-app\\src\\Bricks\\TextareaUp.js":"16","C:\\Application\\firstProject\\my-app\\src\\Redux\\Selectors\\userSelector.js":"17","C:\\Application\\firstProject\\my-app\\src\\Redux\\Selectors\\mainSelector.js":"18","C:\\Application\\firstProject\\my-app\\src\\Redux\\Selectors\\messageSelector.js":"19","C:\\Application\\firstProject\\my-app\\src\\Article\\Main\\MainHooks.js":"20","C:\\Application\\firstProject\\my-app\\src\\Redux\\Selectors\\photoSelector.js":"21","C:\\Application\\firstProject\\my-app\\src\\Redux\\Selectors\\videoSelector.js":"22","C:\\Application\\firstProject\\my-app\\src\\Redux\\Selectors\\audioSelector.js":"23","C:\\Application\\firstProject\\my-app\\src\\Redux\\Selectors\\groupSelector.js":"24","C:\\Application\\firstProject\\my-app\\src\\Redux\\Selectors\\friendSelector.js":"25","C:\\Application\\firstProject\\my-app\\src\\Bricks\\Pagination.js":"26","C:\\Application\\firstProject\\my-app\\src\\HOCS\\withSuspense.js":"27","C:\\Application\\firstProject\\my-app\\src\\Article\\Edit\\Edit.js":"28","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceVideo.ts":"29","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reducePhoto.ts":"30","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceMessage.ts":"31","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceMenu.ts":"32","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceMain.ts":"33","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceEdit.ts":"34","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceApp.ts":"35","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceFriends.ts":"36","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceGroups.ts":"37","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceAudio.ts":"38","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceAddFriend.ts":"39","C:\\Application\\firstProject\\my-app\\src\\Article\\Photo\\PhotoTemplate.tsx":"40","C:\\Application\\firstProject\\my-app\\src\\Article\\Photo\\Photo.jsx":"41","C:\\Application\\firstProject\\my-app\\src\\Redux\\Redux.ts":"42","C:\\Application\\firstProject\\my-app\\src\\Article\\Audio\\ContainerAudio.tsx":"43","C:\\Application\\firstProject\\my-app\\src\\Article\\Main\\ContainerMain.tsx":"44","C:\\Application\\firstProject\\my-app\\src\\Article\\Message\\ContainerMessage.tsx":"45","C:\\Application\\firstProject\\my-app\\src\\Article\\Video\\ContainerVideo.tsx":"46","C:\\Application\\firstProject\\my-app\\src\\Article\\Groups\\ContainerGroups.tsx":"47","C:\\Application\\firstProject\\my-app\\src\\Article\\Edit\\ContainerEdit.tsx":"48","C:\\Application\\firstProject\\my-app\\src\\Article\\Friends\\ContainerFriends.tsx":"49","C:\\Application\\firstProject\\my-app\\src\\Article\\Friends\\AddFriend\\ContainerAddFriend.tsx":"50","C:\\Application\\firstProject\\my-app\\src\\Article\\Photo\\ContainerPhoto.tsx":"51","C:\\Application\\firstProject\\my-app\\src\\Article\\Groups\\Groups.tsx":"52","C:\\Application\\firstProject\\my-app\\src\\Article\\Friends\\Friends.tsx":"53","C:\\Application\\firstProject\\my-app\\src\\Article\\Friends\\AddFriend\\SuggestFriend.tsx":"54","C:\\Application\\firstProject\\my-app\\src\\Article\\Friends\\AddFriend\\AddFriend.tsx":"55","C:\\Application\\firstProject\\my-app\\src\\Article\\Main\\Post.tsx":"56","C:\\Application\\firstProject\\my-app\\src\\Article\\Message\\singleMessage.tsx":"57","C:\\Application\\firstProject\\my-app\\src\\Article\\Message\\People.tsx":"58","C:\\Application\\firstProject\\my-app\\src\\Article\\Video\\VideoTemplate.tsx":"59","C:\\Application\\firstProject\\my-app\\src\\Article\\Video\\ContainerVideoTemplate.tsx":"60","C:\\Application\\firstProject\\my-app\\src\\Article\\Friends\\Friend.tsx":"61","C:\\Application\\firstProject\\my-app\\src\\Article\\Audio\\ContainerAudioTemplate.tsx":"62","C:\\Application\\firstProject\\my-app\\src\\Article\\Groups\\Group.tsx":"63","C:\\Application\\firstProject\\my-app\\src\\Article\\Photo\\ContainerPhotoTemplate.tsx":"64","C:\\Application\\firstProject\\my-app\\src\\Article\\Audio\\AudioTemplate.tsx":"65","C:\\Application\\firstProject\\my-app\\src\\Types\\types.ts":"66","C:\\Application\\firstProject\\my-app\\src\\Header\\ContainerHeader.tsx":"67","C:\\Application\\firstProject\\my-app\\src\\Aside\\Aside.tsx":"68","C:\\Application\\firstProject\\my-app\\src\\Header\\Header.tsx":"69","C:\\Application\\firstProject\\my-app\\src\\API\\API.ts":"70","C:\\Application\\firstProject\\my-app\\src\\Article\\Friends\\AddFriend\\SearchBar.tsx":"71"},{"size":670,"mtime":1612697388027,"results":"72","hashOfConfig":"73"},{"size":362,"mtime":499162500000,"results":"74","hashOfConfig":"73"},{"size":3448,"mtime":1612895352022,"results":"75","hashOfConfig":"73"},{"size":152,"mtime":1612159104454,"results":"76","hashOfConfig":"73"},{"size":5024,"mtime":1612294605319,"results":"77","hashOfConfig":"73"},{"size":1893,"mtime":1611947941518,"results":"78","hashOfConfig":"73"},{"size":2412,"mtime":1613990838867,"results":"79","hashOfConfig":"73"},{"size":2391,"mtime":1613992471407,"results":"80","hashOfConfig":"73"},{"size":331,"mtime":1612763796058,"results":"81","hashOfConfig":"73"},{"size":2046,"mtime":1612765305299,"results":"82","hashOfConfig":"73"},{"size":475,"mtime":1611474315706,"results":"83","hashOfConfig":"73"},{"size":184,"mtime":1611689308631,"results":"84","hashOfConfig":"73"},{"size":339,"mtime":1611945337906,"results":"85","hashOfConfig":"73"},{"size":340,"mtime":1613991890838,"results":"86","hashOfConfig":"73"},{"size":444,"mtime":1613992291585,"results":"87","hashOfConfig":"73"},{"size":401,"mtime":1611947738501,"results":"88","hashOfConfig":"73"},{"size":476,"mtime":1612244271975,"results":"89","hashOfConfig":"73"},{"size":385,"mtime":1612082104073,"results":"90","hashOfConfig":"73"},{"size":275,"mtime":1612082461004,"results":"91","hashOfConfig":"73"},{"size":5704,"mtime":1613308845675,"results":"92","hashOfConfig":"73"},{"size":296,"mtime":1612986265158,"results":"93","hashOfConfig":"73"},{"size":331,"mtime":1612983346937,"results":"94","hashOfConfig":"73"},{"size":325,"mtime":1612508608112,"results":"95","hashOfConfig":"73"},{"size":310,"mtime":1612378906935,"results":"96","hashOfConfig":"73"},{"size":148,"mtime":1613479124107,"results":"97","hashOfConfig":"73"},{"size":1771,"mtime":1613368851828,"results":"98","hashOfConfig":"73"},{"size":308,"mtime":1612689231350,"results":"99","hashOfConfig":"73"},{"size":3102,"mtime":1613992586232,"results":"100","hashOfConfig":"73"},{"size":1764,"mtime":1613301114982,"results":"101","hashOfConfig":"73"},{"size":1923,"mtime":1613301090137,"results":"102","hashOfConfig":"73"},{"size":2148,"mtime":1613301254575,"results":"103","hashOfConfig":"73"},{"size":3380,"mtime":1613317213638,"results":"104","hashOfConfig":"73"},{"size":5836,"mtime":1613313762898,"results":"105","hashOfConfig":"73"},{"size":3091,"mtime":1613318528384,"results":"106","hashOfConfig":"73"},{"size":847,"mtime":1613313201824,"results":"107","hashOfConfig":"73"},{"size":1985,"mtime":1613496932343,"results":"108","hashOfConfig":"73"},{"size":1470,"mtime":1613154327306,"results":"109","hashOfConfig":"73"},{"size":2461,"mtime":1613301038219,"results":"110","hashOfConfig":"73"},{"size":6716,"mtime":1613368715528,"results":"111","hashOfConfig":"73"},{"size":683,"mtime":1613244673452,"results":"112","hashOfConfig":"73"},{"size":2015,"mtime":1613992129662,"results":"113","hashOfConfig":"73"},{"size":1512,"mtime":1613283031559,"results":"114","hashOfConfig":"73"},{"size":687,"mtime":1613285788674,"results":"115","hashOfConfig":"73"},{"size":1707,"mtime":1613302419872,"results":"116","hashOfConfig":"73"},{"size":1083,"mtime":1613291849419,"results":"117","hashOfConfig":"73"},{"size":683,"mtime":1613284651497,"results":"118","hashOfConfig":"73"},{"size":538,"mtime":1613290138450,"results":"119","hashOfConfig":"73"},{"size":971,"mtime":1613302952737,"results":"120","hashOfConfig":"73"},{"size":1223,"mtime":1613496888886,"results":"121","hashOfConfig":"73"},{"size":4235,"mtime":1613367903118,"results":"122","hashOfConfig":"73"},{"size":715,"mtime":1613283603206,"results":"123","hashOfConfig":"73"},{"size":268,"mtime":1613290298311,"results":"124","hashOfConfig":"73"},{"size":1479,"mtime":1613498557144,"results":"125","hashOfConfig":"73"},{"size":1897,"mtime":1613480661344,"results":"126","hashOfConfig":"73"},{"size":825,"mtime":1613368692511,"results":"127","hashOfConfig":"73"},{"size":1915,"mtime":1613291515593,"results":"128","hashOfConfig":"73"},{"size":504,"mtime":1613292091282,"results":"129","hashOfConfig":"73"},{"size":594,"mtime":1613291928912,"results":"130","hashOfConfig":"73"},{"size":910,"mtime":1613292582666,"results":"131","hashOfConfig":"73"},{"size":575,"mtime":1613292523755,"results":"132","hashOfConfig":"73"},{"size":744,"mtime":1613289766154,"results":"133","hashOfConfig":"73"},{"size":591,"mtime":1613286150196,"results":"134","hashOfConfig":"73"},{"size":936,"mtime":1613290222623,"results":"135","hashOfConfig":"73"},{"size":491,"mtime":1613283221600,"results":"136","hashOfConfig":"73"},{"size":1248,"mtime":1613496177919,"results":"137","hashOfConfig":"73"},{"size":750,"mtime":1613292402282,"results":"138","hashOfConfig":"73"},{"size":949,"mtime":1613309737324,"results":"139","hashOfConfig":"73"},{"size":6578,"mtime":1613496665485,"results":"140","hashOfConfig":"73"},{"size":1205,"mtime":1613311503407,"results":"141","hashOfConfig":"73"},{"size":3414,"mtime":1613496864464,"results":"142","hashOfConfig":"73"},{"size":1783,"mtime":1613497116879,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"r6nzlz",{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"146"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"146"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"146"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"146"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"146"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"146"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"146"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"146"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"146"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"146"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"146"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"146"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"218"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"218"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"218"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"218"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"218"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"218"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"218"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"146"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"218"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"218"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"218"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"218"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"218"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"218"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"218"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"218"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"218"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"218"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"218"},"C:\\Application\\firstProject\\my-app\\src\\index.js",[],["323","324"],"C:\\Application\\firstProject\\my-app\\src\\reportWebVitals.js",[],"C:\\Application\\firstProject\\my-app\\src\\App.js",["325"],"import logo from './logo.svg';\nimport { connect } from \"react-redux\";\nimport withSuspense from \"./HOCS/withSuspense\";\nimport Loader from \"./Loader\";\nimport './App.css';\nimport \"./bootstrap.min.css\";\nimport React from \"react\";\nimport ContainerHeader from \"./Header/ContainerHeader\";\nimport Aside from \"./Aside/Aside\";\nimport Footer from \"./Footer/Footer\";\n\nimport ContainerLogin from \"./Login/ContainerLogin\";\n\nimport { Route,Redirect,Switch } from 'react-router-dom';\nimport { setInitThunk } from \"./Redux/Reducers/reduceApp\";\n\n//Last pack which will be load if need(React.lazy(()=>import(\"path\")))\nconst ContainerMain = React.lazy(()=>import( \"./Article/Main/ContainerMain\" ))\nconst ContainerMessage= React.lazy(()=>import(\"./Article/Message/ContainerMessage\"))\nconst ContainerFriends=React.lazy(()=>import(\"./Article/Friends/ContainerFriends\"))\nconst ContainerGroups=React.lazy(()=>import(\"./Article/Groups/ContainerGroups\"))\nconst ContainerAudio=React.lazy(()=>import(\"./Article/Audio/ContainerAudio\"))\nconst ContainerVideo=React.lazy(()=>import(\"./Article/Video/ContainerVideo\"))\nconst ContainerPhoto=React.lazy(()=>import(\"./Article/Photo/ContainerPhoto\"))\nconst ContainerAddFriend=React.lazy(()=>import(\"./Article/Friends/AddFriend/ContainerAddFriend\"))\nconst ContainerEdit=React.lazy(()=>import(\"./Article/Edit/ContainerEdit\"))\n\nclass App extends React.Component {\n  componentDidMount(){\n    this.props.setInitThunk()\n    window.addEventListener(\"unhandledrejection\",this.catchError)\n  }\n  catchError(promiseRejectionEvent){\n    alert(promiseRejectionEvent)\n  }\n  //Switch for aside true/false\n  state={\n    show:true\n  }\n  toActive=()=>{\n    this.setState({\n      show:true\n    })\n  }\n  toOff=()=>{\n    this.setState({\n      show:false\n    })\n  }\n  render(){\n  //check on init\n  if(!this.props.isInit){\n    return <Loader/>\n  }\n  return<div>\n      <ContainerHeader toOff={this.toOff} \n      toActive={this.toActive}\n      show={this.state.show}/>\n      <div className=\"row mt-4 mb-4\">\n      <div className={this.state.show?\"col-md-3\":\"\"}>\n        {this.state.show&&<div className=\"Aside\">\n          <Aside/>\n        </div>}\n      </div>\n      <div className={this.state.show?\"col-md-9\":\"col-md-12\"}>\n        <div className=\"Article\">\n          <Switch>\n            <Route path=\"/Main/:userId?\" render={()=>{return withSuspense(ContainerMain)}}/>\n            <Route path=\"/Message/:userId?\" render={()=>{return withSuspense(ContainerMessage)}} />\n            <Route path=\"/Friends\" render={()=>{return withSuspense(ContainerFriends)}}/>\n            <Route path=\"/Groups\" render={()=>{return withSuspense(ContainerGroups)}}/>\n            <Route path=\"/Audio\" render={()=>{return withSuspense(ContainerAudio)}}/>\n            <Route path=\"/Video\" render={()=>{return withSuspense(ContainerVideo)}}/>\n            <Route path=\"/Photo\" render={()=>{return withSuspense(ContainerPhoto)}}/>\n            <Route path=\"/AddFriend\" render={()=>{return withSuspense(ContainerAddFriend)}}/>\n            <Route path=\"/Edit\" render={()=>{return withSuspense(ContainerEdit)}}/>\n            <Route path=\"/Login\" render={()=>{return <ContainerLogin/>}}/>\n            <Route path=\"*\" render={()=>{return <Redirect to=\"/Main\"/>}}/>\n          </Switch>\n        </div>\n      </div>\n      </div>\n      <Footer/>\n    </div>\n  }\n}\n\nlet mapStateToProps=(state)=>{\n  return{\n    isInit:state.app.init\n  }\n}\n\nexport default connect(mapStateToProps,{setInitThunk})(App);\n","C:\\Application\\firstProject\\my-app\\src\\Footer\\Footer.js",[],"C:\\Application\\firstProject\\my-app\\src\\Article\\Main\\Main.js",["326","327"],"import Post from \"./Post\";\r\nimport Loader from \"../../Loader\";\r\nimport React from \"react\";\r\nimport {Field,reduxForm} from \"redux-form\"\r\nimport Textarea from \"../../Bricks/Textarea\";\r\nimport { requiredField,maxLengthCreator } from \"../../Validates/ValidateForText\";\r\n\r\nlet maxLength30=maxLengthCreator(30)\r\n\r\nclass Main extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.userId=this.props.match.params.userId\r\n    }\r\n    componentDidMount=()=>{\r\n        if(!this.userId){\r\n            this.userId=this.props.myId\r\n        }\r\n        this.props.setAccountThunk(this.userId)\r\n        this.props.getStatusThunk(this.userId)\r\n    }\r\n    componentWillUnmount=()=>{\r\n        this.props.setAccount(null)\r\n    }\r\n\r\n    state={\r\n        editMode:false,\r\n    }\r\n    toActive(){\r\n        this.setState({\r\n            editMode:true\r\n        })\r\n    }\r\n    toOff(){\r\n        this.setState({\r\n            editMode:false\r\n        })\r\n        this.props.setStatusThunk(this.props.status)\r\n    }\r\n    \r\n    render(){  \r\n    \r\n    let userId=this.props.match.params.userId \r\n    let isMyPage=(!userId)  \r\n    \r\n    if(!this.props.Account){\r\n        return <Loader />\r\n    }\r\n\r\n    let posts=this.props.posts\r\n    if(posts.length!=0){\r\n        posts =posts.map(e=>{\r\n            return <Post message={e.message} img={e.img} \r\n                name={e.name} doLike={this.props.doLike}\r\n                like={e.like} ableLike={e.ableLike} deletePost={this.props.deletePost}/>\r\n        })\r\n    }\r\n\r\n    let changeStatus=(e)=>{\r\n        this.props.changeStatus(e.target.value)\r\n    }\r\n\r\n    let name=this.props.Account.fullName;\r\n    let img=this.props.Account.photos.large;\r\n    if (!img){\r\n        img=\"https://aachibilyaev.com/upload/iblock/c97/c970fbccb33a1923f4af631366566199.png\"\r\n    } \r\n\r\n    let doPost=(value)=>{\r\n        this.props.doPost(value.text)\r\n    }\r\n\r\n    return<div>\r\n        <div className=\"card\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <img className=\"img img-fluid rounded\" src={img} />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                <div className=\"card-body\">\r\n                <h1 className=\"Link my-2\">{name}</h1>\r\n                    <div className=\"d-flex my-2\">\r\n                        Status:\r\n                        {isMyPage ? \r\n                            this.state.editMode ?\r\n                            <div className=\"d-flex\">\r\n                                <input autoFocus={true}  onBlur={this.toOff.bind(this)} onChange={changeStatus} \r\n                                className=\"form-control\" value={this.props.status}/>\r\n                                <button onClick={this.toOff.bind(this)} className=\"btn btn-success right\">\r\n                                    \\/\r\n                                </button>\r\n                            </div>\r\n                            :\r\n                            <span onDoubleClick={this.toActive.bind(this)}>\r\n                                {!this.props.status?\r\n                                \"click to change status\"\r\n                                :\r\n                                this.props.status\r\n                                }\r\n                            </span>\r\n                        :\r\n                            this.props.Account.aboutMe\r\n                        }\r\n                    </div>\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item d-flex\">\r\n                            DateBirth <input className=\"form-control\" type=\"date\" />\r\n                        </li>\r\n                        <li className=\"list-group-item d-flex\">\r\n                            City  \r\n                            <select className=\"form-control\">\r\n                                <option active=\"active\">\r\n                                    Moscow\r\n                                </option>\r\n                                <option>\r\n                                    SPb\r\n                                </option>\r\n                                <option>\r\n                                    Other City\r\n                                </option>\r\n                            </select>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"card mt-2 mb-2\">\r\n            <MainReduxForm onSubmit={doPost}/>\r\n        </div>\r\n        <div>\r\n          {posts}\r\n        </div>\r\n    </div>\r\n    } \r\n}\r\n\r\nlet MainForm=(props)=>{\r\n    return<form onSubmit={props.handleSubmit}>\r\n        <div className=\"card-body\">\r\n            What new?<button className=\"btn btn-success right\">Post</button>\r\n            <Field name={\"text\"} component={Textarea} \r\n             placeholder=\"...\"\r\n            validate={[requiredField,maxLength30]}/>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nlet MainReduxForm=reduxForm({form:\"forPost\"})(MainForm)\r\n\r\nexport default Main",["328","329"],"C:\\Application\\firstProject\\my-app\\src\\Article\\Message\\Message.js",["330"],"import SingleMessage from \"./singleMessage\";\r\nimport People from \"./People\";\r\nimport React from \"react\";\r\nimport { reduxForm,Field } from \"redux-form\";\r\nimport TextareaUp from \"../../Bricks/TextareaUp\";\r\nimport { maxLengthCreator, requiredField } from \"../../Validates/ValidateForText\";\r\n\r\nclass Message extends React.Component{\r\n    render(){\r\n    let userId=this.props.match.params.userId\r\n    if (!userId){\r\n        userId=1\r\n    }\r\n    let doMessage=(value)=>{\r\n        this.props.doMessage(userId,value.text)\r\n    }\r\n\r\n    let peopleData=this.props.peopleData.map((p)=>{\r\n        return<People changeDialog={this.props.changeDialog} name={p.name} count={p.newM} id={p.id}/>\r\n    })\r\n    let messageData=[];\r\n    for (let key in this.props.messageData){        \r\n        let m=this.props.messageData[key]\r\n        if(m.id==userId){\r\n            let curMessage=<SingleMessage name={m.name} \r\n            message={m.message} img={m.img}/>\r\n            messageData.push(curMessage)\r\n        }\r\n    }\r\n    return<div>\r\n    <div className=\"ForMessage row\">\r\n        <div className=\"col-md-3\">\r\n            <ul>\r\n                {peopleData}\r\n            </ul>\r\n        </div>\r\n\r\n        <div className=\"col-md-9\">\r\n            {messageData}\r\n            <MessageReduxForm onSubmit={doMessage}/>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    }\r\n}\r\n\r\nlet maxLength300=maxLengthCreator(300)\r\n\r\nlet MessageForm=(props)=>{\r\n    return<form onSubmit={props.handleSubmit}>\r\n        <div className=\"w-100 mt-2\">\r\n            <Field component={TextareaUp} placeholder=\"...\"\r\n            validate={[requiredField,maxLength300]}\r\n            name={\"text\"}/>\r\n        </div>\r\n        <div>\r\n            <button className=\"btn btn-success w-100 btnInMessage\">\r\n            </button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nlet MessageReduxForm=reduxForm({form:\"forMessage\"})(MessageForm)\r\n\r\nexport default Message","C:\\Application\\firstProject\\my-app\\src\\Article\\Audio\\Audio.js",["331"],"import React,{useState,useEffect} from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport Input from \"../../Bricks/LoginInput\";\r\nimport { requiredField } from \"../../Validates/ValidateForText\";\r\n\r\n\r\nlet Audio=(props)=>{\r\n\r\n    let [addMode,setMode]=useState(false)\r\n    let changeMode=()=>{\r\n        setMode(!addMode)\r\n    }\r\n    let addAudio=(value)=>{\r\n        props.addAudio(value.nameMusic,value.nameCompositor\r\n            ,value.musicURL,value.imgURL)\r\n    }\r\n    return<div>\r\n        <div>\r\n            <div onClick={changeMode} className=\"right d-flex\">\r\n                {addMode?\r\n                <span className=\"Link\">Cancel</span>\r\n                :\r\n                <span className=\"Link\">Add Music</span>}\r\n                <div className=\"ml-1\">\r\n                <button className={addMode ?\r\n                    \"btn btn-close btn-outline-danger\"\r\n                    :\"btn btn-outline-success\"}>\r\n                    {!addMode && \"+\"}\r\n                </button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            {addMode &&\r\n                <div>\r\n                <br />\r\n                <AudioReduxForm onSubmit={addAudio}/>\r\n                </div>\r\n            }\r\n            </div>\r\n        </div>\r\n        <br />\r\n        <div>\r\n            {props.audioData}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nlet AudioForm=(props)=>{\r\n    return<form onSubmit={props.handleSubmit} className=\"Login\">\r\n        <div className=\"d-flex\">\r\n            Name Music:\r\n            <Field component={Input} validate={[requiredField]}\r\n            name={\"nameMusic\"} placeholder={\"...\"}/>\r\n        </div>\r\n        <div className=\"d-flex\">\r\n            Name Compositor:\r\n            <Field component={Input} validate={[requiredField]}\r\n            name={\"nameCompositor\"} placeholder={\"...\"} />\r\n        </div>\r\n        <div className=\"d-flex\">\r\n            URL image:\r\n            <Field component={Input} validate={[requiredField]}\r\n            name={\"imgURL\"} placeholder={\"...\"}/>\r\n        </div>\r\n        <div className=\"d-flex\">\r\n            URL music:\r\n            <Field component={Input} validate={[requiredField]} \r\n            name={\"musicURL\"} placeholder={\"...\"}/>\r\n        </div>\r\n        <button className=\"w-100 btn btn-success\">\r\n            Add\r\n        </button>\r\n    </form>\r\n}\r\nlet AudioReduxForm=reduxForm({form:\"audio\"})(AudioForm)\r\n\r\nexport default Audio\r\n","C:\\Application\\firstProject\\my-app\\src\\Article\\Video\\Video.js",["332"],"import VideoTemplate from \"./VideoTemplate\";\r\nimport { useState } from \"react\"\r\nimport { reduxForm, Field } from \"redux-form\"\r\nimport Input from \"../../Bricks/LoginInput\"\r\nimport {requiredField} from \"../../Validates/ValidateForText\"\r\n\r\nlet Video = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let toEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    let goOutEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n    let AddVideo=(value)=>{\r\n        props.AddVideo(value.nameVideo,value.nameCompositor,value.urlVideo)\r\n    }\r\n    return <div>\r\n        <div className=\"right\">\r\n            {editMode ?\r\n            <div onClick={goOutEditMode}>\r\n                <span className=\"Link\">\r\n                    Cancel\r\n                </span>\r\n                <button className=\"btn btn-close btn-outline-danger\">\r\n                </button>\r\n            </div> :\r\n            <div onClick={toEditMode}>\r\n                <span className=\"Link\">\r\n                    Add Video\r\n                </span>\r\n                <button className=\"btn btn-outline-success\">+\r\n                </button>\r\n            </div>}\r\n        </div>\r\n        <div>\r\n        {editMode &&\r\n            <div >\r\n                <br />\r\n                <VideoReduxForm onSubmit={AddVideo}/>\r\n            </div>}\r\n        </div>\r\n        {props.videoData.length>0 ? [...props.videoData].reverse():\r\n        <div className=\"card w-100\" onClick={toEditMode}>\r\n            <h1 className=\"text-primary\" align=\"center\">\r\n            You steel dont have any video...\r\n            </h1>\r\n        </div>}\r\n    </div>\r\n}\r\n\r\nlet VideoForm = (props) => {\r\n    return <form className=\"Login\" onSubmit={props.handleSubmit}>\r\n        <div className=\"d-flex\">\r\n            Name Video: <Field validate={[requiredField]} \r\n            name={\"nameVideo\"} component={Input}/>\r\n        </div>\r\n        <div className=\"d-flex\">\r\n            Name Compositor: <Field name={\"nameCompositor\"}\r\n            component={Input}/>\r\n        </div>\r\n        <div className=\"d-flex\">\r\n            URL video: <Field name={\"urlVideo\"}\r\n            component={Input} validate={[requiredField]}/>\r\n        </div>\r\n        \r\n            <button className=\"w-100 btn btn-success\">\r\n                Add\r\n            </button>\r\n        \r\n    </form>\r\n}\r\nlet VideoReduxForm=reduxForm({form:\"video\"})(VideoForm)\r\n\r\nexport default Video","C:\\Application\\firstProject\\my-app\\src\\Login\\ContainerLogin.js",["333"],"import { connect } from \"react-redux\"\r\nimport Login from \"./Login\";\r\nimport { loginThunk,logoutThunk } from \"../Redux/Reducers/reduceMenu\";\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n    isAuth:state.menu.isAuth,\r\n    captcha:state.menu.captchaUrl\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{\r\n    loginThunk})(Login)","C:\\Application\\firstProject\\my-app\\src\\Login\\Login.js",["334"],"import { reduxForm,Field } from \"redux-form\";\r\nimport { requiredField,maxLengthCreator } from \"../Validates/ValidateForText\";\r\nimport LoginInput from \"../Bricks/LoginInput\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet maxLength100=maxLengthCreator(100)\r\n\r\nlet LoginForm =(props)=>{\r\n    return<form onSubmit={props.handleSubmit}>\r\n    <div className=\"Login container px-4\">\r\n        <h1 align=\"center\" color=\"white\">Login</h1>\r\n        <div className=\"d-flex mt-2\">\r\n            Email: \r\n            <Field name={\"email\"} component={LoginInput} \r\n            placeholder=\"Enter Email\"  \r\n            validate={[requiredField,maxLength100]}/>\r\n        </div>\r\n        <div className=\"d-flex mt-2\">\r\n            Password: \r\n            <Field name={\"password\"} component={LoginInput}\r\n            placeholder=\"Enter Password\" \r\n            type=\"password\" validate={[requiredField,maxLength100]}/>\r\n        </div>\r\n        <div className=\"d-flex mt-2\">\r\n            Remember Me <Field name={\"rememberMe\"} component={\"input\"}\r\n            className=\"form-check-input\" type=\"checkbox\"/>\r\n        </div>\r\n        <div className=\"mt-2\">\r\n            {props.captcha && <img className=\"rounded\" \r\n            src={props.captcha} />}\r\n        </div>\r\n        <div className=\"d-flex mt-2\">\r\n            {props.captcha && <Field name={\"captcha\"} component={LoginInput}\r\n            validate={[requiredField]}/>}\r\n        </div>\r\n        <div className=\"text-danger\">\r\n            {props.error}\r\n        </div>\r\n        <button className=\"btn btn-success w-100 btnInMessage\">\r\n            Success\r\n        </button>\r\n    </div>\r\n    </form>\r\n}\r\nlet LoginReduxForm=reduxForm({form:\"login\"})(LoginForm)\r\n\r\nlet Login=(props)=>{\r\n\r\n    let login=(value)=>{\r\n        props.loginThunk(value.email,value.password,value.rememberMe,value.captcha)\r\n    }\r\n\r\n    if(props.isAuth===true){\r\n        return <Redirect to=\"/Main\" />\r\n    }\r\n\r\n    return<div>\r\n        <LoginReduxForm captcha={props.captcha} onSubmit={login}/>\r\n    </div>\r\n}\r\n\r\nexport default Login","C:\\Application\\firstProject\\my-app\\src\\HOCS\\withCheckAuth.js",[],"C:\\Application\\firstProject\\my-app\\src\\Loader.js",["335"],"import React from \"react\";\r\n\r\nlet Loader=()=>{\r\n    return<div>\r\n        <img className=\"img w-100\" src=\"https://filmdar.com/tms-loading.gif\" />\r\n    </div>\r\n}\r\n\r\nexport default Loader","C:\\Application\\firstProject\\my-app\\src\\Bricks\\Textarea.js",[],"C:\\Application\\firstProject\\my-app\\src\\Validates\\ValidateForText.js",[],"C:\\Application\\firstProject\\my-app\\src\\Bricks\\LoginInput.js",[],"C:\\Application\\firstProject\\my-app\\src\\Bricks\\TextareaUp.js",[],"C:\\Application\\firstProject\\my-app\\src\\Redux\\Selectors\\userSelector.js",[],"C:\\Application\\firstProject\\my-app\\src\\Redux\\Selectors\\mainSelector.js",[],"C:\\Application\\firstProject\\my-app\\src\\Redux\\Selectors\\messageSelector.js",[],"C:\\Application\\firstProject\\my-app\\src\\Article\\Main\\MainHooks.js",["336","337","338","339"],"import Post from \"./Post\";\r\nimport Loader from \"../../Loader\";\r\nimport React,{useState,useEffect} from \"react\";\r\nimport {Field,reduxForm} from \"redux-form\"\r\nimport Textarea from \"../../Bricks/Textarea\";\r\nimport { requiredField,maxLengthCreator } from \"../../Validates/ValidateForText\";\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nlet maxLength=maxLengthCreator(100000)\r\n\r\nlet Main=(props)=>{\r\n\r\n    let userId=props.match.params.userId\r\n\r\n    useEffect(()=>{\r\n        if(!userId){\r\n            userId=props.myId\r\n        }\r\n        props.setAccountThunk(userId)\r\n        props.getStatusThunk(userId)\r\n        return()=>{\r\n            props.setAccount(null)\r\n        }\r\n    },[])\r\n\r\n    let isMyPage=(!userId)\r\n\r\n    let [isEditMode,setMode] = useState(false)\r\n\r\n    let toActive=()=>{\r\n        setMode(true)\r\n    }\r\n    let toOff=()=>{\r\n        setMode(false)\r\n        props.setStatusThunk(props.status)\r\n    }\r\n\r\n    if(!props.Account){\r\n        return <Loader />\r\n    }\r\n\r\n    let posts=props.posts\r\n    if(posts.length!=0){\r\n        posts =posts.map(e=>{\r\n            return <Post message={e.message} img={e.img}\r\n                name={e.name} doLike={props.doLike}\r\n                like={e.like} ableLike={e.ableLike}\r\n                deletePost={props.deletePost}/>\r\n        })\r\n    }\r\n\r\n    let changeStatus=(e)=>{\r\n        props.changeStatus(e.target.value)\r\n    }\r\n\r\n    let name=props.Account.fullName;\r\n    let img=props.Account.photos.large;\r\n    if (!img){\r\n        img=\"https://aachibilyaev.com/upload/iblock/c97/c970fbccb33a1923f4af631366566199.png\"\r\n    }\r\n\r\n    let doPost=(value)=>{\r\n        props.doPost(value.text)\r\n    }\r\n    return<div>\r\n        <div className=\"card\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <img className=\"img w-100 rounded\" src={img} />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                <div className=\"card-body\">\r\n                <h1 className=\"Link my-2\">{name}\r\n                    <div className=\"right\">\r\n                        {isMyPage &&\r\n                        <button className=\"btn btn-primary\">\r\n                            <NavLink className=\"text-light Link\" to=\"Edit\">\r\n                                Edit Profile\r\n                            </NavLink>\r\n                        </button>\r\n                        }\r\n                    </div>\r\n                </h1>\r\n                    <div className=\"d-flex my-2\">\r\n                        Status:\r\n                        {isMyPage ?\r\n                            isEditMode ?\r\n                            <div className=\"d-flex\">\r\n                                <input autoFocus={true}  onBlur={toOff} onChange={changeStatus}\r\n                                className=\"form-control\" value={props.status}/>\r\n                                <button onClick={toOff} className=\"btn btn-success right\">\r\n                                    \\/\r\n                                </button>\r\n                            </div>\r\n                            :\r\n                            <span onDoubleClick={toActive}>\r\n                                {!props.status?\r\n                                \"click to change status\"\r\n                                :\r\n                                props.status\r\n                                }\r\n                            </span>\r\n                        :\r\n                            props.Account.aboutMe\r\n                        }\r\n                    </div>\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item d-flex\">\r\n                            looking for a job:{props.Account.lookingForAJob ? \" Yes \" : \"No\"}\r\n                        </li>\r\n                        <li className=\"list-group-item d-flex\">\r\n                            Description job:{props.Account.descriptionJob ? props.Account.descriptionJob : \"I dont know\"}\r\n                        </li>\r\n                        <li className=\"list-group-item d-flex\">\r\n                            About me:{props.Account.aboutMe ? props.Account.aboutMe : \"Just no name)\"}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <details>\r\n                                <summary>\r\n                                    Contacts\r\n                                </summary>\r\n                                <ul className=\"list-group\">\r\n                            {props.Account.contacts && Object.keys(props.Account.contacts).map(key=>{\r\n                                return<li className=\"list-group-item\" key={key}>{key}:\r\n                                <a className=\"Link\" target=\"_blank\" href={props.Account.contacts[key]}>\r\n                                {props.Account.contacts[key]}</a></li>\r\n                            })}\r\n                                </ul>\r\n                            </details>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"card mt-2 mb-2\">\r\n            <MainReduxForm onSubmit={doPost}/>\r\n        </div>\r\n        <div>\r\n          {posts}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nlet MainForm=(props)=>{ \r\n    return<form onSubmit={props.handleSubmit}>\r\n        <div className=\"card-body\">\r\n            What new?<button className=\"btn btn-success right\">Post</button>\r\n            <Field name={\"text\"} component={Textarea}\r\n             placeholder=\"...\"\r\n            validate={[requiredField,maxLength]}/>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nlet MainReduxForm=reduxForm({form:\"forPost\"})(MainForm)\r\n\r\nexport default Main\r\n","C:\\Application\\firstProject\\my-app\\src\\Redux\\Selectors\\photoSelector.js",[],"C:\\Application\\firstProject\\my-app\\src\\Redux\\Selectors\\videoSelector.js",[],"C:\\Application\\firstProject\\my-app\\src\\Redux\\Selectors\\audioSelector.js",[],"C:\\Application\\firstProject\\my-app\\src\\Redux\\Selectors\\groupSelector.js",[],"C:\\Application\\firstProject\\my-app\\src\\Redux\\Selectors\\friendSelector.js",["340"],"import Friend from \"../../Article/Friends/Friend\";\r\n\r\nexport let getFriendsSelector=(state)=>{\r\n    return state.friendsPage.Property.friendsData\r\n}","C:\\Application\\firstProject\\my-app\\src\\Bricks\\Pagination.js",["341","342"],"import { useEffect,useState } from \"react\";\r\n\r\nlet Pagination=({portionSize,...props})=>{\r\n    //Create all pages\r\n    let Pages=[]\r\n    for(let i=1;i<=props.countPage;i++){\r\n        let e=null\r\n        if(props.curPage==i){\r\n            e=<button id={i} className=\"btn btn-light\"\r\n            onClick={props.changePage}>\r\n                {i}\r\n            </button>\r\n        }else{\r\n            e=<button id={i} className=\"btn btn-primary\"\r\n            onClick={props.changePage}>\r\n                {i}\r\n            </button>\r\n        }\r\n        Pages.push(e)\r\n    }\r\n\r\n    //To understand where curPage\r\n    let i=1\r\n    while(props.curPage >portionSize*i){\r\n        i++\r\n    }\r\n\r\n    //for next and prev\r\n    let [portionNumber,setPortionNumber]=useState(i)\r\n    let [curPages,setCurPages]=useState([...Pages].slice(portionSize*(i-1),portionSize*i))\r\n    let onNext=()=>{\r\n        let newPortionNumber=portionNumber+1\r\n        setPortionNumber(newPortionNumber)\r\n        let newPages=[...Pages].slice((newPortionNumber-1)*portionSize,(newPortionNumber-1)*portionSize+portionSize)\r\n        setCurPages(newPages)\r\n    }\r\n    let onPrev=()=>{\r\n        let newPortionNumber=portionNumber-1\r\n        setPortionNumber(newPortionNumber)\r\n        let newPages=[...Pages].slice((newPortionNumber-1)*portionSize,(newPortionNumber-1)*portionSize+portionSize)\r\n        setCurPages(newPages)\r\n    }\r\n\r\n    //render\r\n    return<div>\r\n        {portionNumber>1 &&\r\n        <button onClick={onPrev} className=\"btn btn-success\">\r\n            Prev\r\n        </button>}\r\n        {curPages}\r\n        {(portionNumber)*portionSize<props.countPage &&\r\n        <button onClick={onNext} className=\"btn btn-success\">\r\n            Next\r\n        </button>}\r\n    </div>\r\n}\r\nexport default Pagination\r\n","C:\\Application\\firstProject\\my-app\\src\\HOCS\\withSuspense.js",["343"],"import { Suspense } from \"react\"\r\n\r\nlet withSuspense=(Component)=>{\r\n    return<Suspense src={\"https://i.pinimg.com/originals/3b/4e/10/3b4e109d6b621ed5a9249769afbd4dfa.gif\"}\r\n    fallback={<img  className=\"img img-rounded w-100\" />}>\r\n        <Component/>\r\n    </Suspense>\r\n\r\n}\r\n\r\nexport default withSuspense","C:\\Application\\firstProject\\my-app\\src\\Article\\Edit\\Edit.js",["344"],"import { reduxForm,Field } from \"redux-form\";\r\nimport Input from \"../../Bricks/LoginInput\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { requiredField } from \"../../Validates/ValidateForText\";\r\n\r\nlet Edit=({Account,successfullMessage, ...props})=>{\r\n    let [isUpdatePhoto,setUpdatePhoto]=useState(false);\r\n    let [isSaved,setSave]=useState(false);\r\n    useEffect(()=>{\r\n        props.setAccountThunk(props.userId)\r\n    },[])\r\n    let setEditAccount=(value)=>{\r\n        props.setEditAccountThunk(value,setSave)\r\n    }\r\n    let onChangePhoto=(e)=>{\r\n        props.setPhoto(e.target.files[0])\r\n        setUpdatePhoto(true)\r\n    }\r\n    return<div>\r\n        <div className=\"container text-light\">\r\n            Edit profile\r\n            <div className=\"right\">\r\n            {isUpdatePhoto && \"Photo have updated\"}\r\n            </div>\r\n        </div>\r\n        <div className=\"text-light row\">\r\n            <div className=\"col-md-6\">ChangePhoto:</div>\r\n            <div className=\"col-md-6\">\r\n            <input onChange={onChangePhoto} type={\"file\"} className=\"form-control\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"mt-1\"></div>\r\n        {Account.fullName && <EditReduxForm isSaved={isSaved}\r\n        initialValues={Account} onSubmit={setEditAccount} Account={Account}/>}\r\n    </div>\r\n}\r\n\r\nlet EditForm=(props)=>{\r\n    return<form onSubmit={props.handleSubmit}>\r\n        <ul className=\"list-group\">\r\n        <li className=\"list-group-item d-flex\">\r\n            Looking for a job: <Field className=\"form-check-input mt-1\" type={\"checkbox\"}\r\n            component={\"input\"} name={\"lookingForAJob\"}/>\r\n        </li>\r\n        <li className=\"list-group-item d-flex\">\r\n            Description job: <Field component={Input} name={\"lookingForAJobDescription\"}\r\n            validate={[requiredField]}/>\r\n        </li>\r\n        <li className=\"list-group-item d-flex\">\r\n            About Me: <Field component={Input} name={\"aboutMe\"}\r\n            validate={[requiredField]}/>\r\n        </li>\r\n        <li className=\"list-group-item d-flex\">\r\n            fullName: <Field  component={Input} name={\"fullName\"} validate={[requiredField]}/>\r\n        </li>\r\n        <li className=\"list-group-item d-flex\">\r\n            <details className=\"w-100\">\r\n                <summary>Contacts</summary>\r\n                <ul className=\"list-group\">\r\n                    {Object.keys(props.Account.contacts).map(key=>{\r\n                        return<li className=\"list-group-item d-flex\">\r\n                        {key}: <Field component={Input} name={`contacts.${key}`} />\r\n                    </li>\r\n                    })}\r\n                </ul>\r\n            </details>\r\n        </li>\r\n        </ul>\r\n        <div className=\"right mt-2\">\r\n            {props.isSaved ? <span className=\"text-success\">Save successfull</span>:\r\n            <span className=\"text-danger\">{props.error}</span>}\r\n            <button className=\"btn btn-success\">\r\n                Save\r\n            </button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nlet EditReduxForm=reduxForm({form:\"forEdit\"})(EditForm)\r\n\r\nexport default Edit\r\n","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceVideo.ts",["345"],"import {VideoType} from \"../../Types/types\";\r\n\r\nlet ADD_VIDEO:\"video/ADDVIDEO\"=\"video/ADDVIDEO\"\r\nlet REMOVE_VIDEO:\"video/REMOVEVIDEO\"=\"video/REMOVEVIDEO\"\r\n\r\nlet initialState={\r\n    Property:{\r\n        videoData:[\r\n            {name:\"React-Way-of-Samurai\",compositor:\"IT-Kamasutra\",\r\n                vsrc:\"\",id:1\r\n            }\r\n        ] as Array<VideoType>,\r\n        lastId:1 as number\r\n    }\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nlet reduceVideo=(state=initialState,action:ActionType):InitialStateType =>{\r\n    switch(action.type){\r\n        case ADD_VIDEO:\r\n            return {...state,Property:\r\n                {videoData:[...state.Property.videoData,{\r\n                    name:action.name,compositor:action.compositor,\r\n                    vsrc:action.vsrc,id:state.Property.lastId+1\r\n                }],lastId:state.Property.lastId++}}\r\n        case REMOVE_VIDEO:\r\n            return{...state,Property:{\r\n                videoData:\r\n                state.Property.videoData.filter(e=>e.id != action.id)\r\n                ,lastId:state.Property.lastId},\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType=AddVideoType | RemoveVideoType\r\n\r\nexport type AddVideoType = {\r\n    type:typeof ADD_VIDEO\r\n    name:string | null,\r\n    compositor:string | null,\r\n    vsrc:string | null\r\n}\r\nexport let AddVideo=(name:string | null,compositor:string | null,vsrc:string | null):AddVideoType=>{\r\n    return{\r\n        type:ADD_VIDEO,\r\n        name,compositor,\r\n        vsrc\r\n    }\r\n}\r\n\r\nexport type RemoveVideoType={\r\n    type:typeof REMOVE_VIDEO,\r\n    id:number\r\n}\r\nexport let RemoveVideo=(id:number):RemoveVideoType=>{\r\n    return{\r\n        type:REMOVE_VIDEO,\r\n        id\r\n    }\r\n}\r\n\r\nexport default reduceVideo\r\n",["346","347"],"C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reducePhoto.ts",["348"],"\r\nlet ADD_PHOTO:\"reducePhoto/ADD_PHOTO\"=\"reducePhoto/ADD_PHOTO\"\r\nlet REMOVE_PHOTO:\"reducePhoto/REMOVE_PHOTO\"=\"reducePhoto/REMOVE_PHOTO\"\r\n\r\n\r\nexport type PhotoType={\r\n  name:string | null,\r\n  img:string | null,\r\n  id:number\r\n}\r\nlet initialState={\r\n    Property:{\r\n        photoData:[\r\n            {name:\"JS\",img:\"https://avatars.mds.yandex.net/get-zen_doc/1936915/pub_5eebcea9702c4a7f9ab8c531_5eebda384e8d5c252c06efa7/scale_1200\",id:1},\r\n            {name:\"React\",img:\"https://pbs.twimg.com/media/DZc1BqPWkAID4hr.jpg:large\",id:2},\r\n        ] as Array<PhotoType>,\r\n        lastId:2 as number\r\n    }\r\n}\r\n\r\nexport type InitialStateType=typeof initialState\r\n\r\nlet reducePhoto=(state=initialState,action:ActionType):InitialStateType=>{\r\n    switch(action.type){\r\n        case ADD_PHOTO:\r\n            return{...state,Property:{\r\n                photoData:[...state.Property.photoData,{\r\n                    img:action.img,\r\n                    name:action.name,\r\n                    id:state.Property.lastId+1\r\n                    }],\r\n                lastId:state.Property.lastId++\r\n                }\r\n            }\r\n        case REMOVE_PHOTO:\r\n            return{...state,Property:{\r\n                photoData:\r\n                state.Property.photoData.filter(e=>e.id != action.id),\r\n                lastId:state.Property.lastId\r\n              }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = AddPhotoType | RemovePhotoType\r\n\r\nexport type AddPhotoType ={\r\n  type:typeof ADD_PHOTO,\r\n  name:string | null,\r\n  img:string | null\r\n}\r\nexport let AddPhoto=(name:string | null,img:string | null):AddPhotoType=>{\r\n    return{\r\n        type:ADD_PHOTO,\r\n        name,img\r\n    }\r\n}\r\n\r\nexport type RemovePhotoType={\r\n  type:typeof REMOVE_PHOTO,\r\n  id:number\r\n}\r\nexport let RemovePhoto=(id:number):RemovePhotoType=>{\r\n    return{\r\n        type:REMOVE_PHOTO,id\r\n    }\r\n}\r\nexport default reducePhoto\r\n","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceMessage.ts",[],"C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceMenu.ts",["349","350","351"],"import {mainPage,loginPage,security} from \"../../API/API\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport { AppStateType } from \"../Redux\";\r\nimport { DataType } from \"../../Types/types\";\r\nimport { ResultCode,ResultCodeWithCapthca } from \"../../API/API\";\r\n\r\ntype ThunkType=ThunkAction<Promise<void>, AppStateType,unknown,ActionType>\r\nlet set_Auth:\"Menu/setAuth\"=\"Menu/setAuth\"\r\nlet set_Captcha_Success:\"Menu/setCaptcha/Success\"=\"Menu/setCaptcha/Success\"\r\n\r\nlet initialState={\r\n    data:{\r\n        login:null,\r\n        email:null,\r\n        id:null\r\n    } as DataType,\r\n    captchaUrl:null as null | string, //if null then dont required\r\n    isAuth:false as boolean\r\n}\r\n\r\ntype InitialStateType=typeof initialState\r\ntype ActionType = SetCaptchaSuccessType | SetAuthType\r\n\r\nlet reduceAside=(state=initialState,action:ActionType):InitialStateType=>{\r\n    let curState={...state}\r\n\r\n    if(action.type===set_Auth){\r\n        curState.data={...state.data}\r\n        curState.data={...action.data}\r\n        curState.isAuth=action.log\r\n        return curState\r\n    }\r\n\r\n    if(action.type===set_Captcha_Success){\r\n        curState.captchaUrl=state.captchaUrl\r\n        curState.captchaUrl=action.url\r\n        return curState\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nexport type SetCaptchaSuccessType={\r\n  type:typeof set_Captcha_Success,\r\n  url:string | null\r\n}\r\nlet setCaptchaSuccess=(url:string | null):SetCaptchaSuccessType=>{\r\n    return{\r\n        type:set_Captcha_Success,\r\n        url\r\n    }\r\n}\r\n\r\nexport type SetAuthType={\r\n  type: typeof set_Auth,\r\n  log:boolean,\r\n  data:DataType\r\n}\r\nexport let setAuth=(id:number | null,email:string | null,login:string | null,log:boolean):SetAuthType=>{\r\n    return{\r\n        type:set_Auth,\r\n        log,\r\n        data:{\r\n        id,email,login\r\n        }\r\n    }\r\n}\r\n\r\nexport let setAuthThunk=(log=false):ThunkType=> async (dispatch:any)=>{\r\n    if(log===false){\r\n        return dispatch(setAuth(null,null,null,false))\r\n    }\r\n    let response= await mainPage.getMyProfile()\r\n    if (response.data.resultCode===ResultCode.Success){\r\n        let {id,login,email} = response.data.data\r\n        dispatch(setAuth(id,email,login,log))\r\n    }else{\r\n        dispatch(setAuth(null,null,null,false))\r\n    }\r\n}\r\nexport let loginThunk=(email:string,password:string,rememberMe=false,captcha:null | string=null):ThunkType=> async (dispatch:any)=>{\r\n    let response=await loginPage.logIn(email,password,rememberMe,captcha)\r\n    if (response.data.resultCode==ResultCode.Success){\r\n        dispatch(setAuthThunk(true))\r\n        dispatch(setCaptchaSuccess(null))\r\n    }else {\r\n        if(response.data.resultCode==ResultCodeWithCapthca.Captha){\r\n            dispatch(getCaptcha())\r\n        }\r\n        if (response.data.messages.length>0){\r\n            dispatch(stopSubmit(\"login\",{_error:response.data.messages[0]}))\r\n        }else{\r\n            dispatch(stopSubmit(\"login\",{_error:\"Some error...\"}))\r\n        }\r\n    }\r\n}\r\nexport let logoutThunk=():ThunkType=> async (dispatch:any)=>{\r\n    let response= await loginPage.logOut()\r\n    if(response.data.resultCode==ResultCode.Success){\r\n        dispatch(setAuthThunk(false))\r\n    }\r\n}\r\nexport let getCaptcha=():ThunkType=>async (dispatch:any)=>{\r\n    let response = await security.getCaptcha()\r\n    dispatch(setCaptchaSuccess(response.data.url))\r\n}\r\n\r\nexport default reduceAside\r\n","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceMain.ts",["352","353","354","355","356","357","358","359","360","361","362","363","364"],"import {mainPage} from \"../../API/API\"\r\nimport type {AccountType,ContactsType,PhotosType} from \"../../Types/types\"\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStateType } from \"../Redux\";\r\n\r\nlet change_Status:\"Main/ChangeStatus\"=\"Main/ChangeStatus\";\r\nlet change_Text:\"Main/ChangeText\"=\"Main/ChangeText\";\r\nlet do_Post:\"Main/DoPost\"=\"Main/DoPost\";\r\nlet do_Like:\"Main/DoLike\"=\"Main/DoLike\";\r\nlet set_Account:\"Main/setAccount\"=\"Main/setAccount\";\r\nlet set_Status:\"Main/setStatus\"=\"Main/setStatus\";\r\nlet delete_Post:\"Main/deletePost\"=\"Main/deletePost\";\r\nlet SET_PHOTO_SUCCESS:\"Main/setPhotoSuccess\"=\"Main/setPhotoSuccess\"\r\n\r\ntype ThunkType= ThunkAction<Promise<void>, AppStateType, unknown, ActionType>\r\n\r\nexport type PostType={\r\n  name:string | null,\r\n  message:string | null,\r\n  img:null | string,\r\n  like:number,\r\n  ableLike:boolean\r\n}\r\nlet initialState={\r\n    Property:{\r\n        Account:{\r\n          userId:null,\r\n          photos:{\r\n            large:null,\r\n            litle:null\r\n          } as PhotosType,\r\n          lookingForAJob:null,\r\n          lookingForAJobDescription:null,\r\n          fullName:null,\r\n          contacts:null\r\n        } as AccountType,\r\n        text:\"...I\" as string | null,\r\n        posts:[] as Array<PostType>,\r\n        status:\"...\" as string\r\n    }\r\n}\r\n\r\ntype InitialStateType=typeof initialState\r\ntype ActionType=ChangeTextType | DoPostType | DoLikeType | SetAccountType\r\n  | DeletePostType | SetStatusType | ChangeStatusType\r\n\r\nlet reduceMain=(state=initialState,action:ActionType):InitialStateType=>{\r\n    let curState={...state};\r\n    curState.Property={...state.Property};\r\n    if(action.type===set_Status){\r\n        curState.Property.status=action.status\r\n        return curState\r\n    }\r\n    if(action.type==change_Status){\r\n        curState.Property.status=state.Property.status;\r\n        curState.Property.status=action.curText;\r\n        return curState;\r\n    }\r\n    if(action.type==change_Text){\r\n        curState.Property.text=state.Property.text;\r\n        curState.Property.text=action.curText;\r\n        return curState\r\n    }\r\n    if(action.type==do_Post){\r\n        curState.Property.posts=[...state.Property.posts]\r\n        curState.Property.posts.push(\r\n            {name:curState.Property.Account.fullName,\r\n            message:action.text,\r\n            img:curState.Property.Account.photos.large,\r\n            like:0,ableLike:true}\r\n        )\r\n        curState.Property.text=\" \";\r\n        return curState;\r\n    }\r\n    if(action.type==do_Like){\r\n        curState.Property.posts=[...state.Property.posts]\r\n        let posts=[...state.Property.posts]\r\n        for(let key in posts){\r\n            if ((posts[key].like===action.like)&&(posts[key].message===action.message)&&(posts[key].name===action.name)){\r\n                if(posts[key].ableLike==true){\r\n                    curState.Property.posts[key].like++;\r\n                    curState.Property.posts[key].ableLike=false\r\n                }\r\n                else{\r\n                    curState.Property.posts[key].like--;\r\n                    curState.Property.posts[key].ableLike=true\r\n                }\r\n            }\r\n        }\r\n        return curState\r\n    }\r\n    if(action.type==set_Account){\r\n        curState.Property.Account={...state.Property.Account}\r\n        curState.Property.Account=action.data\r\n        return curState\r\n    }\r\n    if(action.type==delete_Post){\r\n        curState.Property.posts=[...state.Property.posts]\r\n        let newPosts=curState.Property.posts.filter(p=>((action.like!=p.like) || (action.message!=p.message) || (action.name!=p.name) ))\r\n        curState.Property.posts=newPosts\r\n        return curState;\r\n    }\r\n    return state\r\n}\r\n\r\nexport type ChangeStatusType={\r\n  type:typeof change_Status,\r\n  curText:string\r\n}\r\nexport let changeStatus=(t:string):ChangeStatusType=>{\r\n    return {\r\n        type:change_Status,\r\n        curText:t\r\n    }\r\n}\r\n\r\nexport type ChangeTextType={\r\n  type:typeof change_Text,\r\n  curText:string | null\r\n}\r\nexport let changeText=(t:string | null):ChangeTextType=>{\r\n    return{\r\n        type:change_Text,\r\n        curText:t\r\n    }\r\n}\r\n\r\nexport type DoPostType={\r\n  type:typeof do_Post,\r\n  text:string | null\r\n}\r\nexport let doPost=(text:string | null):DoPostType=>{\r\n    return{\r\n        type:do_Post,\r\n        text\r\n    }\r\n}\r\n\r\nexport type DoLikeType={\r\n  type:typeof do_Like,\r\n  name:string | null,\r\n  message:string | null,\r\n  like:number\r\n}\r\nexport let doLike=(n:string | null,m:string | null,l:number):DoLikeType=>{\r\n    return {\r\n        type:do_Like,\r\n        name:n,\r\n        message:m,\r\n        like:l\r\n    }\r\n}\r\n\r\nexport type SetAccountType={\r\n  type:typeof set_Account,\r\n  data:AccountType\r\n}\r\nexport let setAccount=(data:AccountType):SetAccountType=>{\r\n    return{\r\n    type:set_Account,\r\n    data\r\n    }\r\n}\r\n\r\nexport type DeletePostType={\r\n  type:typeof delete_Post,\r\n  name:string | null,\r\n  message:string | null,\r\n  like:number\r\n}\r\nexport let deletePost=(name:string | null,message:string | null,like:number):DeletePostType=>{\r\n    return{\r\n        type:delete_Post,\r\n        name,\r\n        message,like\r\n    }\r\n}\r\n\r\nexport type SetStatusType={\r\n  type:typeof set_Status,\r\n  status:string\r\n}\r\nlet setStatus=(status:string):SetStatusType=>{\r\n    return{\r\n        type:set_Status,\r\n        status\r\n    }\r\n}\r\n\r\nexport let setAccountThunk=(userId:number):ThunkType=> async (dispatch:any)=>{\r\n    let responce= await mainPage.getProfile(userId)\r\n    dispatch(setAccount(responce.data))\r\n}\r\nexport let getStatusThunk=(id:number):ThunkType=> async (dispatch:any)=>{\r\n    let response=await mainPage.getStatus(id)\r\n    dispatch(setStatus(response.data))\r\n}\r\nexport let setStatusThunk=(status:string):ThunkType=> async (dispatch:any)=>{\r\n    let response= await mainPage.setStatus(status)\r\n    dispatch(setStatus(status))\r\n}\r\n\r\n\r\nexport default reduceMain\r\n","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceEdit.ts",[],"C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceApp.ts",[],"C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceFriends.ts",["365","366"],"import { addFriendPage } from \"../../API/API\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStateType } from \"../Redux\";\r\nlet Get_Friends:\"reduceFriends/getFriends\"=\"reduceFriends/getFriends\"\r\nlet Remove_Friends:\"reduceFrieds/RemoveFriends\"=\"reduceFrieds/RemoveFriends\"\r\n\r\ntype ThunkType=ThunkAction<Promise<void>,AppStateType,unknown,ActionType>\r\n\r\nexport type FriendType={\r\n    id:number\r\n    name:string\r\n    status:string | null\r\n    photos:{\r\n        small:string | null\r\n        large:string | null\r\n    }\r\n    followed:boolean\r\n}\r\nlet initialState={\r\n    Property:{\r\n        friendsData:[\r\n        ] as Array<FriendType>\r\n    }\r\n}\r\n\r\nexport type InitialStateType=typeof initialState\r\ntype ActionType=GetFriendsType | RemoveFriendsType\r\n\r\nlet reduceFriends=(state=initialState,action:ActionType):InitialStateType=>{\r\n    switch(action.type){\r\n        case Get_Friends:\r\n            return{...state,Property:\r\n                {friendsData:[...action.users]}}\r\n        case Remove_Friends:\r\n            return{...state,Property:\r\n                {friendsData:state.Property.friendsData.filter(f=>f.id!=action.id)}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype RemoveFriendsType={\r\n    id:number\r\n    type:typeof Remove_Friends\r\n}\r\nlet removeFriends=(id:number):RemoveFriendsType=>{\r\n    return{\r\n        type:Remove_Friends,\r\n        id\r\n    }\r\n}\r\ntype GetFriendsType={\r\n   users:Array<FriendType>\r\n   type:typeof Get_Friends \r\n}\r\nlet getFriends=(users:Array<FriendType>):GetFriendsType=>{\r\n    return{\r\n        type:Get_Friends,\r\n        users\r\n    }\r\n}\r\nexport let getFriendsThunk=(term:string=\"\"):ThunkType=>async (dispatch:any)=>{\r\n    let response= await addFriendPage.requestRealFriends(term)\r\n\r\n    dispatch(getFriends(response.data.items))\r\n}\r\nexport let removeFriendsThunk=(id:number):ThunkType=>async (dispatch:any)=>{\r\n    let response= await addFriendPage.doFollow(id)\r\n\r\n    dispatch(removeFriends(id))\r\n}\r\n\r\nexport default reduceFriends\r\n","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceGroups.ts",[],"C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceAudio.ts",["367","368"],"import { act } from \"react-dom/test-utils\"\r\nimport {AudioType} from \"../../Types/types\";\r\n\r\nlet ADD_AUDIO:\"audio/ADDAUDIO\"=\"audio/ADDAUDIO\"\r\nlet DELETE_AUDIO:\"audio/DELETEAUDIO\"=\"audio/DELETEAUDIO\"\r\n\r\nlet initialState={\r\n    Property:{\r\n        audioData:[\r\n            {name:\"Radioactive\",compositor:\"Imagine Dragons\",\r\n                asrc:\"dfdf\",id:1,\r\n                img:\"https://yt3.ggpht.com/a/AATXAJzMRQnWcgWN7NOXryCmUsaxpQRIlMQjocRVhWtd=s900-c-k-c0xffffffff-no-rj-mo\"\r\n            },\r\n\r\n            {name:\"Thunder\",compositor:\"Imagine Dragons\",\r\n                asrc:\"dfdf\",id:2,\r\n                img:\"https://i.pinimg.com/736x/ab/d4/ff/abd4ff99935065528d1421168b29f572.jpg\"\r\n            },\r\n\r\n            {name:\"Believer\",compositor:\"Imagine Dragons\",\r\n                asrc:\"dfdf\",id:3,\r\n                img:\"https://www.pakocampo.com/wp-content/uploads/pakocampo/2018/12/blog_2018_12_23_a_imagine_dragons_believer_pako_campo.jpg\"\r\n            }\r\n        ] as Array<AudioType>,\r\n        lastId:3 as number\r\n    }\r\n}\r\n\r\nexport type IntialStateType=typeof initialState\r\ntype ActionType = DeleteAudioType | AddAudioType  ;\r\nlet reduceAudio=(state=initialState,action:ActionType):IntialStateType=>{\r\n    let newState={...state}\r\n    newState.Property={...state.Property}\r\n    switch(action.type){\r\n        case ADD_AUDIO:\r\n            newState.Property.lastId++;\r\n            newState.Property.audioData=[...state.Property.audioData];\r\n            newState.Property.audioData.push({name:action.name,compositor:action.compositor,\r\n                asrc:action.asrc,img:action.img,id:state.Property.lastId+1})\r\n            return newState\r\n        case DELETE_AUDIO:\r\n            newState.Property.audioData=[...state.Property.audioData];\r\n            newState.Property.audioData=newState.Property.audioData.filter(a=>a.id!=action.id)\r\n            return newState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport type AddAudioType={\r\n  type:typeof ADD_AUDIO,\r\n  name:string,\r\n  compositor:string,\r\n  asrc:string,\r\n  img:string\r\n}\r\nexport let addAudio=(name:string,compositor:string,asrc:string,img:string):AddAudioType=>{\r\n    return{\r\n        type:ADD_AUDIO,\r\n        name,compositor,\r\n        asrc,img\r\n    }\r\n}\r\n\r\nexport type DeleteAudioType={\r\n  type:typeof DELETE_AUDIO,\r\n  id:number\r\n}\r\nexport let deleteAudio=(id:number):DeleteAudioType=>{\r\n    return{\r\n        type:DELETE_AUDIO,\r\n        id\r\n    }\r\n}\r\n\r\nexport default reduceAudio\r\n","C:\\Application\\firstProject\\my-app\\src\\Redux\\Reducers\\reduceAddFriend.ts",["369","370"],"import {addFriendPage} from \"./../../API/API\"\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStateType } from \"../Redux\";\r\n\r\nlet show_More:\"addFriend/showMore\"=\"addFriend/showMore\"\r\nlet do_Follow:\"addFriend/doFollow\"=\"addFriend/doFollow\"\r\nlet do_UnFollow:\"addFriend/doUnFollow\"=\"addFriend/doUnFollow\"\r\nlet change_Page:\"addFriend/changePage\"=\"addFriend/changePage\"\r\nlet set_Count_Page:\"addFriend/setCountPageAC\"=\"addFriend/setCountPageAC\"\r\nlet set_Fetching:\"addFriend/setFetching\"=\"addFriend/setFetching\"\r\nlet set_Button_Disabled:\"addFriend/buttonDisabled\"=\"addFriend/buttonDisabled\"\r\nlet set_Progress:\"addFriend/isProgress\"=\"addFriend/isProgress\"\r\nlet set_Term:\"addFriend/SetTerm\"=\"addFriend/SetTerm\"\r\n\r\ntype ThunkType=ThunkAction<Promise<void>, AppStateType, unknown, ActionType>\r\n\r\nlet initialState={\r\n    Property:{\r\n        Suggested:[\r\n        ]as any, //Users which show on the page\r\n        curPage:1 as number,\r\n        _totalCount:0 as number,\r\n        _countAcOnPage:100 as number,  //Count Account on Page\r\n        countPage:0 as number,\r\n        isFetching:false as boolean,\r\n        followingInProgress:[] as Array<number>,\r\n        isProgress:false as boolean,\r\n        term:\"\" as string\r\n    }\r\n}\r\n\r\ntype InititalStateType=typeof initialState\r\ntype ActionType=ShowMoreType | DoFollowType | DoUnFollowType | ChangePageType | SetCountPageType |\r\nSetFetchingType | SetProgressType | SetButtonDisabledType | SetTermType\r\n\r\nlet reduceAddFriend=(state=initialState,action:ActionType):InititalStateType=>{\r\n    let curState={...state,Property:{...state.Property}};\r\n    switch (action.type){\r\n        case show_More:\r\n            curState.Property={...state.Property,\r\n                Suggested:[...state.Property.Suggested,...action.users]}\r\n            return curState\r\n        case do_UnFollow:\r\n            curState.Property.Suggested=state.Property.Suggested.map((u:any)=>{\r\n                if(action.curId===u.id){\r\n                    return {...u,followed:true}\r\n                }\r\n                return u\r\n            })\r\n            return curState\r\n        case do_Follow:\r\n            curState.Property.Suggested=state.Property.Suggested.map((u:any)=>{\r\n                if(action.curId===u.id){\r\n                    return {...u,followed:false}\r\n                }\r\n                return u\r\n            })\r\n            return curState\r\n        case change_Page:\r\n            curState.Property.Suggested=[...state.Property.Suggested]\r\n            curState.Property.Suggested=[]\r\n            curState.Property.curPage=action.curPage\r\n            return curState\r\n        case set_Count_Page:\r\n            curState.Property.countPage=state.Property.countPage\r\n            curState.Property._totalCount=state.Property._totalCount\r\n            curState.Property._totalCount=action.count\r\n            curState.Property.countPage=Math.ceil(action.count/state.Property._countAcOnPage)\r\n            return curState\r\n        case set_Fetching:\r\n            curState.Property.isFetching=state.Property.isFetching\r\n            curState.Property.isFetching=action.isLoad\r\n            return curState\r\n        case set_Progress:\r\n            curState.Property.isProgress=state.Property.isProgress\r\n            curState.Property.isProgress=action.progress\r\n            return curState\r\n        case set_Button_Disabled:\r\n            curState.Property.followingInProgress=[...state.Property.followingInProgress]\r\n            if(state.Property.isProgress){\r\n                curState.Property.followingInProgress.push(action.id)\r\n            }else{\r\n                curState.Property.followingInProgress=curState.Property.followingInProgress.filter(e=>e!=action.id)\r\n            }\r\n            return curState\r\n        case set_Term:\r\n            return{...state,Property:{...state.Property,term:action.term}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype SetTermType={\r\n    type:typeof set_Term\r\n    term:string\r\n}\r\nlet _SetTerm=(term:string):SetTermType=>{\r\n    return{\r\n        type:set_Term,\r\n        term\r\n    }\r\n}\r\ntype ShowMoreType={\r\n  type:typeof show_More,\r\n  users:any\r\n}\r\nexport let showMore=(users:any):ShowMoreType=>{\r\n    return {\r\n        type:show_More,\r\n        users\r\n    }\r\n}\r\n\r\nexport type DoFollowType={\r\n  type:typeof do_Follow,\r\n  curId:number\r\n}\r\nexport let doFollow=(curId:number)=>{\r\n    return {\r\n        curId,\r\n        type:do_Follow\r\n    }\r\n}\r\n\r\nexport type DoUnFollowType={\r\n  type:typeof do_UnFollow,\r\n  curId:number\r\n}\r\nexport let doUnFollow=(curId:number):DoUnFollowType=>{\r\n    return{\r\n        type:do_UnFollow,\r\n        curId\r\n    }\r\n}\r\n\r\nexport type ChangePageType={\r\n  curPage:number,\r\n  type:typeof change_Page\r\n}\r\nexport let changePage=(curPage:number):ChangePageType=>{\r\n    return{\r\n        curPage,\r\n        type:change_Page\r\n    }\r\n}\r\n\r\nexport type SetCountPageType={\r\n  type:typeof set_Count_Page,\r\n  count:number\r\n}\r\nexport let setCountPage=(count:number):SetCountPageType=>{\r\n    return {\r\n        type:set_Count_Page,\r\n        count\r\n    }\r\n}\r\n\r\nexport type SetFetchingType={\r\n  type:typeof set_Fetching,\r\n  isLoad:boolean\r\n}\r\nexport let setFetching=(isLoad:boolean):SetFetchingType=>{\r\n    return{\r\n        type:set_Fetching,\r\n        isLoad\r\n    }\r\n}\r\n\r\nexport type SetProgressType={\r\n  type:typeof set_Progress,\r\n  progress:boolean\r\n}\r\nexport let setProgress=(progress:boolean):SetProgressType=>{\r\n    return {\r\n        type:set_Progress,\r\n        progress\r\n    }\r\n}\r\n\r\nexport type SetButtonDisabledType={\r\n  type:typeof set_Button_Disabled,\r\n  id:number\r\n}\r\nexport let setButtonDisabled=(id:number):SetButtonDisabledType=>{\r\n    return{\r\n        type:set_Button_Disabled,\r\n        id\r\n    }\r\n}\r\nlet doFollowDRY= async (dispatch:any,request:any,action:any,id:number)=>{\r\n    dispatch(setProgress(true))\r\n    dispatch(setButtonDisabled(id))\r\n    let response = await request(id)\r\n\r\n    dispatch(setProgress(false))\r\n    dispatch(setButtonDisabled(id))\r\n    if(response.data.resultCode==0){\r\n        dispatch(action(id))\r\n    }\r\n}\r\nexport let doFollowThunk=(id:number):ThunkType=> async (dispatch:any)=>{\r\n    doFollowDRY(dispatch,addFriendPage.doFollow,doFollow,id)\r\n}\r\nexport let doUnFollowThunk=(id:number):ThunkType=> async (dispatch:any)=>{\r\n    doFollowDRY(dispatch,addFriendPage.doUnFollow,doUnFollow,id)\r\n}\r\nexport let requestFriendsThunk=(page:number,term:string=\"\"):ThunkType=> async (dispatch:any)=>{\r\n        dispatch(setFetching(true))\r\n        dispatch(_SetTerm(term))\r\n        let response=await addFriendPage.requestFriends(page,term)\r\n\r\n        dispatch(setCountPage(response.data.totalCount))\r\n        dispatch(showMore(response.data.items))\r\n        dispatch(setFetching(false))\r\n}\r\n\r\nexport default reduceAddFriend\r\n","C:\\Application\\firstProject\\my-app\\src\\Article\\Photo\\PhotoTemplate.tsx",["371"],"import React from \"react\";\r\n\r\nexport type PhotoType={\r\n  RemovePhoto:(id:number)=>void\r\n  name:string\r\n  id:number\r\n  img:string\r\n}\r\n\r\nlet PhotoTemplate:React.FC<PhotoType>=(props:PhotoType)=>{\r\n    let removePhoto=()=>{\r\n        props.RemovePhoto(props.id)\r\n    }\r\n    return<div className=\"col-md-6 card mt-2\">\r\n        <div className=\"card-body\">\r\n            <h1 className=\"Link\">{props.name}\r\n            <div className=\"right\">\r\n                <button onClick={removePhoto} className=\"btn-close\"></button>\r\n            </div>\r\n            </h1>\r\n            <img className=\"img w-100 rounded\" src={props.img} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default PhotoTemplate\r\n","C:\\Application\\firstProject\\my-app\\src\\Article\\Photo\\Photo.jsx",["372"],"import PhotoTemplate from \"./PhotoTemplate\";\r\nimport { useState } from \"react\";\r\nimport { Field,reduxForm } from \"redux-form\";\r\nimport Input from \"../../Bricks/LoginInput\";\r\nimport { requiredField } from \"../../Validates/ValidateForText\";\r\n\r\nlet Photo=(props)=>{\r\n    let [editMode,changeMode]=useState(false)\r\n    let toEditMode=()=>{\r\n        changeMode(true)\r\n    }\r\n    let goOutEditMode=()=>{\r\n        changeMode(false)\r\n    }\r\n    let AddPhoto=(value)=>{\r\n        props.AddPhoto(value.namePhoto,value.urlPhoto)\r\n    }\r\n    return<div>\r\n          <div className=\"right\">\r\n            {editMode ?\r\n            <div onClick={goOutEditMode}>\r\n                <span className=\"Link\">\r\n                    Cancel\r\n                </span>\r\n                <button className=\"btn btn-close btn-outline-danger\">\r\n                </button>\r\n            </div> :\r\n            <div onClick={toEditMode}>\r\n                <span className=\"Link\">\r\n                    Add photo\r\n                </span>\r\n                <button className=\"btn btn-outline-success\">+\r\n                </button>\r\n            </div>}\r\n        </div>\r\n        <div>\r\n            {editMode && \r\n            <div>\r\n            <br />\r\n            <PhotoReduxForm onSubmit={AddPhoto}/>\r\n            </div>}\r\n        </div>\r\n        <br />\r\n        <div className=\"row mx-2 my-2\">\r\n            {props.photoData}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nlet PhotoForm=(props)=>{\r\n  return<form className=\"Login\" onSubmit={props.handleSubmit}>\r\n        <div className=\"d-flex\">\r\n            Name Photo: <Field name={\"namePhoto\"} component={Input}\r\n            validate={[requiredField]} />\r\n        </div>\r\n        <div className=\"d-flex\">\r\n            URL Photo: <Field name={\"urlPhoto\"} component={Input}\r\n            validate={[requiredField]} />\r\n        </div>\r\n        <button className=\"w-100 btn btn-success\">\r\n            Add\r\n        </button>\r\n    </form>\r\n}\r\n\r\nlet PhotoReduxForm=reduxForm({form:\"forPhoto\"})(PhotoForm)\r\n\r\nexport default Photo\r\n","C:\\Application\\firstProject\\my-app\\src\\Redux\\Redux.ts",[],"C:\\Application\\firstProject\\my-app\\src\\Article\\Audio\\ContainerAudio.tsx",[],"C:\\Application\\firstProject\\my-app\\src\\Article\\Main\\ContainerMain.tsx",["373"],"import { connect } from \"react-redux\";\r\nimport {setStatusThunk,deletePost,getStatusThunk,setAccountThunk,changeStatus,changeText,doPost, doLike, setAccount} from \"../../Redux/Reducers/reduceMain\"\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Main from \"./Main\"\r\nimport MainHooks from \"./MainHooks\";\r\nimport WithCheckAuth from \"../../HOCS/withCheckAuth\";\r\nimport { compose } from \"redux\";\r\nimport { getAccount, getMyId, getPosts, getStatus, getText } from \"../../Redux/Selectors/mainSelector\";\r\nimport { AccountType } from \"../../Types/types\";\r\nimport { AppStateType } from \"../../Redux/Redux\";\r\n\r\ntype MSTPType={\r\n  Account:AccountType\r\n  text:string\r\n  posts:any //its array with jsx\r\n  status:string\r\n  myId:number | null\r\n}\r\ntype MDTPType={\r\n  changeStatus:(t:string)=>void\r\n  changeText:(t:string | null)=>void\r\n  getStatusThunk:(id:number)=>void\r\n  doPost:(text:string | null)=>void\r\n  doLike:(name:string | null,message:string | null,like:number)=>void\r\n  setAccount:(data:AccountType )=>void\r\n  setAccountThunk:(userId:number)=>void\r\n  setStatusThunk:(status:string )=>void\r\n  deletePost:(name:string | null,message:string | null,like:number)=>void\r\n}\r\ntype OwnPropsType={}\r\nlet mapStateToProps=(state:AppStateType):MSTPType=>{\r\n    return{\r\n    Account:getAccount(state),\r\n    text:getText(state),\r\n    posts:getPosts(state),\r\n    status:getStatus(state),\r\n    myId:getMyId(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    WithCheckAuth,\r\n    withRouter,\r\n    connect<MSTPType,MDTPType,OwnPropsType,AppStateType>(mapStateToProps,{\r\n        changeStatus,changeText,getStatusThunk,\r\n        doPost,doLike,setAccount,setAccountThunk,\r\n        setStatusThunk,deletePost\r\n    })\r\n)(MainHooks)\r\n","C:\\Application\\firstProject\\my-app\\src\\Article\\Message\\ContainerMessage.tsx",["374"],"import withCheckAuth from \"../../HOCS/withCheckAuth\";\r\nimport Message from \"./Message\";\r\nimport { connect } from \"react-redux\";\r\nimport { doMessage,changeDialog } from \"../../Redux/Reducers/reduceMessage\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { getCurDialog, getPeopleData,getMessageData } from \"../../Redux/Selectors/messageSelector\";\r\nimport React from \"react\";\r\nimport { AppStateType } from \"../../Redux/Redux\";\r\n\r\ntype OwnProps={}\r\ntype MDTPType={\r\n  doMessage:(p:string,text:string)=>void\r\n  changeDialog:(curDialog:number)=>void\r\n}\r\ntype MSTPType={\r\n  peopleData:any // Array with jsx\r\n  messageData:any // Array with jsx\r\n  curDialog:number\r\n}\r\nlet mapStateToProps=(state:AppStateType):MSTPType=>{\r\n    return{\r\n        peopleData:getPeopleData(state),\r\n        messageData:getMessageData(state),\r\n        curDialog:getCurDialog(state)\r\n    }\r\n}\r\nexport default compose(\r\n    withCheckAuth,\r\n    withRouter,\r\n    connect<MSTPType,MDTPType,OwnProps,AppStateType>(mapStateToProps,{doMessage,\r\n    changeDialog})\r\n)(Message)\r\n","C:\\Application\\firstProject\\my-app\\src\\Article\\Video\\ContainerVideo.tsx",[],"C:\\Application\\firstProject\\my-app\\src\\Article\\Groups\\ContainerGroups.tsx",[],"C:\\Application\\firstProject\\my-app\\src\\Article\\Edit\\ContainerEdit.tsx",[],"C:\\Application\\firstProject\\my-app\\src\\Article\\Friends\\ContainerFriends.tsx",["375"],"import Friends from \"./Friends\";\r\nimport { connect } from \"react-redux\";\r\nimport WithCheckAuth from \"../../HOCS/withCheckAuth\";\r\nimport { compose } from \"redux\";\r\nimport { getFriendsSelector } from \"../../Redux/Selectors/friendSelector\";\r\nimport { AppStateType } from \"../../Redux/Redux\";\r\nimport { FriendType, getFriendsThunk, removeFriendsThunk } from \"../../Redux/Reducers/reduceFriends\";\r\nimport { getFollowingInProgress } from \"../../Redux/Selectors/userSelector\";\r\nimport { doFollowThunk,doUnFollowThunk } from \"../../Redux/Reducers/reduceAddFriend\";\r\n\r\ntype MSTPType={\r\n  friendsData:Array<FriendType> // here Array with jsx\r\n  followingInProgress:Array<number>\r\n}\r\ntype MDTPType={\r\n    getFriendsThunk:(term?:string)=>void\r\n    removeFriendsThunk:(id:number)=>void\r\n    doUnFollowThunk:(id:number)=>void\r\n}\r\ntype OwnPropsType={\r\n\r\n}\r\nlet mapStateToProps=(state:AppStateType):MSTPType=>{\r\n    return{\r\n        friendsData:getFriendsSelector(state),\r\n        followingInProgress:getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    WithCheckAuth,\r\n    connect<MSTPType,MDTPType,OwnPropsType,AppStateType>\r\n    (mapStateToProps,{getFriendsThunk,doUnFollowThunk,removeFriendsThunk})\r\n    )(Friends)\r\n","C:\\Application\\firstProject\\my-app\\src\\Article\\Friends\\AddFriend\\ContainerAddFriend.tsx",["376","377","378","379","380","381","382","383"],"import { connect } from \"react-redux\";\r\nimport { requestFriendsThunk,doUnFollowThunk,doFollowThunk,setProgress,setButtonDisabled,setFetching,doFollow,doUnFollow,showMore,changePage,setCountPage } from \"../../../Redux/Reducers/reduceAddFriend\";\r\nimport AddFriend from \"./AddFriend\";\r\nimport React, { useEffect } from \"react\";\r\nimport { getUsersData,getCurPage,getCountPage,getIsFetching,getFollowingInProgress } from \"../../../Redux/Selectors/userSelector\";\r\nimport *  as axios from \"axios\";\r\nimport SuggestedFriend from \"./SuggestFriend\";\r\nimport Loader from \"../../../Loader\";\r\nimport { AppStateType } from \"../../../Redux/Redux\";\r\n\r\ntype PropsType=MDTPType & MSTPType\r\nlet AddFriendAPIHoocks:React.FC<PropsType>=(props)=>{\r\n    useEffect(()=>{\r\n        requestFriends()\r\n    },[])\r\n    let requestFriends=(term:string=\"\")=>{\r\n        props.requestFriendsThunk(props.curPage,term)\r\n    }\r\n\r\n    let changePage=(page:any):void=>{ //Html element\r\n        if(!page.target){\r\n            props.changePage(page)\r\n            requestFriends()\r\n        }else{\r\n            props.changePage(page.target.id)\r\n            requestFriends()\r\n        }\r\n    }\r\n\r\n    let usersData=props.usersData.map(u=>{\r\n        return <SuggestedFriend name={u.name} status={u.status}\r\n        followed={u.followed} photos={u.photos} doFollow={props.doFollowThunk}\r\n        doUnFollow={props.doUnFollowThunk} id={u.id}\r\n        followingInProgress={props.followingInProgress}  />\r\n        })\r\n    return<div>\r\n        { props.isFetching?<Loader/>:\r\n        <AddFriend usersData={usersData} curPage={props.curPage}\r\n        changePage={changePage} requestFriends={requestFriends}\r\n        countPage={props.countPage}/>\r\n        }\r\n    </div>\r\n}\r\n\r\n// class AddFriendAPI extends React.Component{\r\n//\r\n//     componentDidMount(){\r\n//         this.requestFriends()\r\n//\r\n//     }\r\n//\r\n//     requestFriends=()=>{\r\n//         this.props.requestFriendsThunk(this.props.curPage)\r\n//     }\r\n//\r\n//     changePage=(page)=>{\r\n//         this.props.changePage(page.target.id)\r\n//         this.requestFriends()\r\n//     }\r\n//\r\n//     render=()=>{\r\n//         let curPages=[]\r\n//         for(let i=1;i<=this.props.countPage;i++){\r\n//             let e=null;\r\n//             if (this.props.curPage==i){\r\n//                 e=<button id={i} className=\"btn btn-light\" onClick={this.changePage}>{i}</button>\r\n//             }\r\n//             else{\r\n//                 e=<button id={i} className=\"btn btn-primary\" onClick={this.changePage}>{i}</button>\r\n//             }\r\n//             curPages.push(e)\r\n//         }\r\n//\r\n//         let usersData=this.props.usersData.map(u=>{\r\n//             return <SuggestedFriend name={u.name} status={u.status}\r\n//             followed={u.followed} photos={u.photos} doFollow={this.props.doFollowThunk}\r\n//             doUnFollow={this.props.doUnFollowThunk} id={u.id}\r\n//             setButtonDisabled={this.props.setButtonDisabled} followingInProgress={this.props.followingInProgress}  />\r\n//             })\r\n//         return<div>\r\n//             { this.props.isFetching?<Loader/>:\r\n//             <AddFriend usersData={usersData}\r\n//             curPages={curPages}\r\n//             requestFriends={this.requestFriends}/>\r\n//             }\r\n//         </div>\r\n//     }\r\n// }\r\n\r\ntype MSTPType={\r\n  usersData:Array<any>, // i dont remember what here the object:)\r\n  curPage:number,\r\n  countPage:null | number,\r\n  isFetching:boolean,\r\n  followingInProgress:Array<number>\r\n}\r\ntype MDTPType={\r\n  changePage:(curPage:number)=>void\r\n  setCountPage:(count:number)=>void\r\n  doFollowThunk:(id:number)=>void\r\n  doUnFollowThunk:(id:number)=>void\r\n  requestFriendsThunk:(page:number,term?:string)=>void\r\n}\r\ntype OwnPropsType={}\r\nlet mapStateToProps=(state:AppStateType):MSTPType=>{\r\n    return{\r\n    usersData:getUsersData(state),\r\n    curPage:getCurPage(state),\r\n    countPage:getCountPage(state),\r\n    isFetching:getIsFetching(state),\r\n    followingInProgress:getFollowingInProgress(state)\r\n    }\r\n}\r\n//StateProps,DispatchProps,OwnProps,State\r\nexport default connect<MSTPType,MDTPType,OwnPropsType,AppStateType>(mapStateToProps,{\r\n    changePage,setCountPage,\r\n    doFollowThunk,doUnFollowThunk,\r\n    requestFriendsThunk\r\n    })(AddFriendAPIHoocks)\r\n","C:\\Application\\firstProject\\my-app\\src\\Article\\Photo\\ContainerPhoto.tsx",[],"C:\\Application\\firstProject\\my-app\\src\\Article\\Groups\\Groups.tsx",["384"],"import Group from \"./Group\";\r\nimport React from \"react\";\r\n\r\ntype PropsType={\r\n  groupsData:any // its Array with jsx\r\n}\r\n\r\nlet Groups:React.FC<PropsType>=(props)=>{\r\n    return<div className=\"mt-2\">\r\n        {props.groupsData}\r\n    </div>\r\n}\r\n\r\nexport default Groups\r\n","C:\\Application\\firstProject\\my-app\\src\\Article\\Friends\\Friends.tsx",["385","386"],"import Friend from \"./Friend\";\r\nimport {NavLink} from \"react-router-dom\"\r\nimport React,{useEffect} from \"react\";\r\nimport SuggestedFriend from \"./AddFriend/SuggestFriend\"\r\nimport { FriendType } from \"../../Redux/Reducers/reduceFriends\";\r\nimport SearchBar from \"./AddFriend/SearchBar\"\r\n\r\ntype PropsType={\r\n  friendsData:Array<FriendType>//object with jsx\r\n  followingInProgress:Array<number>\r\n  getFriendsThunk:(term?:string)=>void\r\n  removeFriendsThunk:(id:number)=>void\r\n  doUnFollowThunk:(id:number)=>void\r\n}\r\n\r\nlet Friends:React.FC<PropsType>=(props)=>{\r\n    useEffect(()=>{\r\n        props.getFriendsThunk()\r\n    },[])\r\n    let friendsData=props.friendsData.map(u=>{\r\n        return <SuggestedFriend name={u.name} status={u.status}\r\n        followed={u.followed} photos={u.photos} doFollow={props.removeFriendsThunk}\r\n        doUnFollow={props.doUnFollowThunk} id={u.id}\r\n        followingInProgress={props.followingInProgress}  />\r\n        })\r\n    return<div>\r\n        <div className=\"right\">\r\n            <NavLink to=\"/AddFriend\" className=\"Link\">\r\n                Would you like looking for a friend?\r\n                <span className=\"badge\">+</span>\r\n            </NavLink>\r\n        </div>\r\n        <br />\r\n            <span className=\"text-light\">\r\n                Friends\r\n            </span>\r\n        <br />\r\n        <SearchBar requestFriends={props.getFriendsThunk} />\r\n        <div>\r\n            {friendsData}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Friends\r\n","C:\\Application\\firstProject\\my-app\\src\\Article\\Friends\\AddFriend\\SuggestFriend.tsx",["387","388","389","390","391"],"import {NavLink} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { addFriendPage } from \"../../../API/API\";\r\nimport React from \"react\";\r\n\r\ntype PropsType={\r\n  id:number\r\n  name:string\r\n  status:string | null\r\n  photos:{\r\n    small:string | null\r\n    large:string | null\r\n    }\r\n  followed:boolean\r\n  doFollow:(curId:number)=>void\r\n  doUnFollow:(curId:number)=>void\r\n  followingInProgress:Array<number>\r\n}\r\n\r\nlet SuggestFriend:React.FC<PropsType>=(props)=>{\r\n    let doFollow=()=>{\r\n        props.doFollow(props.id)\r\n    }\r\n\r\n    let doUnFollow=()=>{\r\n        props.doUnFollow(props.id)\r\n    }\r\n    let path=\"/Main/\"+props.id\r\n    return<div>\r\n        <div className=\"card mt-2\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <NavLink to={path}>\r\n                    <img className=\"img w-100 rounded\" src={\r\n                    props.photos.small!=null ?\r\n                    props.photos.small: \"https://yt3.ggpht.com/a/AATXAJxBIHeWWHukUiEPDTQi7B5rqpa8nZRUYARxyEGH=s900-c-k-c0x00ffffff-no-rj\"}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                    <div className=\"card-body\">\r\n                        <h1 className=\"NavLink\">{props.name}</h1>\r\n                        Status: {props.status}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                {props.followed ?\r\n                <button onClick={doFollow} disabled={props.followingInProgress.some(curId=>props.id==curId)} className=\"btn btn-danger w-100\">\r\n                    UnFollow\r\n                </button>\r\n                :<button onClick={doUnFollow} disabled={props.followingInProgress.some(id=>props.id==id)} className=\"btn btn-success w-100\">\r\n                    Follow\r\n                </button>}\r\n        </div>\r\n    </div>\r\n}\r\nexport default SuggestFriend\r\n","C:\\Application\\firstProject\\my-app\\src\\Article\\Friends\\AddFriend\\AddFriend.tsx",[],"C:\\Application\\firstProject\\my-app\\src\\Article\\Main\\Post.tsx",["392","393"],"import { NavLink } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\ntype PropsType={\r\n  doLike:(name:string,message:string,like:number)=>void\r\n  deletePost:(name:string,message:string,like:number)=>void\r\n  img:string | null\r\n  name:string\r\n  message:string\r\n  like:number\r\n  ableLike:boolean\r\n}\r\n\r\nlet Post:React.FC<PropsType>=(props)=>{\r\n    let doLike=()=>{\r\n        return props.doLike(props.name,props.message,props.like)\r\n    }\r\n    let deletePost=()=>{\r\n        return props.deletePost(props.name,props.message,props.like)\r\n    }\r\n    return<div className=\"mt-2\">\r\n        <div className=\"card\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <img className=\"img w-100 rounded\" src={props.img ? props.img : \"https://yt3.ggpht.com/ytc/AAUvwniy7j4PC5ul7yauPrWqVsh5f4FfNtbWT5k3n6kj=s900-c-k-c0x00ffffff-no-rj\"}/>\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n\r\n                    <div className=\"right\">\r\n                        <button className=\"btn-close\" onClick={deletePost}>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <h1 className=\"Link\">{props.name}</h1>\r\n\r\n                    <div className=\"card-body\">\r\n                        {props.message}\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        {props.ableLike ? <button onClick={doLike} className=\"btn btn-outline-danger\">\r\n                            like\r\n                        </button>\r\n                        :\r\n                        <button onClick={doLike} className=\"btn btn-danger\">\r\n                            like\r\n                        </button>}\r\n                        <span className=\"badge likeBg mx-2\">{props.like}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post\r\n","C:\\Application\\firstProject\\my-app\\src\\Article\\Message\\singleMessage.tsx",[],"C:\\Application\\firstProject\\my-app\\src\\Article\\Message\\People.tsx",[],"C:\\Application\\firstProject\\my-app\\src\\Article\\Video\\VideoTemplate.tsx",[],"C:\\Application\\firstProject\\my-app\\src\\Article\\Video\\ContainerVideoTemplate.tsx",[],"C:\\Application\\firstProject\\my-app\\src\\Article\\Friends\\Friend.tsx",["394"],"import { NavLink } from \"react-router-dom\"\r\nimport React from \"react\";\r\n\r\ntype PropsType={\r\n  name:string\r\n  discription:string\r\n  img:string\r\n}\r\n\r\nlet Friend:React.FC<PropsType>=(props)=>{\r\n    let p=\"/\"+props.name\r\n    return<div className=\"mt-2\">\r\n        <div className=\"card\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <img className=\"img w-100 rounded\" src={props.img}/>\r\n                </div>\r\n\r\n                <div className=\"col-md-10 card-body\">\r\n                    <h1><NavLink className=\"Link\" to={p}>{props.name}</NavLink></h1>\r\n                    {props.discription}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Friend\r\n","C:\\Application\\firstProject\\my-app\\src\\Article\\Audio\\ContainerAudioTemplate.tsx",[],"C:\\Application\\firstProject\\my-app\\src\\Article\\Groups\\Group.tsx",["395","396","397"],"import { NavLink } from \"react-router-dom\"\r\nimport React from \"react\";\r\n\r\ntype PropsType={\r\n  img:string\r\n  name:string\r\n  way:string\r\n  discription:string\r\n  followers:number\r\n}\r\n\r\nlet Group:React.FC<PropsType>=(props)=>{\r\n    return<div className=\"card mt-2\">\r\n        <div className=\"row\">\r\n        <div className=\"col-md-2\">\r\n            <img className=\"img w-100 rounded\" src={props.img}/>\r\n        </div>\r\n\r\n        <div className=\"col-md-10\">\r\n            <div className=\"card-body\">\r\n                <a target=\"_blank\" href={props.way} className=\"Link\"><h1>\r\n                    {props.name}\r\n                </h1></a>\r\n                {props.discription}<br />\r\n                <div className=\"right mt-4\">\r\n                    followers <div className=\"badge\">\r\n                        {props.followers}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Group\r\n","C:\\Application\\firstProject\\my-app\\src\\Article\\Photo\\ContainerPhotoTemplate.tsx",[],"C:\\Application\\firstProject\\my-app\\src\\Article\\Audio\\AudioTemplate.tsx",[],["398","399"],"C:\\Application\\firstProject\\my-app\\src\\Types\\types.ts",[],"C:\\Application\\firstProject\\my-app\\src\\Header\\ContainerHeader.tsx",[],"C:\\Application\\firstProject\\my-app\\src\\Aside\\Aside.tsx",[],"C:\\Application\\firstProject\\my-app\\src\\Header\\Header.tsx",[],"C:\\Application\\firstProject\\my-app\\src\\API\\API.ts",[],"C:\\Application\\firstProject\\my-app\\src\\Article\\Friends\\AddFriend\\SearchBar.tsx",["400","401"],"import {Formik} from \"formik\"\r\nimport { maxLengthCreator } from \"../../../Validates/ValidateForText\";\r\nimport React from \"react\";\r\nimport { requestFriendsThunk } from \"../../../Redux/Reducers/reduceAddFriend\";\r\n\r\ntype errorType={\r\n    term:null | string\r\n}\r\ntype initValueType={\r\n    term:string\r\n}\r\ntype PropsType={\r\n  requestFriends:(term:string)=>void\r\n}\r\nconst SearchBar:React.FC<PropsType>=(props)=>{\r\n    return<div>\r\n        <Formik\r\n        initialValues={{term:\"\"} as initValueType}\r\n        validate={values=>{\r\n            const errors:errorType={\r\n                term:null\r\n            }\r\n            if(values.term.length>30){\r\n                errors.term=\"max length is 30\"\r\n                return errors\r\n            }\r\n            return {};\r\n        }}\r\n        onSubmit={(values:initValueType,{ setSubmitting })=>{\r\n            props.requestFriends(values.term)\r\n            setSubmitting(false);\r\n        }}>\r\n            {({\r\n         values,\r\n         errors,\r\n         touched,\r\n         handleChange,\r\n         handleBlur,\r\n         handleSubmit,\r\n         isSubmitting,\r\n         /* and other goodies */\r\n       }) => (\r\n         <form onSubmit={handleSubmit}>\r\n           <div className=\"d-flex\">\r\n           <input\r\n             type=\"search\"\r\n             className=\"form-control\"\r\n             name=\"term\"\r\n             onChange={handleChange}\r\n             value={values.term}\r\n           />\r\n           <button className=\"btn btn-success\" type=\"submit\" disabled={isSubmitting}>\r\n             Submit\r\n           </button>\r\n           </div>\r\n           <span className=\"text-danger\">\r\n             {touched.term && errors.term && errors.term}\r\n           </span>\r\n         </form>\r\n       )}\r\n        </Formik>\r\n    </div>\r\n}\r\n\r\nexport default SearchBar",{"ruleId":"402","replacedBy":"403"},{"ruleId":"404","replacedBy":"405"},{"ruleId":"406","severity":1,"message":"407","line":1,"column":8,"nodeType":"408","messageId":"409","endLine":1,"endColumn":12},{"ruleId":"410","severity":1,"message":"411","line":51,"column":20,"nodeType":"412","messageId":"413","endLine":51,"endColumn":22},{"ruleId":"414","severity":1,"message":"415","line":77,"column":21,"nodeType":"416","endLine":77,"endColumn":72},{"ruleId":"402","replacedBy":"417"},{"ruleId":"404","replacedBy":"418"},{"ruleId":"410","severity":1,"message":"419","line":24,"column":16,"nodeType":"412","messageId":"413","endLine":24,"endColumn":18},{"ruleId":"406","severity":1,"message":"420","line":1,"column":24,"nodeType":"408","messageId":"409","endLine":1,"endColumn":33},{"ruleId":"406","severity":1,"message":"421","line":1,"column":8,"nodeType":"408","messageId":"409","endLine":1,"endColumn":21},{"ruleId":"406","severity":1,"message":"422","line":3,"column":21,"nodeType":"408","messageId":"409","endLine":3,"endColumn":32},{"ruleId":"414","severity":1,"message":"415","line":29,"column":31,"nodeType":"416","endLine":30,"endColumn":35},{"ruleId":"414","severity":1,"message":"415","line":5,"column":9,"nodeType":"416","endLine":5,"endColumn":80},{"ruleId":"423","severity":1,"message":"424","line":17,"column":20,"nodeType":"425","endLine":17,"endColumn":30},{"ruleId":"410","severity":1,"message":"411","line":43,"column":20,"nodeType":"412","messageId":"413","endLine":43,"endColumn":22},{"ruleId":"414","severity":1,"message":"415","line":69,"column":21,"nodeType":"416","endLine":69,"endColumn":68},{"ruleId":"426","severity":1,"message":"427","line":125,"column":33,"nodeType":"416","endLine":125,"endColumn":104},{"ruleId":"406","severity":1,"message":"428","line":1,"column":8,"nodeType":"408","messageId":"409","endLine":1,"endColumn":14},{"ruleId":"406","severity":1,"message":"420","line":1,"column":10,"nodeType":"408","messageId":"409","endLine":1,"endColumn":19},{"ruleId":"410","severity":1,"message":"419","line":8,"column":25,"nodeType":"412","messageId":"413","endLine":8,"endColumn":27},{"ruleId":"414","severity":1,"message":"415","line":5,"column":15,"nodeType":"416","endLine":5,"endColumn":57},{"ruleId":"423","severity":1,"message":"429","line":11,"column":7,"nodeType":"430","endLine":11,"endColumn":9,"suggestions":"431"},{"ruleId":"410","severity":1,"message":"411","line":30,"column":57,"nodeType":"412","messageId":"413","endLine":30,"endColumn":59},{"ruleId":"402","replacedBy":"403"},{"ruleId":"404","replacedBy":"405"},{"ruleId":"410","severity":1,"message":"411","line":38,"column":57,"nodeType":"412","messageId":"413","endLine":38,"endColumn":59},{"ruleId":"410","severity":1,"message":"419","line":84,"column":33,"nodeType":"412","messageId":"413","endLine":84,"endColumn":35},{"ruleId":"410","severity":1,"message":"419","line":88,"column":36,"nodeType":"412","messageId":"413","endLine":88,"endColumn":38},{"ruleId":"410","severity":1,"message":"419","line":100,"column":32,"nodeType":"412","messageId":"413","endLine":100,"endColumn":34},{"ruleId":"432","severity":1,"message":"433","line":2,"column":26,"nodeType":"408","messageId":"409","endLine":2,"endColumn":38},{"ruleId":"432","severity":1,"message":"434","line":13,"column":5,"nodeType":"408","messageId":"409","endLine":13,"endColumn":45},{"ruleId":"410","severity":1,"message":"419","line":54,"column":19,"nodeType":"412","messageId":"413","endLine":54,"endColumn":21},{"ruleId":"410","severity":1,"message":"419","line":59,"column":19,"nodeType":"412","messageId":"413","endLine":59,"endColumn":21},{"ruleId":"410","severity":1,"message":"419","line":64,"column":19,"nodeType":"412","messageId":"413","endLine":64,"endColumn":21},{"ruleId":"410","severity":1,"message":"419","line":75,"column":19,"nodeType":"412","messageId":"413","endLine":75,"endColumn":21},{"ruleId":"410","severity":1,"message":"419","line":80,"column":39,"nodeType":"412","messageId":"413","endLine":80,"endColumn":41},{"ruleId":"410","severity":1,"message":"419","line":92,"column":19,"nodeType":"412","messageId":"413","endLine":92,"endColumn":21},{"ruleId":"410","severity":1,"message":"419","line":97,"column":19,"nodeType":"412","messageId":"413","endLine":97,"endColumn":21},{"ruleId":"410","severity":1,"message":"411","line":99,"column":69,"nodeType":"412","messageId":"413","endLine":99,"endColumn":71},{"ruleId":"410","severity":1,"message":"411","line":99,"column":97,"nodeType":"412","messageId":"413","endLine":99,"endColumn":99},{"ruleId":"410","severity":1,"message":"411","line":99,"column":125,"nodeType":"412","messageId":"413","endLine":99,"endColumn":127},{"ruleId":"432","severity":1,"message":"435","line":199,"column":9,"nodeType":"408","messageId":"409","endLine":199,"endColumn":17},{"ruleId":"410","severity":1,"message":"411","line":36,"column":71,"nodeType":"412","messageId":"413","endLine":36,"endColumn":73},{"ruleId":"432","severity":1,"message":"435","line":68,"column":9,"nodeType":"408","messageId":"409","endLine":68,"endColumn":17},{"ruleId":"432","severity":1,"message":"436","line":1,"column":10,"nodeType":"408","messageId":"409","endLine":1,"endColumn":13},{"ruleId":"410","severity":1,"message":"411","line":43,"column":83,"nodeType":"412","messageId":"413","endLine":43,"endColumn":85},{"ruleId":"410","severity":1,"message":"411","line":83,"column":104,"nodeType":"412","messageId":"413","endLine":83,"endColumn":106},{"ruleId":"410","severity":1,"message":"419","line":197,"column":32,"nodeType":"412","messageId":"413","endLine":197,"endColumn":34},{"ruleId":"414","severity":1,"message":"415","line":21,"column":13,"nodeType":"416","endLine":21,"endColumn":66},{"ruleId":"406","severity":1,"message":"437","line":1,"column":8,"nodeType":"408","messageId":"409","endLine":1,"endColumn":21},{"ruleId":"432","severity":1,"message":"438","line":4,"column":8,"nodeType":"408","messageId":"409","endLine":4,"endColumn":12},{"ruleId":"432","severity":1,"message":"439","line":8,"column":8,"nodeType":"408","messageId":"409","endLine":8,"endColumn":13},{"ruleId":"432","severity":1,"message":"440","line":9,"column":10,"nodeType":"408","messageId":"409","endLine":9,"endColumn":23},{"ruleId":"432","severity":1,"message":"441","line":2,"column":60,"nodeType":"408","messageId":"409","endLine":2,"endColumn":71},{"ruleId":"432","severity":1,"message":"442","line":2,"column":72,"nodeType":"408","messageId":"409","endLine":2,"endColumn":89},{"ruleId":"432","severity":1,"message":"443","line":2,"column":90,"nodeType":"408","messageId":"409","endLine":2,"endColumn":101},{"ruleId":"432","severity":1,"message":"444","line":2,"column":102,"nodeType":"408","messageId":"409","endLine":2,"endColumn":110},{"ruleId":"432","severity":1,"message":"445","line":2,"column":111,"nodeType":"408","messageId":"409","endLine":2,"endColumn":121},{"ruleId":"432","severity":1,"message":"446","line":2,"column":122,"nodeType":"408","messageId":"409","endLine":2,"endColumn":130},{"ruleId":"432","severity":1,"message":"447","line":6,"column":14,"nodeType":"408","messageId":"409","endLine":6,"endColumn":19},{"ruleId":"423","severity":1,"message":"448","line":15,"column":7,"nodeType":"430","endLine":15,"endColumn":9,"suggestions":"449"},{"ruleId":"432","severity":1,"message":"450","line":1,"column":8,"nodeType":"408","messageId":"409","endLine":1,"endColumn":13},{"ruleId":"432","severity":1,"message":"428","line":1,"column":8,"nodeType":"408","messageId":"409","endLine":1,"endColumn":14},{"ruleId":"423","severity":1,"message":"429","line":19,"column":7,"nodeType":"430","endLine":19,"endColumn":9,"suggestions":"451"},{"ruleId":"432","severity":1,"message":"447","line":2,"column":8,"nodeType":"408","messageId":"409","endLine":2,"endColumn":13},{"ruleId":"432","severity":1,"message":"452","line":3,"column":10,"nodeType":"408","messageId":"409","endLine":3,"endColumn":23},{"ruleId":"414","severity":1,"message":"415","line":34,"column":21,"nodeType":"416","endLine":36,"endColumn":141},{"ruleId":"410","severity":1,"message":"419","line":47,"column":100,"nodeType":"412","messageId":"413","endLine":47,"endColumn":102},{"ruleId":"410","severity":1,"message":"419","line":50,"column":100,"nodeType":"412","messageId":"413","endLine":50,"endColumn":102},{"ruleId":"432","severity":1,"message":"453","line":1,"column":10,"nodeType":"408","messageId":"409","endLine":1,"endColumn":17},{"ruleId":"414","severity":1,"message":"415","line":25,"column":21,"nodeType":"416","endLine":25,"endColumn":187},{"ruleId":"414","severity":1,"message":"415","line":16,"column":21,"nodeType":"416","endLine":16,"endColumn":73},{"ruleId":"432","severity":1,"message":"453","line":1,"column":10,"nodeType":"408","messageId":"409","endLine":1,"endColumn":17},{"ruleId":"414","severity":1,"message":"415","line":16,"column":13,"nodeType":"416","endLine":16,"endColumn":65},{"ruleId":"426","severity":1,"message":"427","line":21,"column":17,"nodeType":"416","endLine":21,"endColumn":70},{"ruleId":"402","replacedBy":"454"},{"ruleId":"404","replacedBy":"455"},{"ruleId":"432","severity":1,"message":"456","line":2,"column":10,"nodeType":"408","messageId":"409","endLine":2,"endColumn":26},{"ruleId":"432","severity":1,"message":"457","line":4,"column":10,"nodeType":"408","messageId":"409","endLine":4,"endColumn":29},"no-native-reassign",["458"],"no-negated-in-lhs",["459"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["458"],["459"],"Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","'VideoTemplate' is defined but never used.","'logoutThunk' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'userId' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Friend' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["460"],"@typescript-eslint/no-unused-vars","'ContactsType' is defined but never used.","'SET_PHOTO_SUCCESS' is assigned a value but never used.","'response' is assigned a value but never used.","'act' is defined but never used.","'PhotoTemplate' is defined but never used.","'Main' is defined but never used.","'React' is defined but never used.","'doFollowThunk' is defined but never used.","'setProgress' is defined but never used.","'setButtonDisabled' is defined but never used.","'setFetching' is defined but never used.","'doFollow' is defined but never used.","'doUnFollow' is defined but never used.","'showMore' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'requestFriends'. Either include it or remove the dependency array.",["461"],"'Group' is defined but never used.",["462"],"'addFriendPage' is defined but never used.","'NavLink' is defined but never used.",["458"],["459"],"'maxLengthCreator' is defined but never used.","'requestFriendsThunk' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"463","fix":"467"},"Update the dependencies array to be: [props]",{"range":"468","text":"469"},"Update the dependencies array to be: [requestFriends]",{"range":"470","text":"471"},{"range":"472","text":"469"},[434,436],"[props]",[779,781],"[requestFriends]",[617,619]]