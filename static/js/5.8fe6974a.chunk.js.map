{"version":3,"sources":["HOCS/withCheckAuth.js","Article/Friends/AddFriend/SuggestFriend.tsx","Article/Friends/AddFriend/SearchBar.tsx","Redux/Selectors/userSelector.js","Article/Friends/Friends.tsx","Redux/Selectors/friendSelector.js","Article/Friends/ContainerFriends.tsx"],"names":["WithCheckAuth","Component","connect","state","isAuth","menu","props","to","SuggestFriend","path","id","className","src","photos","small","name","status","followed","onClick","doFollow","disabled","followingInProgress","some","curId","doUnFollow","SearchBar","initialValues","term","validate","values","errors","length","onSubmit","setSubmitting","requestFriends","touched","handleChange","handleSubmit","handleBlur","isSubmitting","type","onChange","value","getUsersData","addFriendPage","Property","Suggested","getCurPage","curPage","getCountPage","countPage","getIsFetching","isFetching","getFollowingInProgress","Friends","useEffect","getFriendsThunk","friendsData","map","u","removeFriendsThunk","doUnFollowThunk","getFriendsSelector","friendsPage","compose"],"mappings":"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","file":"static/js/5.8fe6974a.chunk.js","sourcesContent":["import { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet WithCheckAuth=(Component)=>{\r\n\r\n    let WrapComponent=(props)=>{\r\n        if(!props.isAuth){\r\n            return <Redirect to=\"/Login\" />\r\n        }\r\n        return <Component/>\r\n    }\r\n    let mapStateToProps=(state)=>{\r\n        return{\r\n            isAuth:state.menu.isAuth\r\n        }\r\n    }\r\n    return connect(mapStateToProps,{})(WrapComponent)\r\n}\r\n\r\nexport default WithCheckAuth","import {NavLink} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { addFriendPage } from \"../../../API/API\";\r\nimport React from \"react\";\r\n\r\ntype PropsType={\r\n  id:number\r\n  name:string\r\n  status:string | null\r\n  photos:{\r\n    small:string | null\r\n    large:string | null\r\n    }\r\n  followed:boolean\r\n  doFollow:(curId:number)=>void\r\n  doUnFollow:(curId:number)=>void\r\n  followingInProgress:Array<number>\r\n}\r\n\r\nlet SuggestFriend:React.FC<PropsType>=(props)=>{\r\n    let doFollow=()=>{\r\n        props.doFollow(props.id)\r\n    }\r\n\r\n    let doUnFollow=()=>{\r\n        props.doUnFollow(props.id)\r\n    }\r\n    let path=\"/Main/\"+props.id\r\n    return<div>\r\n        <div className=\"card mt-2\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <NavLink to={path}>\r\n                    <img className=\"img w-100 rounded\" src={\r\n                    props.photos.small!=null ?\r\n                    props.photos.small: \"https://yt3.ggpht.com/a/AATXAJxBIHeWWHukUiEPDTQi7B5rqpa8nZRUYARxyEGH=s900-c-k-c0x00ffffff-no-rj\"}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                    <div className=\"card-body\">\r\n                        <h1 className=\"NavLink\">{props.name}</h1>\r\n                        Status: {props.status}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                {props.followed ?\r\n                <button onClick={doFollow} disabled={props.followingInProgress.some(curId=>props.id==curId)} className=\"btn btn-danger w-100\">\r\n                    UnFollow\r\n                </button>\r\n                :<button onClick={doUnFollow} disabled={props.followingInProgress.some(id=>props.id==id)} className=\"btn btn-success w-100\">\r\n                    Follow\r\n                </button>}\r\n        </div>\r\n    </div>\r\n}\r\nexport default SuggestFriend\r\n","import {Formik} from \"formik\"\r\nimport { maxLengthCreator } from \"../../../Validates/ValidateForText\";\r\nimport React from \"react\";\r\nimport { requestFriendsThunk } from \"../../../Redux/Reducers/reduceAddFriend\";\r\n\r\ntype errorType={\r\n    term:null | string\r\n}\r\ntype initValueType={\r\n    term:string\r\n}\r\ntype PropsType={\r\n  requestFriends:(term:string)=>void\r\n}\r\nconst SearchBar:React.FC<PropsType>=(props)=>{\r\n    return<div>\r\n        <Formik\r\n        initialValues={{term:\"\"} as initValueType}\r\n        validate={values=>{\r\n            const errors:errorType={\r\n                term:null\r\n            }\r\n            if(values.term.length>30){\r\n                errors.term=\"max length is 30\"\r\n                return errors\r\n            }\r\n            return {};\r\n        }}\r\n        onSubmit={(values:initValueType,{ setSubmitting })=>{\r\n            props.requestFriends(values.term)\r\n            setSubmitting(false);\r\n        }}>\r\n            {({\r\n         values,\r\n         errors,\r\n         touched,\r\n         handleChange,\r\n         handleBlur,\r\n         handleSubmit,\r\n         isSubmitting,\r\n         /* and other goodies */\r\n       }) => (\r\n         <form onSubmit={handleSubmit}>\r\n           <div className=\"d-flex\">\r\n           <input\r\n             type=\"search\"\r\n             className=\"form-control\"\r\n             name=\"term\"\r\n             onChange={handleChange}\r\n             value={values.term}\r\n           />\r\n           <button className=\"btn btn-success\" type=\"submit\" disabled={isSubmitting}>\r\n             Submit\r\n           </button>\r\n           </div>\r\n           <span className=\"text-danger\">\r\n             {touched.term && errors.term && errors.term}\r\n           </span>\r\n         </form>\r\n       )}\r\n        </Formik>\r\n    </div>\r\n}\r\n\r\nexport default SearchBar","\r\nexport let getUsersData=(state)=>{\r\n    return state.addFriendPage.Property.Suggested\r\n}\r\n\r\nexport let getCurPage=(state)=>{\r\n    return state.addFriendPage.Property.curPage\r\n}\r\n\r\nexport let getCountPage=(state)=>{\r\n    return state.addFriendPage.Property.countPage\r\n}\r\n\r\nexport let getIsFetching=(state)=>{\r\n    return state.addFriendPage.Property.isFetching\r\n}\r\n\r\nexport let getFollowingInProgress=(state)=>{\r\n    return state.addFriendPage.Property.followingInProgress\r\n}","import Friend from \"./Friend\";\r\nimport {NavLink} from \"react-router-dom\"\r\nimport React,{useEffect} from \"react\";\r\nimport SuggestedFriend from \"./AddFriend/SuggestFriend\"\r\nimport { FriendType } from \"../../Redux/Reducers/reduceFriends\";\r\nimport SearchBar from \"./AddFriend/SearchBar\"\r\n\r\ntype PropsType={\r\n  friendsData:Array<FriendType>//object with jsx\r\n  followingInProgress:Array<number>\r\n  getFriendsThunk:(term?:string)=>void\r\n  removeFriendsThunk:(id:number)=>void\r\n  doUnFollowThunk:(id:number)=>void\r\n}\r\n\r\nlet Friends:React.FC<PropsType>=(props)=>{\r\n    useEffect(()=>{\r\n        props.getFriendsThunk()\r\n    },[])\r\n    let friendsData=props.friendsData.map(u=>{\r\n        return <SuggestedFriend name={u.name} status={u.status}\r\n        followed={u.followed} photos={u.photos} doFollow={props.removeFriendsThunk}\r\n        doUnFollow={props.doUnFollowThunk} id={u.id}\r\n        followingInProgress={props.followingInProgress}  />\r\n        })\r\n    return<div>\r\n        <div className=\"right\">\r\n            <NavLink to=\"/AddFriend\" className=\"Link\">\r\n                Would you like looking for a friend?\r\n                <span className=\"badge\">+</span>\r\n            </NavLink>\r\n        </div>\r\n        <br />\r\n            <span className=\"text-light\">\r\n                Friends\r\n            </span>\r\n        <br />\r\n        <SearchBar requestFriends={props.getFriendsThunk} />\r\n        <div>\r\n            {friendsData}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Friends\r\n","import Friend from \"../../Article/Friends/Friend\";\r\n\r\nexport let getFriendsSelector=(state)=>{\r\n    return state.friendsPage.Property.friendsData\r\n}","import Friends from \"./Friends\";\r\nimport { connect } from \"react-redux\";\r\nimport WithCheckAuth from \"../../HOCS/withCheckAuth\";\r\nimport { compose } from \"redux\";\r\nimport { getFriendsSelector } from \"../../Redux/Selectors/friendSelector\";\r\nimport { AppStateType } from \"../../Redux/Redux\";\r\nimport { FriendType, getFriendsThunk, removeFriendsThunk } from \"../../Redux/Reducers/reduceFriends\";\r\nimport { getFollowingInProgress } from \"../../Redux/Selectors/userSelector\";\r\nimport { doFollowThunk,doUnFollowThunk } from \"../../Redux/Reducers/reduceAddFriend\";\r\n\r\ntype MSTPType={\r\n  friendsData:Array<FriendType> // here Array with jsx\r\n  followingInProgress:Array<number>\r\n}\r\ntype MDTPType={\r\n    getFriendsThunk:(term?:string)=>void\r\n    removeFriendsThunk:(id:number)=>void\r\n    doUnFollowThunk:(id:number)=>void\r\n}\r\ntype OwnPropsType={\r\n\r\n}\r\nlet mapStateToProps=(state:AppStateType):MSTPType=>{\r\n    return{\r\n        friendsData:getFriendsSelector(state),\r\n        followingInProgress:getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    WithCheckAuth,\r\n    connect<MSTPType,MDTPType,OwnPropsType,AppStateType>\r\n    (mapStateToProps,{getFriendsThunk,doUnFollowThunk,removeFriendsThunk})\r\n    )(Friends)\r\n"],"sourceRoot":""}