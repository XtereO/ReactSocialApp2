{"version":3,"sources":["HOCS/withCheckAuth.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Article/Main/Post.js","Bricks/Textarea.js","Article/Main/Main.js","Article/Main/MainHooks.js","Redux/Selectors/mainSelector.js","Article/Main/ContainerMain.js"],"names":["WithCheckAuth","Component","connect","state","isAuth","menu","props","to","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Post","doLike","name","message","like","className","src","img","onClick","deletePost","ableLike","Textarea","input","meta","hasError","touched","error","maxLength30","maxLengthCreator","MainReduxForm","React","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","requiredField","Main","userId","match","params","useEffect","myId","setAccountThunk","getStatusThunk","setAccount","isMyPage","useState","isEditMode","setMode","toOff","setStatusThunk","status","Account","Loader","posts","map","e","fullName","photos","large","autoFocus","onBlur","onChange","changeStatus","target","onDoubleClick","aboutMe","type","active","doPost","text","getAccount","mainPage","Property","getText","getPosts","getStatus","getMyId","data","id","compose","withRouter","changeText","MainHooks"],"mappings":"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","file":"static/js/3.60b2d7bb.chunk.js","sourcesContent":["import { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet WithCheckAuth=(Component)=>{\r\n\r\n    let WrapComponent=(props)=>{\r\n        if(!props.isAuth){\r\n            return <Redirect to=\"/Login\" />\r\n        }\r\n        return <Component/>\r\n    }\r\n    let mapStateToProps=(state)=>{\r\n        return{\r\n            isAuth:state.menu.isAuth\r\n        }\r\n    }\r\n    return connect(mapStateToProps,{})(WrapComponent)\r\n}\r\n\r\nexport default WithCheckAuth","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { NavLink } from \"react-router-dom\";\r\n\r\nlet Post=(props)=>{\r\n    let doLike=()=>{\r\n        return props.doLike(props.doLike(props.name,props.message,props.like))\r\n    }\r\n    let deletePost=()=>{\r\n        return props.deletePost(props.deletePost(props.name,props.message,props.like))\r\n    }\r\n    return<div className=\"mt-2\">\r\n        <div className=\"card\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <img className=\"img w-100 rounded\" src={props.img}/>\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                    \r\n                    <div className=\"right\">\r\n                        <button className=\"btn-close\" onClick={deletePost}>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <h1 className=\"Link\">{props.name}</h1>\r\n                    \r\n                    <div className=\"card-body\">\r\n                        {props.message}\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        {props.ableLike ? <button onClick={doLike} className=\"btn btn-outline-danger\">\r\n                            like \r\n                        </button>\r\n                        :\r\n                        <button onClick={doLike} className=\"btn btn-danger\">\r\n                            like \r\n                        </button>} \r\n                        <span className=\"badge likeBg mx-2\">{props.like}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post","\r\nlet Textarea=({input,meta, ...props})=>{\r\n    let hasError=meta.touched && meta.error\r\n    return<div>\r\n        <textarea className={hasError ? \"form-control  is-invalid\" : \"form-control\"} \r\n        {...input} {...props}  />\r\n        <span className=\"text-danger\">{hasError && meta.error}</span>\r\n    </div>\r\n}\r\n\r\nexport default Textarea","import Post from \"./Post\";\r\nimport Loader from \"../../Loader\";\r\nimport React from \"react\";\r\nimport {Field,reduxForm} from \"redux-form\"\r\nimport Textarea from \"../../Bricks/Textarea\";\r\nimport { requiredField,maxLengthCreator } from \"../../Validates/ValidateForText\";\r\n\r\nlet maxLength30=maxLengthCreator(30)\r\n\r\nclass Main extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.userId=this.props.match.params.userId\r\n    }\r\n    componentDidMount=()=>{\r\n        if(!this.userId){\r\n            this.userId=this.props.myId\r\n        }\r\n        this.props.setAccountThunk(this.userId)\r\n        this.props.getStatusThunk(this.userId)\r\n    }\r\n    componentWillUnmount=()=>{\r\n        this.props.setAccount(null)\r\n    }\r\n\r\n    state={\r\n        editMode:false,\r\n    }\r\n    toActive(){\r\n        this.setState({\r\n            editMode:true\r\n        })\r\n    }\r\n    toOff(){\r\n        this.setState({\r\n            editMode:false\r\n        })\r\n        this.props.setStatusThunk(this.props.status)\r\n    }\r\n    \r\n    render(){  \r\n    \r\n    let userId=this.props.match.params.userId \r\n    let isMyPage=(!userId)  \r\n    \r\n    if(!this.props.Account){\r\n        return <Loader />\r\n    }\r\n\r\n    let posts=this.props.posts\r\n    if(posts.length!=0){\r\n        posts =posts.map(e=>{\r\n            return <Post message={e.message} img={e.img} \r\n                name={e.name} doLike={this.props.doLike}\r\n                like={e.like} ableLike={e.ableLike} deletePost={this.props.deletePost}/>\r\n        })\r\n    }\r\n\r\n    let changeStatus=(e)=>{\r\n        this.props.changeStatus(e.target.value)\r\n    }\r\n\r\n    let name=this.props.Account.fullName;\r\n    let img=this.props.Account.photos.large;\r\n    if (!img){\r\n        img=\"https://aachibilyaev.com/upload/iblock/c97/c970fbccb33a1923f4af631366566199.png\"\r\n    } \r\n\r\n    let doPost=(value)=>{\r\n        this.props.doPost(value.text)\r\n    }\r\n\r\n    return<div>\r\n        <div className=\"card\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <img className=\"img img-fluid rounded\" src={img} />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                <div className=\"card-body\">\r\n                <h1 className=\"Link my-2\">{name}</h1>\r\n                    <div className=\"d-flex my-2\">\r\n                        Status:\r\n                        {isMyPage ? \r\n                            this.state.editMode ?\r\n                            <div className=\"d-flex\">\r\n                                <input autoFocus={true}  onBlur={this.toOff.bind(this)} onChange={changeStatus} \r\n                                className=\"form-control\" value={this.props.status}/>\r\n                                <button onClick={this.toOff.bind(this)} className=\"btn btn-success right\">\r\n                                    \\/\r\n                                </button>\r\n                            </div>\r\n                            :\r\n                            <span onDoubleClick={this.toActive.bind(this)}>\r\n                                {!this.props.status?\r\n                                \"click to change status\"\r\n                                :\r\n                                this.props.status\r\n                                }\r\n                            </span>\r\n                        :\r\n                            this.props.Account.aboutMe\r\n                        }\r\n                    </div>\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item d-flex\">\r\n                            DateBirth <input className=\"form-control\" type=\"date\" />\r\n                        </li>\r\n                        <li className=\"list-group-item d-flex\">\r\n                            City  \r\n                            <select className=\"form-control\">\r\n                                <option active=\"active\">\r\n                                    Moscow\r\n                                </option>\r\n                                <option>\r\n                                    SPb\r\n                                </option>\r\n                                <option>\r\n                                    Other City\r\n                                </option>\r\n                            </select>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"card mt-2 mb-2\">\r\n            <MainReduxForm onSubmit={doPost}/>\r\n        </div>\r\n        <div>\r\n          {posts}\r\n        </div>\r\n    </div>\r\n    } \r\n}\r\n\r\nlet MainForm=(props)=>{\r\n    return<form onSubmit={props.handleSubmit}>\r\n        <div className=\"card-body\">\r\n            What new?<button className=\"btn btn-success right\">Post</button>\r\n            <Field name={\"text\"} component={Textarea} \r\n             placeholder=\"...\"\r\n            validate={[requiredField,maxLength30]}/>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nlet MainReduxForm=reduxForm({form:\"forPost\"})(MainForm)\r\n\r\nexport default Main","import Post from \"./Post\";\r\nimport Loader from \"../../Loader\";\r\nimport React,{useState,useEffect} from \"react\";\r\nimport {Field,reduxForm} from \"redux-form\"\r\nimport Textarea from \"../../Bricks/Textarea\";\r\nimport { requiredField,maxLengthCreator } from \"../../Validates/ValidateForText\";\r\n\r\n\r\nlet maxLength30=maxLengthCreator(30)\r\n\r\nlet Main=(props)=>{\r\n\r\n    let userId=props.match.params.userId\r\n    \r\n    useEffect(()=>{\r\n        if(!userId){\r\n            userId=props.myId\r\n        }\r\n        props.setAccountThunk(userId)\r\n        props.getStatusThunk(userId)\r\n        return()=>{\r\n            props.setAccount(null)\r\n        }\r\n    },[])\r\n\r\n    let isMyPage=(!userId)  \r\n\r\n    let [isEditMode,setMode] = useState(false)\r\n\r\n    let toActive=()=>{\r\n        setMode(true)\r\n    }\r\n    let toOff=()=>{\r\n        setMode(false)\r\n        props.setStatusThunk(props.status)\r\n    }\r\n          \r\n    if(!props.Account){\r\n        return <Loader />\r\n    }\r\n\r\n    let posts=props.posts\r\n    if(posts.length!=0){\r\n        posts =posts.map(e=>{\r\n            return <Post message={e.message} img={e.img} \r\n                name={e.name} doLike={props.doLike}\r\n                like={e.like} ableLike={e.ableLike}\r\n                deletePost={props.deletePost}/>\r\n        })\r\n    }\r\n\r\n    let changeStatus=(e)=>{\r\n        props.changeStatus(e.target.value)\r\n    }\r\n\r\n    let name=props.Account.fullName;\r\n    let img=props.Account.photos.large;\r\n    if (!img){\r\n        img=\"https://aachibilyaev.com/upload/iblock/c97/c970fbccb33a1923f4af631366566199.png\"\r\n    } \r\n\r\n    let doPost=(value)=>{\r\n        props.doPost(value.text)\r\n    }\r\n\r\n    return<div>\r\n        <div className=\"card\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <img className=\"img img-fluid rounded\" src={img} />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                <div className=\"card-body\">\r\n                <h1 className=\"Link my-2\">{name}</h1>\r\n                    <div className=\"d-flex my-2\">\r\n                        Status:\r\n                        {isMyPage ? \r\n                            isEditMode ?\r\n                            <div className=\"d-flex\">\r\n                                <input autoFocus={true}  onBlur={toOff} onChange={changeStatus} \r\n                                className=\"form-control\" value={props.status}/>\r\n                                <button onClick={toOff} className=\"btn btn-success right\">\r\n                                    \\/\r\n                                </button>\r\n                            </div>\r\n                            :\r\n                            <span onDoubleClick={toActive}>\r\n                                {!props.status?\r\n                                \"click to change status\"\r\n                                :\r\n                                props.status\r\n                                }\r\n                            </span>\r\n                        :\r\n                            props.Account.aboutMe\r\n                        }\r\n                    </div>\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item d-flex\">\r\n                            DateBirth <input className=\"form-control\" type=\"date\" />\r\n                        </li>\r\n                        <li className=\"list-group-item d-flex\">\r\n                            City  \r\n                            <select className=\"form-control\">\r\n                                <option active=\"active\">\r\n                                    Moscow\r\n                                </option>\r\n                                <option>\r\n                                    SPb\r\n                                </option>\r\n                                <option>\r\n                                    Other City\r\n                                </option>\r\n                            </select>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"card mt-2 mb-2\">\r\n            <MainReduxForm onSubmit={doPost}/>\r\n        </div>\r\n        <div>\r\n          {posts}\r\n        </div>\r\n    </div>\r\n    \r\n}\r\n\r\nlet MainForm=(props)=>{\r\n    return<form onSubmit={props.handleSubmit}>\r\n        <div className=\"card-body\">\r\n            What new?<button className=\"btn btn-success right\">Post</button>\r\n            <Field name={\"text\"} component={Textarea} \r\n             placeholder=\"...\"\r\n            validate={[requiredField,maxLength30]}/>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nlet MainReduxForm=reduxForm({form:\"forPost\"})(MainForm)\r\n\r\nexport default Main","\r\nexport let getAccount=(state)=>{\r\n    return state.mainPage.Property.Account\r\n}\r\n\r\nexport let getText=(state)=>{\r\n    return state.mainPage.Property.text\r\n}\r\n\r\nexport let getPosts=(state)=>{\r\n    return state.mainPage.Property.posts\r\n}\r\n\r\nexport let getStatus=(state)=>{\r\n    return state.mainPage.Property.status\r\n}\r\n\r\nexport let getMyId=(state)=>{\r\n    return state.menu.data.id\r\n}","import { connect } from \"react-redux\";\r\nimport {setStatusThunk,deletePost,getStatusThunk,setAccountThunk,changeStatus,changeText,doPost, doLike, setAccount} from \"../../Redux/Reducers/reduceMain\"\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Main from \"./Main\"\r\nimport MainHooks from \"./MainHooks\";\r\nimport WithCheckAuth from \"../../HOCS/withCheckAuth\";\r\nimport { compose } from \"redux\";\r\nimport { getAccount, getMyId, getPosts, getStatus, getText } from \"../../Redux/Selectors/mainSelector\";\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n    Account:getAccount(state),\r\n    text:getText(state),\r\n    posts:getPosts(state),\r\n    status:getStatus(state),\r\n    myId:getMyId(state)\r\n    }\r\n}\r\nexport default compose(\r\n    WithCheckAuth,\r\n    withRouter,\r\n    connect(mapStateToProps,{\r\n        changeStatus,changeText,getStatusThunk,\r\n        doPost,doLike,setAccount,setAccountThunk,\r\n        setStatusThunk,deletePost\r\n    })\r\n)(MainHooks)"],"sourceRoot":""}