{"version":3,"sources":["API/API.ts","Redux/Reducers/reduceMain.ts","Redux/Reducers/reduceMessage.ts","Redux/Reducers/reduceAddFriend.ts","Redux/Reducers/reduceEdit.ts","logo.svg","HOCS/withSuspense.js","Header/Header.tsx","Redux/Reducers/reduceMenu.ts","Header/ContainerHeader.tsx","Aside/Aside.tsx","Footer/Footer.js","Login/Login.js","Login/ContainerLogin.js","Redux/Reducers/reduceApp.ts","App.js","reportWebVitals.js","Redux/Reducers/reduceFriends.ts","Redux/Reducers/reduceGroups.ts","Redux/Redux.ts","index.js","Validates/ValidateForText.js","Bricks/LoginInput.js","Loader.js","Redux/Reducers/reduceAudio.ts","Redux/Reducers/reduceVideo.ts","Redux/Reducers/reducePhoto.ts"],"names":["ResultCode","ResultCodeWithCapthca","instance","axios","create","withCredentials","headers","baseURL","addFriendPage","doFollow","id","delete","doUnFollow","post","requestFriends","page","get","mainPage","getProfile","getMyProfile","getStatus","setStatus","status","put","setPhoto","photos","formData","FormData","append","setEditAccount","value","loginPage","logIn","email","password","rememberMe","captcha","logOut","security","getCaptcha","change_Status","change_Text","do_Post","do_Like","set_Account","set_Status","delete_Post","initialState","Property","Account","userId","large","litle","lookingForAJob","lookingForAJobDescription","fullName","contacts","text","posts","changeStatus","t","type","curText","changeText","doPost","doLike","n","m","l","name","message","like","setAccount","data","deletePost","setAccountThunk","dispatch","a","responce","getStatusThunk","response","setStatusThunk","reduceMain","state","action","curState","push","img","ableLike","key","newPosts","filter","p","do_Message","change_Dialog","peopleData","messageData","curDialog","doMessage","changeDialog","reduceMessage","show_More","do_Follow","do_UnFollow","change_Page","set_Count_Page","set_Fetching","set_Button_Disabled","set_Progress","Suggested","curPage","_totalCount","_countAcOnPage","countPage","isFetching","followingInProgress","isProgress","curId","changePage","setCountPage","count","setFetching","isLoad","setProgress","progress","setButtonDisabled","doFollowDRY","request","resultCode","doFollowThunk","doUnFollowThunk","requestFriendsThunk","totalCount","users","items","reduceAddFriend","map","u","followed","Math","ceil","e","SET_PHOTO_SUCCESS","github","vk","facebook","instagram","twitter","website","youtube","mainLink","successMessagePhoto","setPhotoSuccess","setEditAccountThunk","values","setSave","Success","stopSubmit","_error","messages","reduceEdit","withSuspense","Component","src","fallback","className","Header","props","show","onClick","toOff","toActive","isAuth","to","logoutThunk","set_Auth","set_Captcha_Success","login","captchaUrl","setCaptchaSuccess","url","setAuth","log","setAuthThunk","reduceAside","ContainerHeader","this","React","connect","menu","aside","activeClassName","Footer","memo","maxLength100","maxLengthCreator","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","align","color","Field","component","LoginInput","placeholder","validate","requiredField","error","Login","loginThunk","Captha","length","set_Init","init","reduceApp","ContainerMain","lazy","ContainerMessage","ContainerFriends","ContainerGroups","ContainerAudio","ContainerVideo","ContainerPhoto","ContainerAddFriend","ContainerEdit","App","setState","setInitThunk","window","addEventListener","catchError","promiseRejectionEvent","alert","isInit","Aside","path","render","ContainerLogin","Loader","app","then","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","friendsData","discription","reduceFriends","groupsData","followers","way","reduceGroups","rootReducer","combineReducers","messagePage","friendsPage","groupsPage","audioPage","reduceAudio","videoPage","reduceVideo","photoPage","reducePhoto","reduceMenu","formReducer","editPage","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","maxLengtn","input","meta","hasError","touched","ADD_AUDIO","DELETE_AUDIO","audioData","compositor","asrc","lastId","addAudio","deleteAudio","newState","ADD_VIDEO","REMOVE_VIDEO","videoData","vsrc","AddVideo","RemoveVideo","ADD_PHOTO","REMOVE_PHOTO","photoData","AddPhoto","RemovePhoto"],"mappings":"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","file":"static/js/main.8dcd688c.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { AccountType } from \"../Types/types\";\r\n\r\nlet instance=axios.create({\r\n    withCredentials:true, \r\n    headers:{\r\n        \"API-Key\":\"535f3cfb-edbb-4698-99c5-57db5276ea88\"\r\n    },\r\n    baseURL:\"https://social-network.samuraijs.com/api/1.0/\"\r\n})\r\n\r\nexport enum ResultCode {\r\n    Success=0,\r\n    Error=1\r\n}\r\nexport enum ResultCodeWithCapthca {\r\n    Captha=10\r\n}\r\n\r\ntype DoFollowType={\r\n    resultCode:ResultCode\r\n    messages:Array<string>\r\n    data:any\r\n}\r\ntype DoUnFollowType={\r\n    resultCode: ResultCode\r\n    messages:Array<string>\r\n    data: any\r\n}\r\ntype ItemType={\r\n    name:number,\r\n    id: number\r\n    photos: {\r\n        small: null | string,\r\n        large: null | string\r\n    },\r\n    status: string | null\r\n    followed: boolean\r\n}\r\ntype RequestFriendsType={\r\n    id:number\r\n    name:string\r\n    status:string\r\n    photos:{\r\n        small:string\r\n        large:string\r\n    }\r\n    followed:boolean\r\n    totalCount:number\r\n    items:Array<ItemType>\r\n}\r\nexport let addFriendPage={\r\n    doFollow(id:number){\r\n        return instance.delete<DoFollowType>(\"follow/\"+id)\r\n    },\r\n    doUnFollow(id:number){\r\n        return instance.post<DoUnFollowType>(\"follow/\"+id)\r\n    },\r\n    requestFriends(page:number){\r\n        return instance.get<RequestFriendsType>(`users?page=${page}`) \r\n    }\r\n}\r\n\r\ntype GetProfileType=AccountType\r\ntype GetMyProfileType={\r\n    data: {id: number,email:string,login:string}\r\n    resultCode:ResultCode\r\n    messages:Array<string>\r\n}\r\ntype SetStatusType={\r\n    resultCode: ResultCode\r\n    messages: Array<string>,\r\n    data:any\r\n}\r\ntype SetPhotoType={\r\n    resultCode:ResultCode\r\n    messages:Array<string>\r\n    data:{\r\n        photos:{\r\n            small:string,\r\n            large:string\r\n        }\r\n    } | any\r\n}\r\ntype SetEditAccountType={\r\n    resultCode:ResultCode\r\n    messages:Array<string>,\r\n    data:any\r\n}\r\nexport let mainPage={\r\n    getProfile(id:number){\r\n        return instance.get<GetProfileType>(\"profile/\"+id)\r\n    },\r\n    getMyProfile(){\r\n        return instance.get<GetMyProfileType>(\"auth/me\")\r\n    },\r\n    getStatus(id:number){\r\n        return instance.get(\"profile/status/\"+id) //Here successfull-always\r\n    },\r\n    setStatus(status:string){\r\n        return instance.put<SetStatusType>(\"profile/status\",{status:status})\r\n    },\r\n    setPhoto(photos:any){\r\n        let formData=new FormData();\r\n        formData.append(\"image\",photos)\r\n\r\n        return instance.put<SetPhotoType>(\"profile/photo\",formData,{\r\n            headers:{\r\n                \"Content-Type\":\"multipart/form-data\"\r\n            }\r\n        })\r\n    },\r\n    setEditAccount(value:AccountType){\r\n        return instance.put<SetEditAccountType>(\"profile\",value)\r\n    }\r\n}\r\n\r\ntype logInType={\r\n    resultCode:ResultCode | ResultCodeWithCapthca\r\n    messages:Array<string>\r\n    data:any\r\n}\r\ntype logOutType={\r\n    resultCode:ResultCode\r\n    messages:Array<string>\r\n    data:any\r\n}\r\nexport let loginPage={\r\n    logIn(email:string,password:string,rememberMe=false,captcha:null | string){\r\n        return instance.post<logInType>(\"auth/login\",{email,password,rememberMe,captcha})\r\n    },\r\n    logOut(){\r\n        return instance.delete<logOutType>(\"auth/login\")\r\n    }\r\n}\r\n\r\ntype GetCaptchaType={url:string}\r\nexport let security={\r\n    getCaptcha(){\r\n        return instance.get<GetCaptchaType>(\"security/get-captcha-url\")\r\n    }\r\n}","import {mainPage} from \"../../API/API\"\r\nimport type {AccountType,ContactsType,PhotosType} from \"../../Types/types\"\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStateType } from \"../Redux\";\r\n\r\nlet change_Status:\"Main/ChangeStatus\"=\"Main/ChangeStatus\";\r\nlet change_Text:\"Main/ChangeText\"=\"Main/ChangeText\";\r\nlet do_Post:\"Main/DoPost\"=\"Main/DoPost\";\r\nlet do_Like:\"Main/DoLike\"=\"Main/DoLike\";\r\nlet set_Account:\"Main/setAccount\"=\"Main/setAccount\";\r\nlet set_Status:\"Main/setStatus\"=\"Main/setStatus\";\r\nlet delete_Post:\"Main/deletePost\"=\"Main/deletePost\";\r\nlet SET_PHOTO_SUCCESS:\"Main/setPhotoSuccess\"=\"Main/setPhotoSuccess\"\r\n\r\ntype ThunkType= ThunkAction<Promise<void>, AppStateType, unknown, ActionType>\r\n\r\nexport type PostType={\r\n  name:string | null,\r\n  message:string | null,\r\n  img:null | string,\r\n  like:number,\r\n  ableLike:boolean\r\n}\r\nlet initialState={\r\n    Property:{\r\n        Account:{\r\n          userId:null,\r\n          photos:{\r\n            large:null,\r\n            litle:null\r\n          } as PhotosType,\r\n          lookingForAJob:null,\r\n          lookingForAJobDescription:null,\r\n          fullName:null,\r\n          contacts:null\r\n        } as AccountType,\r\n        text:\"...I\" as string | null,\r\n        posts:[] as Array<PostType>,\r\n        status:\"...\" as string\r\n    }\r\n}\r\n\r\ntype InitialStateType=typeof initialState\r\ntype ActionType=ChangeTextType | DoPostType | DoLikeType | SetAccountType\r\n  | DeletePostType | SetStatusType | ChangeStatusType\r\n\r\nlet reduceMain=(state=initialState,action:ActionType):InitialStateType=>{\r\n    let curState={...state};\r\n    curState.Property={...state.Property};\r\n    if(action.type===set_Status){\r\n        curState.Property.status=action.status\r\n        return curState\r\n    }\r\n    if(action.type==change_Status){\r\n        curState.Property.status=state.Property.status;\r\n        curState.Property.status=action.curText;\r\n        return curState;\r\n    }\r\n    if(action.type==change_Text){\r\n        curState.Property.text=state.Property.text;\r\n        curState.Property.text=action.curText;\r\n        return curState\r\n    }\r\n    if(action.type==do_Post){\r\n        curState.Property.posts=[...state.Property.posts]\r\n        curState.Property.posts.push(\r\n            {name:curState.Property.Account.fullName,\r\n            message:action.text,\r\n            img:curState.Property.Account.photos.large,\r\n            like:0,ableLike:true}\r\n        )\r\n        curState.Property.text=\" \";\r\n        return curState;\r\n    }\r\n    if(action.type==do_Like){\r\n        curState.Property.posts=[...state.Property.posts]\r\n        let posts=[...state.Property.posts]\r\n        for(let key in posts){\r\n            if ((posts[key].like===action.like)&&(posts[key].message===action.message)&&(posts[key].name===action.name)){\r\n                if(posts[key].ableLike==true){\r\n                    curState.Property.posts[key].like++;\r\n                    curState.Property.posts[key].ableLike=false\r\n                }\r\n                else{\r\n                    curState.Property.posts[key].like--;\r\n                    curState.Property.posts[key].ableLike=true\r\n                }\r\n            }\r\n        }\r\n        return curState\r\n    }\r\n    if(action.type==set_Account){\r\n        curState.Property.Account={...state.Property.Account}\r\n        curState.Property.Account=action.data\r\n        return curState\r\n    }\r\n    if(action.type==delete_Post){\r\n        curState.Property.posts=[...state.Property.posts]\r\n        let newPosts=curState.Property.posts.filter(p=>((action.like!=p.like) || (action.message!=p.message) || (action.name!=p.name) ))\r\n        curState.Property.posts=newPosts\r\n        return curState;\r\n    }\r\n    return state\r\n}\r\n\r\nexport type ChangeStatusType={\r\n  type:typeof change_Status,\r\n  curText:string\r\n}\r\nexport let changeStatus=(t:string):ChangeStatusType=>{\r\n    return {\r\n        type:change_Status,\r\n        curText:t\r\n    }\r\n}\r\n\r\nexport type ChangeTextType={\r\n  type:typeof change_Text,\r\n  curText:string | null\r\n}\r\nexport let changeText=(t:string | null):ChangeTextType=>{\r\n    return{\r\n        type:change_Text,\r\n        curText:t\r\n    }\r\n}\r\n\r\nexport type DoPostType={\r\n  type:typeof do_Post,\r\n  text:string | null\r\n}\r\nexport let doPost=(text:string | null):DoPostType=>{\r\n    return{\r\n        type:do_Post,\r\n        text\r\n    }\r\n}\r\n\r\nexport type DoLikeType={\r\n  type:typeof do_Like,\r\n  name:string | null,\r\n  message:string | null,\r\n  like:number\r\n}\r\nexport let doLike=(n:string | null,m:string | null,l:number):DoLikeType=>{\r\n    return {\r\n        type:do_Like,\r\n        name:n,\r\n        message:m,\r\n        like:l\r\n    }\r\n}\r\n\r\nexport type SetAccountType={\r\n  type:typeof set_Account,\r\n  data:AccountType\r\n}\r\nexport let setAccount=(data:AccountType):SetAccountType=>{\r\n    return{\r\n    type:set_Account,\r\n    data\r\n    }\r\n}\r\n\r\nexport type DeletePostType={\r\n  type:typeof delete_Post,\r\n  name:string | null,\r\n  message:string | null,\r\n  like:number\r\n}\r\nexport let deletePost=(name:string | null,message:string | null,like:number):DeletePostType=>{\r\n    return{\r\n        type:delete_Post,\r\n        name,\r\n        message,like\r\n    }\r\n}\r\n\r\nexport type SetStatusType={\r\n  type:typeof set_Status,\r\n  status:string\r\n}\r\nlet setStatus=(status:string):SetStatusType=>{\r\n    return{\r\n        type:set_Status,\r\n        status\r\n    }\r\n}\r\n\r\nexport let setAccountThunk=(userId:number):ThunkType=> async (dispatch:any)=>{\r\n    let responce= await mainPage.getProfile(userId)\r\n    dispatch(setAccount(responce.data))\r\n}\r\nexport let getStatusThunk=(id:number):ThunkType=> async (dispatch:any)=>{\r\n    let response=await mainPage.getStatus(id)\r\n    dispatch(setStatus(response.data))\r\n}\r\nexport let setStatusThunk=(status:string):ThunkType=> async (dispatch:any)=>{\r\n    let response= await mainPage.setStatus(status)\r\n    dispatch(setStatus(status))\r\n}\r\n\r\n\r\nexport default reduceMain\r\n","\r\nlet do_Message:\"message/doMessage\"=\"message/doMessage\";\r\nlet change_Dialog:\"message/changeDialog\"=\"message/changeDialog\";\r\n\r\nexport type MessageType ={\r\n  name:string,\r\n  message:string,\r\n  id:string\r\n}\r\nexport type PeopleType={\r\n  name:string,\r\n  id:string\r\n}\r\nlet initialState={\r\n    Property:{\r\n        text:\"...\" as string,\r\n        peopleData:[\r\n        {name:\"Alex\",id:\"1\"},\r\n        {name:\"Ivan\",id:\"2\"},\r\n        {name:\"Max\",id:\"3\"}],\r\n        messageData:[\r\n            {name:\"Alex\",message:\"Hi, how are you?\",id:\"1\",img:\"\"},\r\n            {name:\"Hola\",message:\"Hello, Im okay and you?\",id:\"1\"},\r\n            {name:\"Alex\",message:\"Im fine, are you free this saturday?\",id:\"1\"},\r\n            {name:\"Hola\",message:\"Hello,whats up?\",id:\"2\"},\r\n            {name:\"Ivan\",message:\"Hi,Im okay and you?\",id:\"2\"},\r\n            {name:\"Max\",message:\"hello\",id:\"3\"}] as Array<MessageType>,\r\n        curDialog:1 as number\r\n    }\r\n}\r\ntype InitialStateType=typeof initialState\r\ntype ActionType=DoMessageType | ChangeDialogType\r\n\r\nlet reduceMessage=(state=initialState,action:ActionType):InitialStateType=>{\r\n    let curState={...state}\r\n    curState.Property={...state.Property}\r\n\r\n    if(action.type===do_Message){\r\n        curState.Property.messageData=[...state.Property.messageData]\r\n        curState.Property.messageData.push({\r\n            name:\"Hola\",\r\n            message:action.text,\r\n            id:action.p\r\n        });\r\n        curState.Property.text=\" \";\r\n        return curState;\r\n    }\r\n    if(action.type===change_Dialog){\r\n        curState.Property.curDialog=state.Property.curDialog\r\n        curState.Property.curDialog=action.curDialog\r\n        return curState\r\n    }\r\n    return state;\r\n}\r\n\r\nexport type DoMessageType={\r\n  type:typeof do_Message,\r\n  p:string,\r\n  text:string\r\n}\r\nexport let doMessage=(p:string,text:string):DoMessageType=>{\r\n    return{\r\n        type:do_Message,p,\r\n        text\r\n    }\r\n}\r\n\r\nexport type ChangeDialogType={\r\n  type:typeof change_Dialog,\r\n  curDialog:number\r\n}\r\nexport let changeDialog=(curDialog:number):ChangeDialogType=>({\r\n    type:change_Dialog,\r\n    curDialog\r\n})\r\n\r\nexport default reduceMessage\r\n","import {addFriendPage} from \"./../../API/API\"\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStateType } from \"../Redux\";\r\n\r\nlet show_More:\"addFriend/showMore\"=\"addFriend/showMore\"\r\nlet do_Follow:\"addFriend/doFollow\"=\"addFriend/doFollow\"\r\nlet do_UnFollow:\"addFriend/doUnFollow\"=\"addFriend/doUnFollow\"\r\nlet change_Page:\"addFriend/changePage\"=\"addFriend/changePage\"\r\nlet set_Count_Page:\"addFriend/setCountPageAC\"=\"addFriend/setCountPageAC\"\r\nlet set_Fetching:\"addFriend/setFetching\"=\"addFriend/setFetching\"\r\nlet set_Button_Disabled:\"addFriend/buttonDisabled\"=\"addFriend/buttonDisabled\"\r\nlet set_Progress:\"addFriend/isProgress\"=\"addFriend/isProgress\"\r\n\r\ntype ThunkType=ThunkAction<Promise<void>, AppStateType, unknown, ActionType>\r\n\r\nlet initialState={\r\n    Property:{\r\n        Suggested:[\r\n        ]as any, //Users which show on the page\r\n        curPage:1 as number,\r\n        _totalCount:0 as number,\r\n        _countAcOnPage:1000 as number,  //Count Account on Page\r\n        countPage:0 as number,\r\n        isFetching:false as boolean,\r\n        followingInProgress:[] as Array<number>,\r\n        isProgress:false as boolean\r\n    }\r\n}\r\n\r\ntype InititalStateType=typeof initialState\r\ntype ActionType=ShowMoreType | DoFollowType | DoUnFollowType | ChangePageType | SetCountPageType |\r\nSetFetchingType | SetProgressType | SetButtonDisabledType\r\n\r\nlet reduceAddFriend=(state=initialState,action:ActionType):InititalStateType=>{\r\n    let curState={...state,Property:{...state.Property}};\r\n    switch (action.type){\r\n        case show_More:\r\n            curState.Property={...state.Property,\r\n                Suggested:[...state.Property.Suggested,...action.users]}\r\n            return curState\r\n        case do_UnFollow:\r\n            curState.Property.Suggested=state.Property.Suggested.map((u:any)=>{\r\n                if(action.curId===u.id){\r\n                    return {...u,followed:true}\r\n                }\r\n                return u\r\n            })\r\n            return curState\r\n        case do_Follow:\r\n            curState.Property.Suggested=state.Property.Suggested.map((u:any)=>{\r\n                if(action.curId===u.id){\r\n                    return {...u,followed:false}\r\n                }\r\n                return u\r\n            })\r\n            return curState\r\n        case change_Page:\r\n            curState.Property.Suggested=[...state.Property.Suggested]\r\n            curState.Property.Suggested=[]\r\n            curState.Property.curPage=action.curPage\r\n            return curState\r\n        case set_Count_Page:\r\n            curState.Property.countPage=state.Property.countPage\r\n            curState.Property._totalCount=state.Property._totalCount\r\n            curState.Property._totalCount=action.count\r\n            curState.Property.countPage=Math.ceil(action.count/state.Property._countAcOnPage)\r\n            return curState\r\n        case set_Fetching:\r\n            curState.Property.isFetching=state.Property.isFetching\r\n            curState.Property.isFetching=action.isLoad\r\n            return curState\r\n        case set_Progress:\r\n            curState.Property.isProgress=state.Property.isProgress\r\n            curState.Property.isProgress=action.progress\r\n            return curState\r\n        case set_Button_Disabled:\r\n            curState.Property.followingInProgress=[...state.Property.followingInProgress]\r\n            if(state.Property.isProgress){\r\n                curState.Property.followingInProgress.push(action.id)\r\n            }else{\r\n                curState.Property.followingInProgress=curState.Property.followingInProgress.filter(e=>e!=action.id)\r\n            }\r\n            return curState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ShowMoreType={\r\n  type:typeof show_More,\r\n  users:any\r\n}\r\nexport let showMore=(users:any):ShowMoreType=>{\r\n    return {\r\n        type:show_More,\r\n        users\r\n    }\r\n}\r\n\r\nexport type DoFollowType={\r\n  type:typeof do_Follow,\r\n  curId:number\r\n}\r\nexport let doFollow=(curId:number)=>{\r\n    return {\r\n        curId,\r\n        type:do_Follow\r\n    }\r\n}\r\n\r\nexport type DoUnFollowType={\r\n  type:typeof do_UnFollow,\r\n  curId:number\r\n}\r\nexport let doUnFollow=(curId:number):DoUnFollowType=>{\r\n    return{\r\n        type:do_UnFollow,\r\n        curId\r\n    }\r\n}\r\n\r\nexport type ChangePageType={\r\n  curPage:number,\r\n  type:typeof change_Page\r\n}\r\nexport let changePage=(curPage:number):ChangePageType=>{\r\n    return{\r\n        curPage,\r\n        type:change_Page\r\n    }\r\n}\r\n\r\nexport type SetCountPageType={\r\n  type:typeof set_Count_Page,\r\n  count:number\r\n}\r\nexport let setCountPage=(count:number):SetCountPageType=>{\r\n    return {\r\n        type:set_Count_Page,\r\n        count\r\n    }\r\n}\r\n\r\nexport type SetFetchingType={\r\n  type:typeof set_Fetching,\r\n  isLoad:boolean\r\n}\r\nexport let setFetching=(isLoad:boolean):SetFetchingType=>{\r\n    return{\r\n        type:set_Fetching,\r\n        isLoad\r\n    }\r\n}\r\n\r\nexport type SetProgressType={\r\n  type:typeof set_Progress,\r\n  progress:boolean\r\n}\r\nexport let setProgress=(progress:boolean):SetProgressType=>{\r\n    return {\r\n        type:set_Progress,\r\n        progress\r\n    }\r\n}\r\n\r\nexport type SetButtonDisabledType={\r\n  type:typeof set_Button_Disabled,\r\n  id:number\r\n}\r\nexport let setButtonDisabled=(id:number):SetButtonDisabledType=>{\r\n    return{\r\n        type:set_Button_Disabled,\r\n        id\r\n    }\r\n}\r\nlet doFollowDRY= async (dispatch:any,request:any,action:any,id:number)=>{\r\n    dispatch(setProgress(true))\r\n    dispatch(setButtonDisabled(id))\r\n    let response = await request(id)\r\n\r\n    dispatch(setProgress(false))\r\n    dispatch(setButtonDisabled(id))\r\n    if(response.data.resultCode==0){\r\n        dispatch(action(id))\r\n    }\r\n}\r\nexport let doFollowThunk=(id:number):ThunkType=> async (dispatch:any)=>{\r\n    doFollowDRY(dispatch,addFriendPage.doFollow,doFollow,id)\r\n}\r\nexport let doUnFollowThunk=(id:number):ThunkType=> async (dispatch:any)=>{\r\n    doFollowDRY(dispatch,addFriendPage.doUnFollow,doUnFollow,id)\r\n}\r\nexport let requestFriendsThunk=(page:number):ThunkType=> async (dispatch:any)=>{\r\n        dispatch(setFetching(true))\r\n        let response=await addFriendPage.requestFriends(page)\r\n\r\n        dispatch(setCountPage(response.data.totalCount))\r\n        dispatch(showMore(response.data.items))\r\n        dispatch(setFetching(false))\r\n}\r\n\r\nexport default reduceAddFriend\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { mainPage } from \"../../API/API\";\r\nimport type {AccountType,ContactsType,PhotosType} from \"../../Types/types\"\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStateType } from \"../Redux\";\r\nimport { ResultCode } from \"../../API/API\";\r\n\r\nlet SET_PHOTO_SUCCESS:\"edit/setPhotoSuccess\" = \"edit/setPhotoSuccess\";\r\nlet set_Account:\"edit/setAccount\"=\"edit/setAccount\"\r\n\r\ntype ThunkType=ThunkAction<Promise<void>,AppStateType,unknown,ActionType>\r\n\r\nlet initialState = {\r\n    Property: {\r\n        Account:{\r\n          photos:{\r\n            large:null,\r\n            litle:null\r\n          },\r\n          lookingForAJob:null,\r\n          lookingForAJobDescription:null,\r\n          fullName:null,\r\n          contacts:{\r\n            github:null,\r\n            vk:null,\r\n            facebook:null,\r\n            instagram:null,\r\n            twitter:null,\r\n            website:null,\r\n            youtube:null,\r\n            mainLink:null,\r\n          } as ContactsType | null\r\n        } as AccountType,\r\n        successMessagePhoto:\"\" as string\r\n    }\r\n}\r\n\r\ntype InitialStateType=typeof initialState\r\ntype ActionType=SetAccountType | SetPhotoSuccessType\r\n\r\nlet reduceEdit = (state = initialState, action:ActionType):InitialStateType => {\r\n    let curState = { ...state, Property: { ...state.Property } }\r\n    switch (action.type) {\r\n        case (SET_PHOTO_SUCCESS):\r\n            curState.Property.successMessagePhoto=state.Property.successMessagePhoto\r\n            curState.Property.Account.photos = action.photos\r\n            curState.Property.successMessagePhoto=\"Photo have updated\"\r\n            return curState\r\n        case set_Account:\r\n            curState.Property.Account={...state.Property.Account}\r\n            curState.Property.Account=action.data\r\n            return curState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type SetPhotoSuccessType={\r\n  type:typeof SET_PHOTO_SUCCESS,\r\n  photos:PhotosType //Type files\r\n}\r\nlet setPhotoSuccess = (photos:PhotosType):SetPhotoSuccessType => {\r\n    return {\r\n        type: SET_PHOTO_SUCCESS,\r\n        photos\r\n    }\r\n}\r\n\r\nexport type SetAccountType={\r\n  type:typeof set_Account,\r\n  data:AccountType\r\n}\r\nlet setAccount=(data:AccountType):SetAccountType=>{\r\n    return{\r\n    type:set_Account,\r\n    data\r\n    }\r\n}\r\n\r\nexport let setPhoto = (photos:any):ThunkType => async (dispatch:any) => {\r\n    let response = await mainPage.setPhoto(photos)\r\n    dispatch(setPhotoSuccess(response.data.data.photos))\r\n}\r\nexport let setAccountThunk=(userId:number):ThunkType=> async (dispatch:any)=>{\r\n    let responce= await mainPage.getProfile(userId)\r\n    dispatch(setAccount(responce.data))\r\n}\r\nexport let setEditAccountThunk=(values:AccountType,setSave:any):ThunkType=> async (dispatch:any)=>{\r\n    let response= await mainPage.setEditAccount(values)\r\n    if(response.data.resultCode===ResultCode.Success){\r\n        dispatch(setAccount(values))\r\n        setSave(true)\r\n    }else{\r\n        dispatch(stopSubmit(\"forEdit\",{_error:response.data.messages[0]}))\r\n    }\r\n}\r\n\r\nexport default reduceEdit\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Suspense } from \"react\"\r\n\r\nlet withSuspense=(Component)=>{\r\n    return<Suspense src={\"https://i.pinimg.com/originals/3b/4e/10/3b4e109d6b621ed5a9249769afbd4dfa.gif\"}\r\n    fallback={<img  className=\"img img-rounded w-100\" />}>\r\n        <Component/>\r\n    </Suspense>\r\n\r\n}\r\n\r\nexport default withSuspense","import {NavLink} from \"react-router-dom\"\r\n\r\ntype PropsType={\r\n  show:boolean\r\n  toActive:()=>void\r\n  toOff:()=>void\r\n  logoutThunk:()=>void\r\n  isAuth:boolean\r\n}\r\n\r\nlet Header:React.FC<PropsType>=(props)=>{\r\n    let toActive=()=>{\r\n        props.toActive()\r\n    }\r\n    let toOff=()=>{\r\n        props.toOff()\r\n    }\r\n    let logoutThunk=()=>{\r\n        props.logoutThunk()\r\n    }\r\n    return <div className=\"Header sticky-top \">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"mr-3 left\">\r\n        {props.show?\r\n        <button className=\"btn btn-secondary\" onClick={toOff}>\r\n            Menu\r\n        </button>\r\n        :\r\n        <button className=\"btn btn-secondary\" onClick={toActive}>\r\n            Menu\r\n        </button>\r\n        }</div>\r\n        FloatBoot\r\n        <div className=\"right\">\r\n        {props.isAuth ?\r\n        <NavLink to=\"/Login\" className=\"Link\">\r\n            <button onClick={logoutThunk} className=\"btn btn-danger\">Logout</button>\r\n        </NavLink>\r\n        :\r\n        <NavLink to=\"/Login\" className=\"Link\">\r\n            <button className=\"btn btn-primary\">Login</button>\r\n        </NavLink>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n}\r\n\r\nexport default Header\r\n","import {mainPage,loginPage,security} from \"../../API/API\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport { AppStateType } from \"../Redux\";\r\nimport { DataType } from \"../../Types/types\";\r\nimport { ResultCode,ResultCodeWithCapthca } from \"../../API/API\";\r\n\r\ntype ThunkType=ThunkAction<Promise<void>, AppStateType,unknown,ActionType>\r\nlet set_Auth:\"Menu/setAuth\"=\"Menu/setAuth\"\r\nlet set_Captcha_Success:\"Menu/setCaptcha/Success\"=\"Menu/setCaptcha/Success\"\r\n\r\nlet initialState={\r\n    data:{\r\n        login:null,\r\n        email:null,\r\n        id:null\r\n    } as DataType,\r\n    captchaUrl:null as null | string, //if null then dont required\r\n    isAuth:false as boolean\r\n}\r\n\r\ntype InitialStateType=typeof initialState\r\ntype ActionType = SetCaptchaSuccessType | SetAuthType\r\n\r\nlet reduceAside=(state=initialState,action:ActionType):InitialStateType=>{\r\n    let curState={...state}\r\n\r\n    if(action.type===set_Auth){\r\n        curState.data={...state.data}\r\n        curState.data={...action.data}\r\n        curState.isAuth=action.log\r\n        return curState\r\n    }\r\n\r\n    if(action.type===set_Captcha_Success){\r\n        curState.captchaUrl=state.captchaUrl\r\n        curState.captchaUrl=action.url\r\n        return curState\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nexport type SetCaptchaSuccessType={\r\n  type:typeof set_Captcha_Success,\r\n  url:string | null\r\n}\r\nlet setCaptchaSuccess=(url:string | null):SetCaptchaSuccessType=>{\r\n    return{\r\n        type:set_Captcha_Success,\r\n        url\r\n    }\r\n}\r\n\r\nexport type SetAuthType={\r\n  type: typeof set_Auth,\r\n  log:boolean,\r\n  data:DataType\r\n}\r\nexport let setAuth=(id:number | null,email:string | null,login:string | null,log:boolean):SetAuthType=>{\r\n    return{\r\n        type:set_Auth,\r\n        log,\r\n        data:{\r\n        id,email,login\r\n        }\r\n    }\r\n}\r\n\r\nexport let setAuthThunk=(log=false):ThunkType=> async (dispatch:any)=>{\r\n    if(log===false){\r\n        return dispatch(setAuth(null,null,null,false))\r\n    }\r\n    let response= await mainPage.getMyProfile()\r\n    if (response.data.resultCode===ResultCode.Success){\r\n        let {id,login,email} = response.data.data\r\n        dispatch(setAuth(id,email,login,log))\r\n    }else{\r\n        dispatch(setAuth(null,null,null,false))\r\n    }\r\n}\r\nexport let loginThunk=(email:string,password:string,rememberMe=false,captcha:null | string=null):ThunkType=> async (dispatch:any)=>{\r\n    let response=await loginPage.logIn(email,password,rememberMe,captcha)\r\n    if (response.data.resultCode==ResultCode.Success){\r\n        dispatch(setAuthThunk(true))\r\n        dispatch(setCaptchaSuccess(null))\r\n    }else {\r\n        if(response.data.resultCode==ResultCodeWithCapthca.Captha){\r\n            dispatch(getCaptcha())\r\n        }\r\n        if (response.data.messages.length>0){\r\n            dispatch(stopSubmit(\"login\",{_error:response.data.messages[0]}))\r\n        }else{\r\n            dispatch(stopSubmit(\"login\",{_error:\"Some error...\"}))\r\n        }\r\n    }\r\n}\r\nexport let logoutThunk=():ThunkType=> async (dispatch:any)=>{\r\n    let response= await loginPage.logOut()\r\n    if(response.data.resultCode==ResultCode.Success){\r\n        dispatch(setAuthThunk(false))\r\n    }\r\n}\r\nexport let getCaptcha=():ThunkType=>async (dispatch:any)=>{\r\n    let response = await security.getCaptcha()\r\n    dispatch(setCaptchaSuccess(response.data.url))\r\n}\r\n\r\nexport default reduceAside\r\n","import {connect} from \"react-redux\"\r\nimport Header from \"./Header\";\r\nimport React from \"react\"\r\nimport { logoutThunk } from \"../Redux/Reducers/reduceMenu\";\r\nimport { AppStateType } from \"../Redux/Redux\";\r\n\r\ntype PropsType=OwnPropsType & MDTPType & MSTPType\r\n\r\nclass ContainerHeader extends React.Component<PropsType>{\r\n    render(){\r\n        return<Header show={this.props.show} toActive={this.props.toActive} toOff={this.props.toOff}\r\n         isAuth={this.props.isAuth}\r\n         logoutThunk={this.props.logoutThunk}/>\r\n    }\r\n}\r\n\r\ntype OwnPropsType={\r\n  show:boolean,\r\n  toActive:()=>void\r\n  toOff:()=>void\r\n}\r\ntype MDTPType={logoutThunk:()=>void}\r\ntype MSTPType={\r\n  isAuth:boolean\r\n}\r\nlet mapStateToProps=(state:AppStateType)=>{\r\n    return {\r\n        data:state.menu.data,\r\n        isAuth:state.menu.isAuth\r\n    }\r\n}\r\n\r\nexport default connect<MSTPType,MDTPType,OwnPropsType,AppStateType>(mapStateToProps,{\r\n    logoutThunk})(ContainerHeader)\r\n","import { NavLink } from \"react-router-dom\"\r\nimport React from \"react\";\r\n\r\ntype PropsType={}\r\n\r\nlet aside:React.FC<PropsType> =(props)=>{\r\n    return<div className=\"Aside\">\r\n        <ul className=\"list-group\" >\r\n            <li className=\"list-group-item\">\r\n                <NavLink to=\"/Main\" className=\"Link\" activeClassName=\"LinkActive\">\r\n                    Main\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <NavLink to=\"/Message\" className=\"Link\" activeClassName=\"LinkActive\">\r\n                    Message\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <NavLink to=\"/Friends\" className=\"Link\" activeClassName=\"LinkActive\">\r\n                    Friends\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <NavLink to=\"/Groups\" className=\"Link\" activeClassName=\"LinkActive\">\r\n                    Groups\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <NavLink to=\"/Audio\" className=\"Link\" activeClassName=\"LinkActive\">\r\n                    Audio\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <NavLink to=\"/Video\" className=\"Link\" activeClassName=\"LinkActive\">\r\n                    Video\r\n                </NavLink>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <NavLink to=\"/Photo\" className=\"Link\" activeClassName=\"LinkActive\">\r\n                    Photo\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n}\r\n\r\nexport default aside\r\n","import React from \"react\";\r\n\r\n\r\nlet Footer=React.memo(()=>{\r\n    return<div className=\"Footer\">\r\n        Finish\r\n    </div>\r\n})\r\n\r\nexport default Footer","import { reduxForm,Field } from \"redux-form\";\r\nimport { requiredField,maxLengthCreator } from \"../Validates/ValidateForText\";\r\nimport LoginInput from \"../Bricks/LoginInput\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet maxLength100=maxLengthCreator(100)\r\n\r\nlet LoginForm =(props)=>{\r\n    return<form onSubmit={props.handleSubmit}>\r\n    <div className=\"Login container px-4\">\r\n        <h1 align=\"center\" color=\"white\">Login</h1>\r\n        <div className=\"d-flex mt-2\">\r\n            Email: \r\n            <Field name={\"email\"} component={LoginInput} \r\n            placeholder=\"Enter Email\"  \r\n            validate={[requiredField,maxLength100]}/>\r\n        </div>\r\n        <div className=\"d-flex mt-2\">\r\n            Password: \r\n            <Field name={\"password\"} component={LoginInput}\r\n            placeholder=\"Enter Password\" \r\n            type=\"password\" validate={[requiredField,maxLength100]}/>\r\n        </div>\r\n        <div className=\"d-flex mt-2\">\r\n            Remember Me <Field name={\"rememberMe\"} component={\"input\"}\r\n            className=\"form-check-input\" type=\"checkbox\"/>\r\n        </div>\r\n        <div className=\"mt-2\">\r\n            {props.captcha && <img className=\"rounded\" \r\n            src={props.captcha} />}\r\n        </div>\r\n        <div className=\"d-flex mt-2\">\r\n            {props.captcha && <Field name={\"captcha\"} component={LoginInput}\r\n            validate={[requiredField]}/>}\r\n        </div>\r\n        <div className=\"text-danger\">\r\n            {props.error}\r\n        </div>\r\n        <button className=\"btn btn-success w-100 btnInMessage\">\r\n            Success\r\n        </button>\r\n    </div>\r\n    </form>\r\n}\r\nlet LoginReduxForm=reduxForm({form:\"login\"})(LoginForm)\r\n\r\nlet Login=(props)=>{\r\n\r\n    let login=(value)=>{\r\n        props.loginThunk(value.email,value.password,value.rememberMe,value.captcha)\r\n    }\r\n\r\n    if(props.isAuth===true){\r\n        return <Redirect to=\"/Main\" />\r\n    }\r\n\r\n    return<div>\r\n        <LoginReduxForm captcha={props.captcha} onSubmit={login}/>\r\n    </div>\r\n}\r\n\r\nexport default Login","import { connect } from \"react-redux\"\r\nimport Login from \"./Login\";\r\nimport { loginThunk,logoutThunk } from \"../Redux/Reducers/reduceMenu\";\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n    isAuth:state.menu.isAuth,\r\n    captcha:state.menu.captchaUrl\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{\r\n    loginThunk})(Login)","import { setAuthThunk } from \"./reduceMenu\";\r\nlet set_Init:\"App/set_Init\"=\"App/set_Init\"\r\n\r\nlet initialState={\r\n    init:false as boolean\r\n}\r\n\r\ntype InititalStateType=typeof initialState\r\ntype AccountType=SetInitType\r\n\r\nlet reduceApp=(state=initialState,action:AccountType):InititalStateType=>{\r\n    switch(action.type){\r\n        case set_Init:\r\n            return{\r\n                ...state,\r\n                init:true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type SetInitType={\r\n  type:typeof set_Init\r\n}\r\nlet setInit=():SetInitType=>{\r\n    return{\r\n        type:set_Init\r\n    }\r\n}\r\n\r\nexport let setInitThunk=()=>{\r\n    return(dispatch:any)=>{\r\n        let promise=dispatch(setAuthThunk(true));\r\n        promise.then(()=>{\r\n            dispatch(setInit())\r\n        })\r\n    }\r\n}\r\n\r\nexport default reduceApp\r\n","import logo from './logo.svg';\nimport { connect } from \"react-redux\";\nimport withSuspense from \"./HOCS/withSuspense\";\nimport Loader from \"./Loader\";\nimport './App.css';\nimport \"./bootstrap.min.css\";\nimport React from \"react\";\nimport ContainerHeader from \"./Header/ContainerHeader\";\nimport Aside from \"./Aside/Aside\";\nimport Footer from \"./Footer/Footer\";\n\nimport ContainerLogin from \"./Login/ContainerLogin\";\n\nimport { Route,Redirect,Switch } from 'react-router-dom';\nimport { setInitThunk } from \"./Redux/Reducers/reduceApp\";\n\n//Last pack which will be load if need(React.lazy(()=>import(\"path\")))\nconst ContainerMain = React.lazy(()=>import( \"./Article/Main/ContainerMain\" ))\nconst ContainerMessage= React.lazy(()=>import(\"./Article/Message/ContainerMessage\"))\nconst ContainerFriends=React.lazy(()=>import(\"./Article/Friends/ContainerFriends\"))\nconst ContainerGroups=React.lazy(()=>import(\"./Article/Groups/ContainerGroups\"))\nconst ContainerAudio=React.lazy(()=>import(\"./Article/Audio/ContainerAudio\"))\nconst ContainerVideo=React.lazy(()=>import(\"./Article/Video/ContainerVideo\"))\nconst ContainerPhoto=React.lazy(()=>import(\"./Article/Photo/ContainerPhoto\"))\nconst ContainerAddFriend=React.lazy(()=>import(\"./Article/Friends/AddFriend/ContainerAddFriend\"))\nconst ContainerEdit=React.lazy(()=>import(\"./Article/Edit/ContainerEdit\"))\n\nclass App extends React.Component {\n  componentDidMount(){\n    this.props.setInitThunk()\n    window.addEventListener(\"unhandledrejection\",this.catchError)\n  }\n  catchError(promiseRejectionEvent){\n    alert(promiseRejectionEvent)\n  }\n  //Switch for aside true/false\n  state={\n    show:true\n  }\n  toActive=()=>{\n    this.setState({\n      show:true\n    })\n  }\n  toOff=()=>{\n    this.setState({\n      show:false\n    })\n  }\n  render(){\n  //check on init\n  if(!this.props.isInit){\n    return <Loader/>\n  }\n  return<div>\n      <ContainerHeader toOff={this.toOff} \n      toActive={this.toActive}\n      show={this.state.show}/>\n      <div className=\"row mt-4 mb-4\">\n      <div className={this.state.show?\"col-md-3\":\"\"}>\n        {this.state.show&&<div className=\"Aside\">\n          <Aside/>\n        </div>}\n      </div>\n      <div className={this.state.show?\"col-md-9\":\"col-md-12\"}>\n        <div className=\"Article\">\n          <Switch>\n            <Route path=\"/Main/:userId?\" render={()=>{return withSuspense(ContainerMain)}}/>\n            <Route path=\"/Message/:userId?\" render={()=>{return withSuspense(ContainerMessage)}} />\n            <Route path=\"/Friends\" render={()=>{return withSuspense(ContainerFriends)}}/>\n            <Route path=\"/Groups\" render={()=>{return withSuspense(ContainerGroups)}}/>\n            <Route path=\"/Audio\" render={()=>{return withSuspense(ContainerAudio)}}/>\n            <Route path=\"/Video\" render={()=>{return withSuspense(ContainerVideo)}}/>\n            <Route path=\"/Photo\" render={()=>{return withSuspense(ContainerPhoto)}}/>\n            <Route path=\"/AddFriend\" render={()=>{return withSuspense(ContainerAddFriend)}}/>\n            <Route path=\"/Edit\" render={()=>{return withSuspense(ContainerEdit)}}/>\n            <Route path=\"/Login\" render={()=>{return <ContainerLogin/>}}/>\n            <Route path=\"*\" render={()=>{return <Redirect to=\"/Main\"/>}}/>\n          </Switch>\n        </div>\n      </div>\n      </div>\n      <Footer/>\n    </div>\n  }\n}\n\nlet mapStateToProps=(state)=>{\n  return{\n    isInit:state.app.init\n  }\n}\n\nexport default connect(mapStateToProps,{setInitThunk})(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nexport type FriendType={\r\n  name:string,\r\n  discription:string,\r\n  img:string\r\n}\r\nlet initialState={\r\n    Property:{\r\n        friendsData:[\r\n            {name:\"Ivan\",discription:\"Live in Moscow\",img:\"https://yt3.ggpht.com/a/AATXAJxGTeRSzkZFyXYGW-1iXZQMQfq2pmBMcEnUlvXU=s900-c-k-c0xffffffff-no-rj-mo\"},\r\n            {name:\"Max\",discription:\"Live in London\",img:\"https://yt3.ggpht.com/a/AATXAJy5DXUbMMJvKhQ7ZE0gmrlXZInoEbb2bXpJlCAp=s900-c-k-c0xffffffff-no-rj-mo\"},\r\n            {name:\"Alex\",discription:\"Live in USA\",img:\"https://im0-tub-ru.yandex.net/i?id=27284d36a7fdeca06ad38512f989c629&n=13\"}\r\n        ] as Array<FriendType>\r\n    }\r\n}\r\n\r\nexport type InitialStateType=typeof initialState\r\n\r\nlet reduceFriends=(state=initialState,action:any):InitialStateType=>{\r\n    return state\r\n}\r\n\r\nexport default reduceFriends\r\n","\r\n\r\nexport type GroupType={\r\n  name:string,\r\n  discription:string,\r\n  followers:number,\r\n  img:string,\r\n  way:string\r\n}\r\nlet initialState={\r\n    Property:{\r\n        groupsData:[\r\n            {name:\"React\",discription:\"Discuss new technologies\",followers:1303,img:\"https://pbs.twimg.com/profile_images/812005554969255936/0_tpwlVv.jpg\",way:\"https://reactjs.org/\"},\r\n            {name:\"JavaScript\",discription:\"New commands\",followers:21008,img:\"https://www.ascendtraining.com/wp-content/uploads/2015/06/javascript.png\",way:\"https://www.udemy.com/course/javascript_full/?couponCode=SPECIALOFFER&yclid=335011098404883206&utm_source=yandex-intl&utm_medium=udemyads&utm_campaign=YX-DSA_la.RU_cc.RU&utm_term=_._pl_none_._pd_lang%3Dru-ru_._ti_1107133_._kw__._&utm_content=_._ag_4164914331_._ad_0_._de_desktop_._lo_%d0%a1%d0%b0%d0%bd%d0%ba%d1%82-%d0%9f%d0%b5%d1%82%d0%b5%d1%80%d0%b1%d1%83%d1%80%d0%b3\"},\r\n            {name:\"Bootstrap\",discription:\"New templates and design\",followers:40812,img:\"https://pbs.twimg.com/profile_images/1273081551354396672/-Tzadxix.jpg\",way:\"https://bootstrap5.ru/\"},\r\n            {name:\"Redux\",discription:\"FLUX and more\",followers:1244,img:\"https://kiral.co/wp-content/uploads/2019/12/logo-redux.jpg\",way:\"https://redux.js.org/\"}\r\n        ] as Array<GroupType>\r\n    }\r\n}\r\n\r\nexport type InitialStateType=typeof initialState\r\n\r\nlet reduceGroups=(state=initialState,action:any):InitialStateType=>{\r\n    return state\r\n}\r\n\r\nexport default reduceGroups\r\n","import {createStore, combineReducers,applyMiddleware,compose } from \"redux\";\r\nimport reduceMain from \"./Reducers/reduceMain\";\r\nimport reduceMessage from \"./Reducers/reduceMessage\";\r\nimport reduceFriends from \"./Reducers/reduceFriends\";\r\nimport reduceGroups from \"./Reducers/reduceGroups\";\r\nimport reduceAudio from \"./Reducers/reduceAudio\";\r\nimport reduceVideo from \"./Reducers/reduceVideo\";\r\nimport reducePhoto from \"./Reducers/reducePhoto\";\r\nimport reduceAddFriend from \"./Reducers/reduceAddFriend\";\r\nimport reduceMenu from \"./Reducers/reduceMenu\";\r\nimport reduceEdit from \"./Reducers/reduceEdit\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport reduceApp from \"./Reducers/reduceApp\";\r\n\r\n//combineReducers- function which do object for state\r\nlet rootReducer=combineReducers({\r\n    mainPage:reduceMain,\r\n    messagePage:reduceMessage,\r\n    friendsPage:reduceFriends,\r\n    groupsPage:reduceGroups,\r\n    audioPage:reduceAudio,\r\n    videoPage:reduceVideo,\r\n    photoPage:reducePhoto,\r\n    addFriendPage:reduceAddFriend,\r\n    menu:reduceMenu,\r\n    form:formReducer,\r\n    app:reduceApp,\r\n    editPage:reduceEdit\r\n})\r\n\r\ntype RootReducerType=typeof rootReducer;\r\nexport type AppStateType=ReturnType<RootReducerType>\r\n// @ts-ignore\r\nconst composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store=createStore(rootReducer,composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n// @ts-ignore\r\nwindow.store=store\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/Redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","//Validate - its function for field ,which work with value and \r\n//looking for a error\r\nexport let requiredField=value=>{\r\n    if(value) return undefined\r\n\r\n    return \"Field is required\"\r\n}\r\n\r\nexport let maxLengthCreator=(maxLengtn)=>(value)=>{\r\n    if(value && value.length>maxLengtn) return `Max length is ${maxLengtn}`\r\n\r\n    return undefined\r\n}","\r\nlet LoginInput=({input,meta, ...props})=>{\r\n    let hasError=meta.error && meta.touched\r\n    return<div className=\"d-flex mt-2\">\r\n        <div>\r\n            <input className={hasError ? \"form-control is-invalid\" : \"form-control\"}\r\n            {...props} {...input} placeholder=\"...\"  />\r\n        </div>\r\n        <div className=\"\">{hasError && meta.error}</div>\r\n    </div>\r\n}\r\n\r\nexport default LoginInput","import React from \"react\";\r\n\r\nlet Loader=()=>{\r\n    return<div>\r\n        <img className=\"img w-100\" src=\"https://filmdar.com/tms-loading.gif\" />\r\n    </div>\r\n}\r\n\r\nexport default Loader","import { act } from \"react-dom/test-utils\"\r\nimport {AudioType} from \"../../Types/types\";\r\n\r\nlet ADD_AUDIO:\"audio/ADDAUDIO\"=\"audio/ADDAUDIO\"\r\nlet DELETE_AUDIO:\"audio/DELETEAUDIO\"=\"audio/DELETEAUDIO\"\r\n\r\nlet initialState={\r\n    Property:{\r\n        audioData:[\r\n            {name:\"Radioactive\",compositor:\"Imagine Dragons\",\r\n                asrc:\"dfdf\",id:1,\r\n                img:\"https://yt3.ggpht.com/a/AATXAJzMRQnWcgWN7NOXryCmUsaxpQRIlMQjocRVhWtd=s900-c-k-c0xffffffff-no-rj-mo\"\r\n            },\r\n\r\n            {name:\"Thunder\",compositor:\"Imagine Dragons\",\r\n                asrc:\"dfdf\",id:2,\r\n                img:\"https://i.pinimg.com/736x/ab/d4/ff/abd4ff99935065528d1421168b29f572.jpg\"\r\n            },\r\n\r\n            {name:\"Believer\",compositor:\"Imagine Dragons\",\r\n                asrc:\"dfdf\",id:3,\r\n                img:\"https://www.pakocampo.com/wp-content/uploads/pakocampo/2018/12/blog_2018_12_23_a_imagine_dragons_believer_pako_campo.jpg\"\r\n            }\r\n        ] as Array<AudioType>,\r\n        lastId:3 as number\r\n    }\r\n}\r\n\r\nexport type IntialStateType=typeof initialState\r\ntype ActionType = DeleteAudioType | AddAudioType  ;\r\nlet reduceAudio=(state=initialState,action:ActionType):IntialStateType=>{\r\n    let newState={...state}\r\n    newState.Property={...state.Property}\r\n    switch(action.type){\r\n        case ADD_AUDIO:\r\n            newState.Property.lastId++;\r\n            newState.Property.audioData=[...state.Property.audioData];\r\n            newState.Property.audioData.push({name:action.name,compositor:action.compositor,\r\n                asrc:action.asrc,img:action.img,id:state.Property.lastId+1})\r\n            return newState\r\n        case DELETE_AUDIO:\r\n            newState.Property.audioData=[...state.Property.audioData];\r\n            newState.Property.audioData=newState.Property.audioData.filter(a=>a.id!=action.id)\r\n            return newState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport type AddAudioType={\r\n  type:typeof ADD_AUDIO,\r\n  name:string,\r\n  compositor:string,\r\n  asrc:string,\r\n  img:string\r\n}\r\nexport let addAudio=(name:string,compositor:string,asrc:string,img:string):AddAudioType=>{\r\n    return{\r\n        type:ADD_AUDIO,\r\n        name,compositor,\r\n        asrc,img\r\n    }\r\n}\r\n\r\nexport type DeleteAudioType={\r\n  type:typeof DELETE_AUDIO,\r\n  id:number\r\n}\r\nexport let deleteAudio=(id:number):DeleteAudioType=>{\r\n    return{\r\n        type:DELETE_AUDIO,\r\n        id\r\n    }\r\n}\r\n\r\nexport default reduceAudio\r\n","import {VideoType} from \"../../Types/types\";\r\n\r\nlet ADD_VIDEO:\"video/ADDVIDEO\"=\"video/ADDVIDEO\"\r\nlet REMOVE_VIDEO:\"video/REMOVEVIDEO\"=\"video/REMOVEVIDEO\"\r\n\r\nlet initialState={\r\n    Property:{\r\n        videoData:[\r\n            {name:\"React-Way-of-Samurai\",compositor:\"IT-Kamasutra\",\r\n                vsrc:\"\",id:1\r\n            }\r\n        ] as Array<VideoType>,\r\n        lastId:1 as number\r\n    }\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nlet reduceVideo=(state=initialState,action:ActionType):InitialStateType =>{\r\n    switch(action.type){\r\n        case ADD_VIDEO:\r\n            return {...state,Property:\r\n                {videoData:[...state.Property.videoData,{\r\n                    name:action.name,compositor:action.compositor,\r\n                    vsrc:action.vsrc,id:state.Property.lastId+1\r\n                }],lastId:state.Property.lastId++}}\r\n        case REMOVE_VIDEO:\r\n            return{...state,Property:{\r\n                videoData:\r\n                state.Property.videoData.filter(e=>e.id != action.id)\r\n                ,lastId:state.Property.lastId},\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType=AddVideoType | RemoveVideoType\r\n\r\nexport type AddVideoType = {\r\n    type:typeof ADD_VIDEO\r\n    name:string | null,\r\n    compositor:string | null,\r\n    vsrc:string | null\r\n}\r\nexport let AddVideo=(name:string | null,compositor:string | null,vsrc:string | null):AddVideoType=>{\r\n    return{\r\n        type:ADD_VIDEO,\r\n        name,compositor,\r\n        vsrc\r\n    }\r\n}\r\n\r\nexport type RemoveVideoType={\r\n    type:typeof REMOVE_VIDEO,\r\n    id:number\r\n}\r\nexport let RemoveVideo=(id:number):RemoveVideoType=>{\r\n    return{\r\n        type:REMOVE_VIDEO,\r\n        id\r\n    }\r\n}\r\n\r\nexport default reduceVideo\r\n","\r\nlet ADD_PHOTO:\"reducePhoto/ADD_PHOTO\"=\"reducePhoto/ADD_PHOTO\"\r\nlet REMOVE_PHOTO:\"reducePhoto/REMOVE_PHOTO\"=\"reducePhoto/REMOVE_PHOTO\"\r\n\r\n\r\nexport type PhotoType={\r\n  name:string | null,\r\n  img:string | null,\r\n  id:number\r\n}\r\nlet initialState={\r\n    Property:{\r\n        photoData:[\r\n            {name:\"JS\",img:\"https://avatars.mds.yandex.net/get-zen_doc/1936915/pub_5eebcea9702c4a7f9ab8c531_5eebda384e8d5c252c06efa7/scale_1200\",id:1},\r\n            {name:\"React\",img:\"https://pbs.twimg.com/media/DZc1BqPWkAID4hr.jpg:large\",id:2},\r\n        ] as Array<PhotoType>,\r\n        lastId:2 as number\r\n    }\r\n}\r\n\r\nexport type InitialStateType=typeof initialState\r\n\r\nlet reducePhoto=(state=initialState,action:ActionType):InitialStateType=>{\r\n    switch(action.type){\r\n        case ADD_PHOTO:\r\n            return{...state,Property:{\r\n                photoData:[...state.Property.photoData,{\r\n                    img:action.img,\r\n                    name:action.name,\r\n                    id:state.Property.lastId+1\r\n                    }],\r\n                lastId:state.Property.lastId++\r\n                }\r\n            }\r\n        case REMOVE_PHOTO:\r\n            return{...state,Property:{\r\n                photoData:\r\n                state.Property.photoData.filter(e=>e.id != action.id),\r\n                lastId:state.Property.lastId\r\n              }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = AddPhotoType | RemovePhotoType\r\n\r\nexport type AddPhotoType ={\r\n  type:typeof ADD_PHOTO,\r\n  name:string | null,\r\n  img:string | null\r\n}\r\nexport let AddPhoto=(name:string | null,img:string | null):AddPhotoType=>{\r\n    return{\r\n        type:ADD_PHOTO,\r\n        name,img\r\n    }\r\n}\r\n\r\nexport type RemovePhotoType={\r\n  type:typeof REMOVE_PHOTO,\r\n  id:number\r\n}\r\nexport let RemovePhoto=(id:number):RemovePhotoType=>{\r\n    return{\r\n        type:REMOVE_PHOTO,id\r\n    }\r\n}\r\nexport default reducePhoto\r\n"],"sourceRoot":""}