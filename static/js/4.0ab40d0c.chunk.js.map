{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Article/Friends/AddFriend/SuggestFriend.tsx","Article/Friends/AddFriend/SearchBar.tsx","Redux/Selectors/userSelector.js","Bricks/Pagination.js","Article/Friends/AddFriend/AddFriend.tsx","Article/Friends/AddFriend/ContainerAddFriend.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","SuggestFriend","props","path","id","className","to","src","photos","small","name","status","followed","onClick","doFollow","disabled","followingInProgress","some","curId","doUnFollow","SearchBar","initialValues","term","validate","values","errors","onSubmit","setSubmitting","requestFriends","touched","handleChange","handleSubmit","handleBlur","isSubmitting","type","onChange","getUsersData","state","addFriendPage","Property","Suggested","getCurPage","curPage","getCountPage","countPage","getIsFetching","isFetching","getFollowingInProgress","Pagination","portionSize","Pages","e","changePage","useState","portionNumber","setPortionNumber","slice","curPages","setCurPages","newPortionNumber","newPages","AddFriend","usersData","style","height","overflowY","connect","setCountPage","doFollowThunk","doUnFollowThunk","requestFriendsThunk","useEffect","map","u","Loader","page","target"],"mappings":"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","file":"static/js/4.0ab40d0c.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import {NavLink} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { addFriendPage } from \"../../../API/API\";\r\nimport React from \"react\";\r\n\r\ntype PropsType={\r\n  id:number\r\n  name:string\r\n  status:string | null\r\n  photos:{\r\n    small:string | null\r\n    large:string | null\r\n    }\r\n  followed:boolean\r\n  doFollow:(curId:number)=>void\r\n  doUnFollow:(curId:number)=>void\r\n  followingInProgress:Array<number>\r\n}\r\n\r\nlet SuggestFriend:React.FC<PropsType>=(props)=>{\r\n    let doFollow=()=>{\r\n        props.doFollow(props.id)\r\n    }\r\n\r\n    let doUnFollow=()=>{\r\n        props.doUnFollow(props.id)\r\n    }\r\n    let path=\"/Main/\"+props.id\r\n    return<div>\r\n        <div className=\"card mt-2\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <NavLink to={path}>\r\n                    <img className=\"img w-100 rounded\" src={\r\n                    props.photos.small!=null ?\r\n                    props.photos.small: \"https://yt3.ggpht.com/a/AATXAJxBIHeWWHukUiEPDTQi7B5rqpa8nZRUYARxyEGH=s900-c-k-c0x00ffffff-no-rj\"}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div className=\"col-md-10\">\r\n                    <div className=\"card-body\">\r\n                        <h1 className=\"NavLink\">{props.name}</h1>\r\n                        Status: {props.status}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                {props.followed ?\r\n                <button onClick={doFollow} disabled={props.followingInProgress.some(curId=>props.id==curId)} className=\"btn btn-danger w-100\">\r\n                    UnFollow\r\n                </button>\r\n                :<button onClick={doUnFollow} disabled={props.followingInProgress.some(id=>props.id==id)} className=\"btn btn-success w-100\">\r\n                    Follow\r\n                </button>}\r\n        </div>\r\n    </div>\r\n}\r\nexport default SuggestFriend\r\n","import {Formik} from \"formik\"\r\nimport { maxLengthCreator } from \"../../../Validates/ValidateForText\";\r\nimport React from \"react\";\r\nimport { requestFriendsThunk } from \"../../../Redux/Reducers/reduceAddFriend\";\r\n\r\ntype errorType={\r\n    term:null | string\r\n}\r\ntype initValueType={\r\n    term:string\r\n}\r\ntype PropsType={\r\n  requestFriends:(term:string)=>void\r\n}\r\nconst SearchBar:React.FC<PropsType>=(props)=>{\r\n    return<div>\r\n        <Formik\r\n        initialValues={{term:\"\"} as initValueType}\r\n        validate={values=>{\r\n            const errors:errorType={\r\n                term:null\r\n            }\r\n            if(values.term.length>30){\r\n                errors.term=\"max length is 30\"\r\n                return errors\r\n            }\r\n            return {};\r\n        }}\r\n        onSubmit={(values:initValueType,{ setSubmitting })=>{\r\n            props.requestFriends(values.term)\r\n            setSubmitting(false);\r\n        }}>\r\n            {({\r\n         values,\r\n         errors,\r\n         touched,\r\n         handleChange,\r\n         handleBlur,\r\n         handleSubmit,\r\n         isSubmitting,\r\n         /* and other goodies */\r\n       }) => (\r\n         <form onSubmit={handleSubmit}>\r\n           <div className=\"d-flex\">\r\n           <input\r\n             type=\"search\"\r\n             className=\"form-control\"\r\n             name=\"term\"\r\n             onChange={handleChange}\r\n             value={values.term}\r\n           />\r\n           <button className=\"btn btn-success\" type=\"submit\" disabled={isSubmitting}>\r\n             Submit\r\n           </button>\r\n           </div>\r\n           <span className=\"text-danger\">\r\n             {touched.term && errors.term && errors.term}\r\n           </span>\r\n         </form>\r\n       )}\r\n        </Formik>\r\n    </div>\r\n}\r\n\r\nexport default SearchBar","\r\nexport let getUsersData=(state)=>{\r\n    return state.addFriendPage.Property.Suggested\r\n}\r\n\r\nexport let getCurPage=(state)=>{\r\n    return state.addFriendPage.Property.curPage\r\n}\r\n\r\nexport let getCountPage=(state)=>{\r\n    return state.addFriendPage.Property.countPage\r\n}\r\n\r\nexport let getIsFetching=(state)=>{\r\n    return state.addFriendPage.Property.isFetching\r\n}\r\n\r\nexport let getFollowingInProgress=(state)=>{\r\n    return state.addFriendPage.Property.followingInProgress\r\n}","import { useEffect,useState } from \"react\";\r\n\r\nlet Pagination=({portionSize,...props})=>{\r\n    //Create all pages\r\n    let Pages=[]\r\n    for(let i=1;i<=props.countPage;i++){\r\n        let e=null\r\n        if(props.curPage==i){\r\n            e=<button id={i} className=\"btn btn-light\"\r\n            onClick={props.changePage}>\r\n                {i}\r\n            </button>\r\n        }else{\r\n            e=<button id={i} className=\"btn btn-primary\"\r\n            onClick={props.changePage}>\r\n                {i}\r\n            </button>\r\n        }\r\n        Pages.push(e)\r\n    }\r\n\r\n    //To understand where curPage\r\n    let i=1\r\n    while(props.curPage >portionSize*i){\r\n        i++\r\n    }\r\n\r\n    //for next and prev\r\n    let [portionNumber,setPortionNumber]=useState(i)\r\n    let [curPages,setCurPages]=useState([...Pages].slice(portionSize*(i-1),portionSize*i))\r\n    let onNext=()=>{\r\n        let newPortionNumber=portionNumber+1\r\n        setPortionNumber(newPortionNumber)\r\n        let newPages=[...Pages].slice((newPortionNumber-1)*portionSize,(newPortionNumber-1)*portionSize+portionSize)\r\n        setCurPages(newPages)\r\n    }\r\n    let onPrev=()=>{\r\n        let newPortionNumber=portionNumber-1\r\n        setPortionNumber(newPortionNumber)\r\n        let newPages=[...Pages].slice((newPortionNumber-1)*portionSize,(newPortionNumber-1)*portionSize+portionSize)\r\n        setCurPages(newPages)\r\n    }\r\n\r\n    //render\r\n    return<div>\r\n        {portionNumber>1 &&\r\n        <button onClick={onPrev} className=\"btn btn-success\">\r\n            Prev\r\n        </button>}\r\n        {curPages}\r\n        {(portionNumber)*portionSize<props.countPage &&\r\n        <button onClick={onNext} className=\"btn btn-success\">\r\n            Next\r\n        </button>}\r\n    </div>\r\n}\r\nexport default Pagination\r\n","import React from \"react\";\r\nimport Pagination from \"../../../Bricks/Pagination\"\r\nimport SearchBar from \"./SearchBar\"\r\n\r\ntype PropsType={\r\n  usersData:any // is array with jsx\r\n  curPage:number\r\n  requestFriends:(term:string)=>void\r\n  changePage:(curPage:number)=>void\r\n  countPage:number | null\r\n}\r\nlet AddFriend:React.FC<PropsType>=({usersData, ...props})=>{\r\n    let requestFriends=():void=>{\r\n        props.requestFriends(\"\")\r\n    }\r\n    return<div>\r\n        <div>\r\n        <SearchBar requestFriends={props.requestFriends} />\r\n        </div>\r\n        <div className=\"right\"><Pagination {...props} portionSize={5}  /></div>\r\n        <br />\r\n        <div style={{height:'700px',overflowY:'scroll'}}>\r\n            {usersData}\r\n        </div>\r\n        <button onClick={requestFriends} className=\"btn btn-success w-100\">\r\n            ShowMore\r\n        </button>\r\n    </div>\r\n}\r\n\r\nexport default AddFriend\r\n","import { connect } from \"react-redux\";\r\nimport { requestFriendsThunk,doUnFollowThunk,doFollowThunk,setProgress,setButtonDisabled,setFetching,doFollow,doUnFollow,showMore,changePage,setCountPage } from \"../../../Redux/Reducers/reduceAddFriend\";\r\nimport AddFriend from \"./AddFriend\";\r\nimport React, { useEffect } from \"react\";\r\nimport { getUsersData,getCurPage,getCountPage,getIsFetching,getFollowingInProgress } from \"../../../Redux/Selectors/userSelector\";\r\nimport *  as axios from \"axios\";\r\nimport SuggestedFriend from \"./SuggestFriend\";\r\nimport Loader from \"../../../Loader\";\r\nimport { AppStateType } from \"../../../Redux/Redux\";\r\n\r\ntype PropsType=MDTPType & MSTPType\r\nlet AddFriendAPIHoocks:React.FC<PropsType>=(props)=>{\r\n    useEffect(()=>{\r\n        requestFriends()\r\n    },[])\r\n    let requestFriends=(term:string=\"\")=>{\r\n        props.requestFriendsThunk(props.curPage,term)\r\n    }\r\n\r\n    let changePage=(page:any):void=>{ //Html element\r\n        if(!page.target){\r\n            props.changePage(page)\r\n            requestFriends()\r\n        }else{\r\n            props.changePage(page.target.id)\r\n            requestFriends()\r\n        }\r\n    }\r\n\r\n    let usersData=props.usersData.map(u=>{\r\n        return <SuggestedFriend name={u.name} status={u.status}\r\n        followed={u.followed} photos={u.photos} doFollow={props.doFollowThunk}\r\n        doUnFollow={props.doUnFollowThunk} id={u.id}\r\n        followingInProgress={props.followingInProgress}  />\r\n        })\r\n    return<div>\r\n        { props.isFetching?<Loader/>:\r\n        <AddFriend usersData={usersData} curPage={props.curPage}\r\n        changePage={changePage} requestFriends={requestFriends}\r\n        countPage={props.countPage}/>\r\n        }\r\n    </div>\r\n}\r\n\r\n// class AddFriendAPI extends React.Component{\r\n//\r\n//     componentDidMount(){\r\n//         this.requestFriends()\r\n//\r\n//     }\r\n//\r\n//     requestFriends=()=>{\r\n//         this.props.requestFriendsThunk(this.props.curPage)\r\n//     }\r\n//\r\n//     changePage=(page)=>{\r\n//         this.props.changePage(page.target.id)\r\n//         this.requestFriends()\r\n//     }\r\n//\r\n//     render=()=>{\r\n//         let curPages=[]\r\n//         for(let i=1;i<=this.props.countPage;i++){\r\n//             let e=null;\r\n//             if (this.props.curPage==i){\r\n//                 e=<button id={i} className=\"btn btn-light\" onClick={this.changePage}>{i}</button>\r\n//             }\r\n//             else{\r\n//                 e=<button id={i} className=\"btn btn-primary\" onClick={this.changePage}>{i}</button>\r\n//             }\r\n//             curPages.push(e)\r\n//         }\r\n//\r\n//         let usersData=this.props.usersData.map(u=>{\r\n//             return <SuggestedFriend name={u.name} status={u.status}\r\n//             followed={u.followed} photos={u.photos} doFollow={this.props.doFollowThunk}\r\n//             doUnFollow={this.props.doUnFollowThunk} id={u.id}\r\n//             setButtonDisabled={this.props.setButtonDisabled} followingInProgress={this.props.followingInProgress}  />\r\n//             })\r\n//         return<div>\r\n//             { this.props.isFetching?<Loader/>:\r\n//             <AddFriend usersData={usersData}\r\n//             curPages={curPages}\r\n//             requestFriends={this.requestFriends}/>\r\n//             }\r\n//         </div>\r\n//     }\r\n// }\r\n\r\ntype MSTPType={\r\n  usersData:Array<any>, // i dont remember what here the object:)\r\n  curPage:number,\r\n  countPage:null | number,\r\n  isFetching:boolean,\r\n  followingInProgress:Array<number>\r\n}\r\ntype MDTPType={\r\n  changePage:(curPage:number)=>void\r\n  setCountPage:(count:number)=>void\r\n  doFollowThunk:(id:number)=>void\r\n  doUnFollowThunk:(id:number)=>void\r\n  requestFriendsThunk:(page:number,term?:string)=>void\r\n}\r\ntype OwnPropsType={}\r\nlet mapStateToProps=(state:AppStateType):MSTPType=>{\r\n    return{\r\n    usersData:getUsersData(state),\r\n    curPage:getCurPage(state),\r\n    countPage:getCountPage(state),\r\n    isFetching:getIsFetching(state),\r\n    followingInProgress:getFollowingInProgress(state)\r\n    }\r\n}\r\n//StateProps,DispatchProps,OwnProps,State\r\nexport default connect<MSTPType,MDTPType,OwnPropsType,AppStateType>(mapStateToProps,{\r\n    changePage,setCountPage,\r\n    doFollowThunk,doUnFollowThunk,\r\n    requestFriendsThunk\r\n    })(AddFriendAPIHoocks)\r\n"],"sourceRoot":""}